// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMS_API;

#nullable disable

namespace PMS_API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220715060447_seeding_status_update")]
    partial class seeding_status_update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PMS_API.Achievements", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"), 1L, 1);

                    b.Property<byte[]>("AchievementImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("AchievementTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("base64header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AchievementId");

                    b.HasIndex("AchievementTypeId");

                    b.HasIndex("ProfileId");

                    b.ToTable("achievements");

                    b.HasData(
                        new
                        {
                            AchievementId = 1,
                            AchievementTypeId = 1,
                            IsActive = true,
                            ProfileId = 1,
                            base64header = "abc"
                        },
                        new
                        {
                            AchievementId = 2,
                            AchievementTypeId = 2,
                            IsActive = true,
                            ProfileId = 2,
                            base64header = "abc"
                        },
                        new
                        {
                            AchievementId = 3,
                            AchievementTypeId = 1,
                            IsActive = true,
                            ProfileId = 3,
                            base64header = "abc"
                        },
                        new
                        {
                            AchievementId = 4,
                            AchievementTypeId = 2,
                            IsActive = true,
                            ProfileId = 4,
                            base64header = "abc"
                        },
                        new
                        {
                            AchievementId = 5,
                            AchievementTypeId = 1,
                            IsActive = true,
                            ProfileId = 5,
                            base64header = "abc"
                        });
                });

            modelBuilder.Entity("PMS_API.AchievementType", b =>
                {
                    b.Property<int>("AchievementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementTypeId"), 1L, 1);

                    b.Property<string>("AchievementTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("AchievementTypeId");

                    b.ToTable("achievementtype");

                    b.HasData(
                        new
                        {
                            AchievementTypeId = 1,
                            AchievementTypeName = "Awards",
                            IsActive = true
                        },
                        new
                        {
                            AchievementTypeId = 2,
                            AchievementTypeName = "Certificates",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PMS_API.BreakDuration", b =>
                {
                    b.Property<int>("BreakDuration_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreakDuration_Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndingDuration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDuration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BreakDuration_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("breakDurations");

                    b.HasData(
                        new
                        {
                            BreakDuration_Id = 1,
                            EndingDuration = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PersonalDetailsId = 1,
                            StartingDuration = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BreakDuration_Id = 2,
                            EndingDuration = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PersonalDetailsId = 2,
                            StartingDuration = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BreakDuration_Id = 3,
                            EndingDuration = new DateTime(2020, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PersonalDetailsId = 3,
                            StartingDuration = new DateTime(2020, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BreakDuration_Id = 4,
                            EndingDuration = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PersonalDetailsId = 4,
                            StartingDuration = new DateTime(2019, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BreakDuration_Id = 5,
                            EndingDuration = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PersonalDetailsId = 5,
                            StartingDuration = new DateTime(2021, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BreakDuration_Id = 6,
                            EndingDuration = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            PersonalDetailsId = 5,
                            StartingDuration = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PMS_API.ChangePassword", b =>
                {
                    b.Property<int>("ChangePasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChangePasswordId"), 1L, 1);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChangePasswordId");

                    b.ToTable("ChangePasswords");
                });

            modelBuilder.Entity("PMS_API.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollegeId"), 1L, 1);

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CollegeId");

                    b.ToTable("Colleges");

                    b.HasData(
                        new
                        {
                            CollegeId = 1,
                            CollegeName = "SKCET",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 2,
                            CollegeName = "SKCT",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 3,
                            CollegeName = "BIT",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 4,
                            CollegeName = "SA",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 5,
                            CollegeName = "PSNA",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 6,
                            CollegeName = "CIT",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 7,
                            CollegeName = "PSG",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 8,
                            CollegeName = "Kumaraguru",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 9,
                            CollegeName = "MIT",
                            IsActive = true
                        },
                        new
                        {
                            CollegeId = 10,
                            CollegeName = "GCT",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PMS_API.CountryCode", b =>
                {
                    b.Property<int>("CountryCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryCodeId"), 1L, 1);

                    b.Property<string>("CountryCodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CountryCodeId");

                    b.ToTable("CountryCodes");

                    b.HasData(
                        new
                        {
                            CountryCodeId = 1,
                            CountryCodeName = "+91",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 2,
                            CountryCodeName = "+1",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 3,
                            CountryCodeName = "+44",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 4,
                            CountryCodeName = "+61",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 5,
                            CountryCodeName = "+62",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 6,
                            CountryCodeName = "+86",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 7,
                            CountryCodeName = "+213",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 8,
                            CountryCodeName = "+355",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 9,
                            CountryCodeName = "+93",
                            IsActive = true
                        },
                        new
                        {
                            CountryCodeId = 10,
                            CountryCodeName = "+54",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PMS_API.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationId"), 1L, 1);

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DesignationId");

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            DesignationId = 1,
                            DesignationName = "HR",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 2,
                            DesignationName = "Admin",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 3,
                            DesignationName = "CEO",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 4,
                            DesignationName = "VP",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 5,
                            DesignationName = "SLO",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 6,
                            DesignationName = "DM",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 7,
                            DesignationName = "PM",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 8,
                            DesignationName = "PL",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 9,
                            DesignationName = "ML",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 10,
                            DesignationName = "TL",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 11,
                            DesignationName = "SSE",
                            IsActive = true
                        },
                        new
                        {
                            DesignationId = 12,
                            DesignationName = "SE",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PMS_API.Domain", b =>
                {
                    b.Property<int>("DomainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DomainId"), 1L, 1);

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DomainId");

                    b.ToTable("Domains");

                    b.HasData(
                        new
                        {
                            DomainId = 1,
                            DomainName = "IT",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 2,
                            DomainName = "Marketing",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 3,
                            DomainName = "R&D",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 4,
                            DomainName = "Gaming",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 5,
                            DomainName = "AI",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 6,
                            DomainName = "Logistics",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 7,
                            DomainName = "Hospitality",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 8,
                            DomainName = "Finance",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 9,
                            DomainName = "Food",
                            IsActive = true
                        },
                        new
                        {
                            DomainId = 10,
                            DomainName = "Travel",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PMS_API.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"), 1L, 1);

                    b.Property<int>("CollegeId")
                        .HasColumnType("int");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ending")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("Starting")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("ProfileId");

                    b.ToTable("educations");

                    b.HasData(
                        new
                        {
                            EducationId = 1,
                            CollegeId = 2,
                            Course = "ECE",
                            Degree = "BE",
                            Ending = 2022,
                            IsActive = true,
                            Percentage = 85.6f,
                            ProfileId = 1,
                            Starting = 2018
                        },
                        new
                        {
                            EducationId = 2,
                            CollegeId = 1,
                            Course = "IT",
                            Degree = "BTech",
                            Ending = 2022,
                            IsActive = true,
                            Percentage = 96.8f,
                            ProfileId = 2,
                            Starting = 2018
                        },
                        new
                        {
                            EducationId = 3,
                            CollegeId = 4,
                            Course = "CSE",
                            Degree = "Bsc",
                            Ending = 2022,
                            IsActive = true,
                            Percentage = 91f,
                            ProfileId = 3,
                            Starting = 2018
                        },
                        new
                        {
                            EducationId = 4,
                            CollegeId = 10,
                            Course = "CSE",
                            Degree = "ME",
                            Ending = 2022,
                            IsActive = true,
                            Percentage = 89.5f,
                            ProfileId = 4,
                            Starting = 2020
                        },
                        new
                        {
                            EducationId = 5,
                            CollegeId = 6,
                            Course = "IT",
                            Degree = "MTech",
                            Ending = 2022,
                            IsActive = true,
                            Percentage = 83.6f,
                            ProfileId = 5,
                            Starting = 2020
                        });
                });

            modelBuilder.Entity("PMS_API.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderName = "Male",
                            IsActive = true
                        },
                        new
                        {
                            GenderId = 2,
                            GenderName = "Female",
                            IsActive = true
                        },
                        new
                        {
                            GenderId = 3,
                            GenderName = "Others",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("PMS_API.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<bool>("Speak")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Write")
                        .HasColumnType("bit");

                    b.HasKey("LanguageId");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("languages");

                    b.HasData(
                        new
                        {
                            LanguageId = 1,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8085),
                            IsActive = true,
                            LanguageName = "English",
                            PersonalDetailsId = 1,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 2,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8097),
                            IsActive = true,
                            LanguageName = "Tamil",
                            PersonalDetailsId = 2,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 3,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8098),
                            IsActive = true,
                            LanguageName = "Hindi",
                            PersonalDetailsId = 3,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 4,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8099),
                            IsActive = true,
                            LanguageName = "Telugu",
                            PersonalDetailsId = 4,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 5,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8103),
                            IsActive = true,
                            LanguageName = "Malayalam",
                            PersonalDetailsId = 5,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 6,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8103),
                            IsActive = true,
                            LanguageName = "Kannada",
                            PersonalDetailsId = 3,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 7,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8104),
                            IsActive = true,
                            LanguageName = "Bengali",
                            PersonalDetailsId = 4,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 8,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8105),
                            IsActive = true,
                            LanguageName = "Marathi",
                            PersonalDetailsId = 3,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 9,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8106),
                            IsActive = true,
                            LanguageName = "Urdu",
                            PersonalDetailsId = 1,
                            Read = true,
                            Speak = true,
                            Write = true
                        },
                        new
                        {
                            LanguageId = 10,
                            CreatedOn = new DateTime(2022, 7, 15, 11, 34, 46, 495, DateTimeKind.Local).AddTicks(8107),
                            IsActive = true,
                            LanguageName = "French",
                            PersonalDetailsId = 2,
                            Read = true,
                            Speak = true,
                            Write = true
                        });
                });

            modelBuilder.Entity("PMS_API.Organisation", b =>
                {
                    b.Property<int>("OrganisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganisationId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganisationId");

                    b.ToTable("Organisations");

                    b.HasData(
                        new
                        {
                            OrganisationId = 1,
                            IsActive = true,
                            OrganisationName = "Development"
                        },
                        new
                        {
                            OrganisationId = 2,
                            IsActive = true,
                            OrganisationName = "Testing"
                        },
                        new
                        {
                            OrganisationId = 3,
                            IsActive = true,
                            OrganisationName = "Support"
                        },
                        new
                        {
                            OrganisationId = 4,
                            IsActive = true,
                            OrganisationName = "Cloud"
                        },
                        new
                        {
                            OrganisationId = 5,
                            IsActive = true,
                            OrganisationName = "Server"
                        },
                        new
                        {
                            OrganisationId = 6,
                            IsActive = true,
                            OrganisationName = "AI"
                        },
                        new
                        {
                            OrganisationId = 7,
                            IsActive = true,
                            OrganisationName = "UI/UX"
                        },
                        new
                        {
                            OrganisationId = 8,
                            IsActive = true,
                            OrganisationName = "R&D"
                        },
                        new
                        {
                            OrganisationId = 9,
                            IsActive = true,
                            OrganisationName = "HR"
                        },
                        new
                        {
                            OrganisationId = 10,
                            IsActive = true,
                            OrganisationName = "Food"
                        });
                });

            modelBuilder.Entity("PMS_API.PersonalDetails", b =>
                {
                    b.Property<int>("PersonalDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalDetailsId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objective")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("base64header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalDetailsId");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("personalDetails");

                    b.HasData(
                        new
                        {
                            PersonalDetailsId = 1,
                            DateOfBirth = new DateTime(2000, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2018, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Nationality = "Indian",
                            Objective = "My description",
                            ProfileId = 1,
                            UserId = 1,
                            base64header = "abc"
                        },
                        new
                        {
                            PersonalDetailsId = 2,
                            DateOfBirth = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2020, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Nationality = "Indian",
                            Objective = "My description",
                            ProfileId = 2,
                            UserId = 2,
                            base64header = "qwe"
                        },
                        new
                        {
                            PersonalDetailsId = 3,
                            DateOfBirth = new DateTime(2000, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Nationality = "Indian",
                            Objective = "My description",
                            ProfileId = 3,
                            UserId = 3,
                            base64header = "abc"
                        },
                        new
                        {
                            PersonalDetailsId = 4,
                            DateOfBirth = new DateTime(2000, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2018, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Nationality = "Indian",
                            Objective = "My description",
                            ProfileId = 4,
                            UserId = 4,
                            base64header = "abc"
                        },
                        new
                        {
                            PersonalDetailsId = 5,
                            DateOfBirth = new DateTime(2000, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2021, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Nationality = "Indian",
                            Objective = "My description",
                            ProfileId = 5,
                            UserId = 5,
                            base64header = "abc"
                        });
                });

            modelBuilder.Entity("PMS_API.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId");

                    b.HasIndex("ProfileStatusId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("profile");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            IsActive = true,
                            ProfileStatusId = 1,
                            UserId = 1
                        },
                        new
                        {
                            ProfileId = 2,
                            IsActive = true,
                            ProfileStatusId = 3,
                            UserId = 2
                        },
                        new
                        {
                            ProfileId = 3,
                            IsActive = true,
                            ProfileStatusId = 1,
                            UserId = 3
                        },
                        new
                        {
                            ProfileId = 4,
                            IsActive = true,
                            ProfileStatusId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ProfileId = 5,
                            IsActive = true,
                            ProfileStatusId = 2,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("PMS_API.ProfileHistory", b =>
                {
                    b.Property<int>("ProfileHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileHistoryId"), 1L, 1);

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("ProfileHistoryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("profilehistory");

                    b.HasData(
                        new
                        {
                            ProfileHistoryId = 1,
                            ApprovedDate = new DateTime(2022, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ProfileId = 1
                        },
                        new
                        {
                            ProfileHistoryId = 2,
                            ApprovedDate = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ProfileId = 3
                        },
                        new
                        {
                            ProfileHistoryId = 3,
                            ApprovedDate = new DateTime(2022, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ProfileId = 2
                        },
                        new
                        {
                            ProfileHistoryId = 4,
                            ApprovedDate = new DateTime(2022, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ProfileId = 4
                        });
                });

            modelBuilder.Entity("PMS_API.ProfileStatus", b =>
                {
                    b.Property<int>("ProfileStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileStatusId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileStatusId");

                    b.ToTable("ProfileStatuss");

                    b.HasData(
                        new
                        {
                            ProfileStatusId = 1,
                            IsActive = true,
                            ProfileStatusName = "Approved"
                        },
                        new
                        {
                            ProfileStatusId = 2,
                            IsActive = true,
                            ProfileStatusName = "Waiting"
                        },
                        new
                        {
                            ProfileStatusId = 3,
                            IsActive = true,
                            ProfileStatusName = "Declined"
                        });
                });

            modelBuilder.Entity("PMS_API.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndingMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EndingYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartingMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StartingYear")
                        .HasColumnType("int");

                    b.Property<string>("ToolsUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProfileId");

                    b.ToTable("projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Designation = "SE",
                            EndingMonth = "October",
                            EndingYear = 2019,
                            IsActive = true,
                            ProfileId = 1,
                            ProjectDescription = "Create a Profile",
                            ProjectName = "PMS",
                            StartingMonth = "October",
                            StartingYear = 2018,
                            ToolsUsed = "Figma"
                        },
                        new
                        {
                            ProjectId = 2,
                            Designation = "SSE",
                            EndingMonth = "July",
                            EndingYear = 2021,
                            IsActive = true,
                            ProfileId = 2,
                            ProjectDescription = "Monitor the Trainee",
                            ProjectName = "TMS",
                            StartingMonth = "April",
                            StartingYear = 2018,
                            ToolsUsed = "Balsamic"
                        },
                        new
                        {
                            ProjectId = 3,
                            Designation = "SE",
                            EndingMonth = "June",
                            EndingYear = 2020,
                            IsActive = true,
                            ProfileId = 3,
                            ProjectDescription = "Interview process",
                            ProjectName = "IMS",
                            StartingMonth = "January",
                            StartingYear = 2019,
                            ToolsUsed = "JIRA"
                        },
                        new
                        {
                            ProjectId = 4,
                            Designation = "ML",
                            EndingMonth = "February",
                            EndingYear = 2021,
                            IsActive = true,
                            ProfileId = 4,
                            ProjectDescription = "Award Distribution",
                            ProjectName = "AMS",
                            StartingMonth = "November",
                            StartingYear = 2020,
                            ToolsUsed = "Figma"
                        },
                        new
                        {
                            ProjectId = 5,
                            Designation = "PM",
                            EndingMonth = "September",
                            EndingYear = 2020,
                            IsActive = true,
                            ProfileId = 5,
                            ProjectDescription = "Query Management",
                            ProjectName = "QMS",
                            StartingMonth = "December",
                            StartingYear = 2019,
                            ToolsUsed = "JIRA"
                        });
                });

            modelBuilder.Entity("PMS_API.Skills", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DomainId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SkillId");

                    b.HasIndex("DomainId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            DomainId = 6,
                            IsActive = true,
                            ProfileId = 1,
                            TechnologyId = 7
                        },
                        new
                        {
                            SkillId = 2,
                            DomainId = 2,
                            IsActive = true,
                            ProfileId = 3,
                            TechnologyId = 2
                        },
                        new
                        {
                            SkillId = 3,
                            DomainId = 7,
                            IsActive = true,
                            ProfileId = 4,
                            TechnologyId = 5
                        },
                        new
                        {
                            SkillId = 4,
                            DomainId = 3,
                            IsActive = true,
                            ProfileId = 2,
                            TechnologyId = 1
                        },
                        new
                        {
                            SkillId = 5,
                            DomainId = 3,
                            IsActive = true,
                            ProfileId = 5,
                            TechnologyId = 1
                        });
                });

            modelBuilder.Entity("PMS_API.SocialMedia", b =>
                {
                    b.Property<int>("SocialMedia_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialMedia_Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonalDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("SocialMedia_Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMedia_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SocialMedia_Id");

                    b.HasIndex("PersonalDetailsId");

                    b.ToTable("SocialMedias");

                    b.HasData(
                        new
                        {
                            SocialMedia_Id = 1,
                            IsActive = true,
                            PersonalDetailsId = 5,
                            SocialMedia_Link = "www.linkedin.com",
                            SocialMedia_Name = "LinkedIn"
                        },
                        new
                        {
                            SocialMedia_Id = 2,
                            IsActive = true,
                            PersonalDetailsId = 4,
                            SocialMedia_Link = "www.telegram.com",
                            SocialMedia_Name = "Telegram"
                        },
                        new
                        {
                            SocialMedia_Id = 3,
                            IsActive = true,
                            PersonalDetailsId = 3,
                            SocialMedia_Link = "www.facebook.com",
                            SocialMedia_Name = "Facebook"
                        },
                        new
                        {
                            SocialMedia_Id = 4,
                            IsActive = true,
                            PersonalDetailsId = 2,
                            SocialMedia_Link = "www.twitter.com",
                            SocialMedia_Name = "Twitter"
                        },
                        new
                        {
                            SocialMedia_Id = 5,
                            IsActive = true,
                            PersonalDetailsId = 1,
                            SocialMedia_Link = "www.instagram.com",
                            SocialMedia_Name = "Instagram"
                        });
                });

            modelBuilder.Entity("PMS_API.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnologyId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TechnologyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = 1,
                            IsActive = true,
                            TechnologyName = "Java"
                        },
                        new
                        {
                            TechnologyId = 2,
                            IsActive = true,
                            TechnologyName = "DotNet"
                        },
                        new
                        {
                            TechnologyId = 3,
                            IsActive = true,
                            TechnologyName = "Lamp"
                        },
                        new
                        {
                            TechnologyId = 4,
                            IsActive = true,
                            TechnologyName = "BFS"
                        },
                        new
                        {
                            TechnologyId = 5,
                            IsActive = true,
                            TechnologyName = "Sql"
                        },
                        new
                        {
                            TechnologyId = 6,
                            IsActive = true,
                            TechnologyName = "Python"
                        },
                        new
                        {
                            TechnologyId = 7,
                            IsActive = true,
                            TechnologyName = "EBA"
                        },
                        new
                        {
                            TechnologyId = 8,
                            IsActive = true,
                            TechnologyName = "Angular"
                        },
                        new
                        {
                            TechnologyId = 9,
                            IsActive = true,
                            TechnologyName = "C"
                        },
                        new
                        {
                            TechnologyId = 10,
                            IsActive = true,
                            TechnologyName = "Pearl"
                        });
                });

            modelBuilder.Entity("PMS_API.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int?>("CountryCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportingPersonUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CountryCodeId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("OrganisationId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CountryCodeId = 1,
                            DesignationId = 2,
                            Email = "chittu123@gmail.com",
                            GenderId = 1,
                            IsActive = true,
                            MobileNumber = "8610805521",
                            Name = "Chitrarasu",
                            OrganisationId = 3,
                            Password = "Chitra@2321",
                            ReportingPersonUsername = "Jaya19",
                            UserName = "Chittu@25"
                        },
                        new
                        {
                            UserId = 2,
                            CountryCodeId = 1,
                            DesignationId = 2,
                            Email = "guganrb@gmail.com",
                            GenderId = 1,
                            IsActive = true,
                            MobileNumber = "9994660926",
                            Name = "Gugan",
                            OrganisationId = 1,
                            Password = "Gugan45@1924",
                            ReportingPersonUsername = "Savitha25",
                            UserName = "gugan@45"
                        },
                        new
                        {
                            UserId = 3,
                            CountryCodeId = 1,
                            DesignationId = 3,
                            Email = "harinir@gmail.com",
                            GenderId = 2,
                            IsActive = true,
                            MobileNumber = "8610806522",
                            Name = "Harini",
                            OrganisationId = 2,
                            Password = "harini@2626",
                            ReportingPersonUsername = "snigdha30",
                            UserName = "harini@22"
                        },
                        new
                        {
                            UserId = 4,
                            CountryCodeId = 2,
                            DesignationId = 3,
                            Email = "kishore45@gmail.com",
                            GenderId = 1,
                            IsActive = true,
                            MobileNumber = "8610805513",
                            Name = "Kishore",
                            OrganisationId = 1,
                            Password = "kishore@6754",
                            ReportingPersonUsername = "Jaya19",
                            UserName = "kishore@65"
                        },
                        new
                        {
                            UserId = 5,
                            CountryCodeId = 1,
                            DesignationId = 2,
                            Email = "brindham@gmail.com",
                            GenderId = 2,
                            IsActive = true,
                            MobileNumber = "9610805522",
                            Name = "Brindha",
                            OrganisationId = 4,
                            Password = "brindha@1234",
                            ReportingPersonUsername = "Savitha25",
                            UserName = "Brindha@77"
                        });
                });

            modelBuilder.Entity("PMS_API.Achievements", b =>
                {
                    b.HasOne("PMS_API.AchievementType", "achievementtype")
                        .WithMany("achievements")
                        .HasForeignKey("AchievementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Profile", "profile")
                        .WithMany("achievements")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("achievementtype");

                    b.Navigation("profile");
                });

            modelBuilder.Entity("PMS_API.BreakDuration", b =>
                {
                    b.HasOne("PMS_API.PersonalDetails", "personalDetails")
                        .WithMany("breakDuration")
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS_API.Education", b =>
                {
                    b.HasOne("PMS_API.College", "college")
                        .WithMany("education")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Profile", "profile")
                        .WithMany("education")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("college");

                    b.Navigation("profile");
                });

            modelBuilder.Entity("PMS_API.Language", b =>
                {
                    b.HasOne("PMS_API.PersonalDetails", "personalDetails")
                        .WithMany("language")
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS_API.PersonalDetails", b =>
                {
                    b.HasOne("PMS_API.Profile", "profile")
                        .WithOne("personalDetails")
                        .HasForeignKey("PMS_API.PersonalDetails", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.User", "users")
                        .WithOne("personalDetails")
                        .HasForeignKey("PMS_API.PersonalDetails", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profile");

                    b.Navigation("users");
                });

            modelBuilder.Entity("PMS_API.Profile", b =>
                {
                    b.HasOne("PMS_API.ProfileStatus", "profilestatus")
                        .WithMany()
                        .HasForeignKey("ProfileStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.User", "user")
                        .WithOne("profile")
                        .HasForeignKey("PMS_API.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profilestatus");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PMS_API.ProfileHistory", b =>
                {
                    b.HasOne("PMS_API.Profile", "profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profile");
                });

            modelBuilder.Entity("PMS_API.Projects", b =>
                {
                    b.HasOne("PMS_API.Profile", "profile")
                        .WithMany("projects")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profile");
                });

            modelBuilder.Entity("PMS_API.Skills", b =>
                {
                    b.HasOne("PMS_API.Domain", "domain")
                        .WithMany("skills")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Profile", "profile")
                        .WithMany("skills")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Technology", "technology")
                        .WithMany("skills")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("domain");

                    b.Navigation("profile");

                    b.Navigation("technology");
                });

            modelBuilder.Entity("PMS_API.SocialMedia", b =>
                {
                    b.HasOne("PMS_API.PersonalDetails", "personalDetails")
                        .WithMany("socialmedia")
                        .HasForeignKey("PersonalDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personalDetails");
                });

            modelBuilder.Entity("PMS_API.User", b =>
                {
                    b.HasOne("PMS_API.CountryCode", "countrycode")
                        .WithMany("users")
                        .HasForeignKey("CountryCodeId");

                    b.HasOne("PMS_API.Designation", "designation")
                        .WithMany("users")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Gender", "gender")
                        .WithMany("users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Organisation", "organisation")
                        .WithMany("users")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("countrycode");

                    b.Navigation("designation");

                    b.Navigation("gender");

                    b.Navigation("organisation");
                });

            modelBuilder.Entity("PMS_API.AchievementType", b =>
                {
                    b.Navigation("achievements");
                });

            modelBuilder.Entity("PMS_API.College", b =>
                {
                    b.Navigation("education");
                });

            modelBuilder.Entity("PMS_API.CountryCode", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("PMS_API.Designation", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("PMS_API.Domain", b =>
                {
                    b.Navigation("skills");
                });

            modelBuilder.Entity("PMS_API.Gender", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("PMS_API.Organisation", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("PMS_API.PersonalDetails", b =>
                {
                    b.Navigation("breakDuration");

                    b.Navigation("language");

                    b.Navigation("socialmedia");
                });

            modelBuilder.Entity("PMS_API.Profile", b =>
                {
                    b.Navigation("achievements");

                    b.Navigation("education");

                    b.Navigation("personalDetails");

                    b.Navigation("projects");

                    b.Navigation("skills");
                });

            modelBuilder.Entity("PMS_API.Technology", b =>
                {
                    b.Navigation("skills");
                });

            modelBuilder.Entity("PMS_API.User", b =>
                {
                    b.Navigation("personalDetails");

                    b.Navigation("profile");
                });
#pragma warning restore 612, 618
        }
    }
}

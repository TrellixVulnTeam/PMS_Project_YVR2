¬
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\CollegeController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[		 
Route		 
(		 
$str		 
)		 
]		  
public

 
class

 
CollegeController

 
:

  
ControllerBase

! /
{ 
private 
readonly 
ILogger 
_logger $
;$ %
public 

CollegeController 
( 
ILogger $
<$ %
CollegeController% 6
>6 7
logger8 >
)> ?
{ 
_logger 
= 
logger 
; 
} 
private 
readonly 
ICollegeServices %
collegeService& 4
=5 6
CollegeDataFactory7 I
.I J#
GetCollegeServiceObjectJ a
(a b
)b c
;c d
[ 
HttpGet 
] 
public 

IActionResult 
ViewColleges %
(% &
)& '
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ <
)< =
;= >
return 
Ok 
( 
collegeService $
.$ %
ViewColleges% 1
(1 2
)2 3
)3 4
;4 5
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$"  
$str  A
{A B
	exceptionB K
.K L
MessageL S
}S T
{T U
	exceptionU ^
.^ _

StackTrace_ i
}i j
"j k
)k l
;l m
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
}   	
}!! 
}## Ú
lC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\DesignationController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public		 
class		 !
DesignationController		 "
:		# $
ControllerBase		% 3
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 
!
DesignationController  
(  !
ILogger! (
<( )!
DesignationController) >
>> ?
logger@ F
)F G
{ 
_logger 
= 
logger 
; 
} 
private 
readonly  
IDesignationServices )
DesignationService* <
== >"
DesignationDataFactory? U
.U V'
GetDesignationServiceObjectV q
(q r
)r s
;s t
[ 
HttpGet 
] 
public 

IActionResult 
ViewDesignations )
() *
)* +
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ @
)@ A
;A B
return 
Ok 
( 
DesignationService (
.( )
ViewDesignations) 9
(9 :
): ;
); <
;< =
} 	
catch	 
( 
	Exception 
	exception #
)# $
{ 	
_logger 
. 
LogError 
( 
$"  
$str  I
{I J
	exceptionJ S
.S T
MessageT [
}[ \
{\ ]
	exception] f
.f g

StackTraceg q
}q r
"r s
)s t
;t u
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" ¡
gC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\DomainController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		 
DomainController		 
:		 
ControllerBase		  .
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 

DomainController 
( 
ILogger #
<# $
DomainController$ 4
>4 5
logger6 <
)< =
{ 
_logger 
= 
logger 
; 
} 
private 
readonly 
IDomainServices $
DomainService% 2
=3 4
DomainDataFactory5 F
.F G"
GetDomainServiceObjectG ]
(] ^
)^ _
;_ `
[ 
HttpGet 
] 
public 

IActionResult 
ViewDomains $
($ %
)% &
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ ;
); <
;< =
return 
Ok 
( 
DomainService #
.# $
ViewDomains$ /
(/ 0
)0 1
)1 2
;2 3
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$"  
$str  ?
{? @
	exception@ I
.I J
MessageJ Q
}Q R
{R S
	exceptionS \
.\ ]

StackTrace] g
}g h
"h i
)i j
;j k
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" ð
fC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\LoginController.cs
	namespace 	
PMS_API
 
{ 
[ 
Route 

(
 
$str "
)" #
]# $
public		 

class		 
LoginController		  
:		! "

Controller		" ,
{		, -
private 
readonly 
ILoginService &
_loginServices' 5
;5 6
private	 
readonly 
ILogger !
<! "
LoginController" 1
>1 2
_logger3 :
;: ;
public 
LoginController 
( 
ILoginService ,
loginServices- :
,: ;
ILogger< C
<C D
LoginControllerD S
>S T
loggerU [
)[ \
{ 	
_loginServices 
= 
loginServices *
;* +
_logger 
= 
logger 
; 
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
public 
IActionResult 
	AuthLogin &
(& '
string' -
Username. 6
,6 7
string8 >
password? G
)G H
{ 	
try 
{ 
var 
Result 
= 
_loginServices +
.+ ,
	AuthLogin, 5
(5 6
Username6 >
,> ?
password@ H
)H I
;I J
return 
Ok 
( 
Result  
)  !
;! "
} 
catch 
( 
ValidationException &
validationException' :
): ;
{ 
_logger 
. 
LogInformation &
(& '
$"' )
$str) G
{G H
validationExceptionH [
.[ \
Message\ c
}c d
"d e
)e f
;f g
return 

BadRequest !
(! "
new" %
{% &
message& -
=- .
validationException. A
.A B
MessageB I
}I J
)J K
;K L
}   
catch!! 
(!! 
	Exception!! 
	exception!! &
)!!& '
{"" 
_logger## 
.## 
LogInformation## &
(##& '
$"##' )
$str##) G
{##G H
	exception##H Q
.##Q R
Message##R Y
}##Y Z
"##Z [
)##[ \
;##\ ]
return$$ 
Problem$$ 
($$ 
$str$$ B
)$$B C
;$$C D
}%% 
}&& 	
}(( 
})) ç
eC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\MailController.cs
	namespace 	
PMS_API
 
; 
[ 
Route 
( 
$str 
) 
] 
[		 
ApiController		 
]		 
public

 
class

 
MailController

 
:

 
ControllerBase

 ,
{ 
private 
readonly 
IMailService !
_mailService" .
;. /
public 

MailController 
( 
IMailService &
mailService' 2
)2 3
{ 
_mailService 
= 
mailService "
;" #
} 
[ 
HttpPost 
( 
$str 
) 
] 
public 

async 
Task 
< 
IActionResult #
># $
SendMail% -
(- .
[. /
FromForm/ 7
]7 8
MailRequest8 C
requestD K
)K L
{ 
try 
{ 	
await 
_mailService 
. 
SendEmailAsync -
(- .
request. 5
,5 6
true6 :
): ;
;; <
return 
Ok 
( 
) 
; 
} 	
catch 
( 
	Exception 
) 
{ 	
throw 
; 
} 	
} 
} ã
mC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\OrganisationController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		 "
OrganisationController		 #
:		$ %
ControllerBase		& 4
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 
"
OrganisationController !
(! "
ILogger" )
<) *"
OrganisationController* @
>@ A
loggerB H
)H I
{ 
_logger 
= 
logger 
; 
} 
private 
readonly !
IOrganisationServices *
organisationService+ >
=? @#
OrganisationDataFactoryA X
.X Y(
GetOrganisationServiceObjectY u
(u v
)v w
;w x
[ 
HttpGet 
] 
public 

IActionResult 
ViewOrganisations *
(* +
)+ ,
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ A
)A B
;B C
return 
Ok 
( 
organisationService )
.) *
ViewOrganisations* ;
(; <
)< =
)= >
;> ?
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$" 
$str J
{J K
	exceptionK T
.T U
MessageU \
}\ ]
{] ^
	exception^ g
.g h

StackTraceh r
}r s
"s t
)t u
;u v
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" µ
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\ProfileController.cs
	namespace 	
PMS_API
 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 "
)

" #
]

# $
public 

class 
ProfileController "
:# $

Controller% /
{ 
private 
readonly 
IProfileService (
_profileService) 8
;8 9
private 
readonly 
IMailService %
_mailService& 2
;2 3
private 
readonly 
ILogger  
_logger! (
;( )
public 
ProfileController  
(  !
IProfileService! 0
profileService1 ?
,? @
ILoggerA H
<H I
ProfileControllerI Z
>Z [
logger\ b
,b c
IMailServiced p
mailServiceq |
)| }
{ 	
_profileService 
= 
profileService ,
;, -
_logger 
= 
logger 
; 
_mailService 
= 
mailService &
;& '
} 	
[ 	
HttpGet	 
] 
[	 

HttpPost
 
] 
public 
IActionResult 

AddProfile '
(' (
Profile( /
profile0 7
)7 8
{ 	
if 
( 
profile 
== 
null 
)  
{ 
_logger 
. 
LogError  
(  !
$str! a
)a b
;b c
return 

BadRequest !
(! "
new" %
{& '
message( /
=0 1
$str2 G
}H I
)I J
;J K
} 
try 
{   
return!! 
_profileService!! &
.!!& '

AddProfile!!' 1
(!!1 2
profile!!2 9
)!!9 :
?!!; <
Ok!!= ?
(!!? @
new!!@ C
{!!D E
message!!F M
=!!N O
$str!!P _
}!!` a
)!!a b
:!!c d
Problem!!e l
(!!l m
$str	!!m 
)
!! 
;
!! 
}"" 
catch## 
(## 
ValidationException## &
	exception##' 0
)##0 1
{$$ 
_logger%% 
.%% 
LogInformation%% &
(%%& '
$"%%' )
$str%%) I
{%%I J
	exception%%J S
.%%S T
Message%%T [
}%%[ \
{%%\ ]
	exception%%] f
.%%f g

StackTrace%%g q
}%%q r
"%%r s
)%%s t
;%%t u
return&& 

BadRequest&& !
(&&! "
	exception&&" +
.&&+ ,
Message&&, 3
)&&3 4
;&&4 5
}'' 
catch(( 
((( 
	Exception(( 
	exception(( &
)((& '
{)) 
_logger** 
.** 
LogInformation** &
(**& '
$"**' )
$str**) I
{**I J
	exception**J S
.**S T
Message**T [
}**[ \
{**\ ]
	exception**] f
.**f g

StackTrace**g q
}**q r
"**r s
)**s t
;**t u
return++ 
Problem++ 
(++ 
$str++ =
)++= >
;++> ?
},, 
}-- 	
[// 	
HttpPost//	 
]// 
public00 
IActionResult00 
AddPersonalDetail00 .
(00. /
PersonalDetails00/ >
personalDetails00? N
)00N O
{11 	
if22 
(22 
personalDetails22 
==22  "
null22# '
)22' (
{33 
_logger44 
.44 
LogError44  
(44  !
$str44! h
)44h i
;44i j
return55 

BadRequest55 !
(55! "
new55" %
{55& '
message55( /
=550 1
$str552 N
}55O P
)55P Q
;55Q R
}66 
try77 
{88 
return99 
_profileService99 &
.99& '
AddPersonalDetail99' 8
(998 9
personalDetails999 H
)99H I
?99J K
Ok99L N
(99N O
new99O R
{99S T
message99U \
=99] ^
$str99_ v
}99w x
)99x y
:99z {
Problem	99| 
(
99 
$str
99 ¡
)
99¡ ¢
;
99¢ £
}:: 
catch;; 
(;; 
ValidationException;; &
	exception;;' 0
);;0 1
{<< 
_logger== 
.== 
LogInformation== &
(==& '
$"==' )
$str==) P
{==P Q
	exception==Q Z
.==Z [
Message==[ b
}==b c
{==c d
	exception==d m
.==m n

StackTrace==n x
}==x y
"==y z
)==z {
;=={ |
return>> 

BadRequest>> !
(>>! "
	exception>>" +
.>>+ ,
Message>>, 3
)>>3 4
;>>4 5
}?? 
catch@@ 
(@@ !
ArgumentNullException@@ (
	exception@@) 2
)@@2 3
{AA 
_loggerBB 
.BB 
LogInformationBB &
(BB& '
$"BB' )
$strBB) P
{BBP Q
	exceptionBBQ Z
.BBZ [
MessageBB[ b
}BBb c
{BBc d
	exceptionBBd m
.BBm n

StackTraceBBn x
}BBx y
"BBy z
)BBz {
;BB{ |
returnCC 

BadRequestCC !
(CC! "
	exceptionCC" +
.CC+ ,
MessageCC, 3
)CC3 4
;CC4 5
}DD 
catchEE 
(EE 
	ExceptionEE 
	exceptionEE &
)EE& '
{FF 
_loggerGG 
.GG 
LogInformationGG &
(GG& '
$"GG' )
$strGG) P
{GGP Q
	exceptionGGQ Z
.GGZ [
MessageGG[ b
}GGb c
{GGc d
	exceptionGGd m
.GGm n

StackTraceGGn x
}GGx y
"GGy z
)GGz {
;GG{ |
returnHH 
ProblemHH 
(HH 
$strHH =
)HH= >
;HH> ?
}II 
}JJ 	
[KK 	
HttpGetKK	 
]KK 
publicLL 
IActionResultLL !
GetallPersonalDetailsLL 2
(LL2 3
)LL3 4
{MM 	
tryNN 
{OO 
returnQQ 
OkQQ 
(QQ 
_profileServiceQQ )
.QQ) *!
GetAllPersonalDetailsQQ* ?
(QQ? @
)QQ@ A
)QQA B
;QQB C
}RR 
catchSS 
(SS 
	ExceptionSS 
	exceptionSS &
)SS& '
{TT 
_loggerUU 
.UU 
LogInformationUU &
(UU& '
$"UU' )
$strUU) |
{UU| }
	exception	UU} 
.
UU 
Message
UU 
}
UU 
{
UU 
	exception
UU 
.
UU 

StackTrace
UU ¤
}
UU¤ ¥
"
UU¥ ¦
)
UU¦ §
;
UU§ ¨
returnVV 
ProblemVV 
(VV 
	exceptionVV (
.VV( )
MessageVV) 0
)VV0 1
;VV1 2
}WW 
}ZZ 	
[[[ 	
HttpGet[[	 
][[ 
public\\ 
IActionResult\\ "
GetPersonalDetailsById\\ 3
(\\3 4
int\\4 7

Personalid\\8 B
)\\B C
{]] 	
if^^ 
(^^ 

Personalid^^ 
<=^^ 
$num^^ 
)^^  
{__ 
_logger`` 
.`` 
LogError``  
(``  !
$str``! l
)``l m
;``m n
returnaa 

BadRequestaa !
(aa! "
newaa" %
{aa& '
messageaa( /
=aa0 1
$straa2 d
}aae f
)aaf g
;aag h
}bb 
trycc 
{dd 
returnff 
Okff 
(ff 
_profileServiceff )
.ff) *"
GetPersonalDetailsByIdff* @
(ff@ A

PersonalidffA K
)ffK L
)ffL M
;ffM N
}gg 
catchhh 
(hh !
ArgumentNullExceptionhh (
	exceptionhh) 2
)hh2 3
{ii 
_loggerjj 
.jj 
LogInformationjj &
(jj& '
$"jj' )
$strjj) U
{jjU V
	exceptionjjV _
.jj_ `
Messagejj` g
}jjg h
{jjh i
	exceptionjji r
.jjr s

StackTracejjs }
}jj} ~
"jj~ 
)	jj 
;
jj 
returnkk 

BadRequestkk !
(kk! "
	exceptionkk" +
.kk+ ,
Messagekk, 3
)kk3 4
;kk4 5
}ll 
catchmm 
(mm 
	Exceptionmm 
	exceptionmm &
)mm& '
{nn 
_loggeroo 
.oo 
LogInformationoo &
(oo& '
$"oo' )
$stroo) }
{oo} ~
	exception	oo~ 
.
oo 
Message
oo 
}
oo 
{
oo 
	exception
oo 
.
oo 

StackTrace
oo ¥
}
oo¥ ¦
"
oo¦ §
)
oo§ ¨
;
oo¨ ©
returnpp 
Problempp 
(pp 
	exceptionpp (
.pp( )
Messagepp) 0
)pp0 1
;pp1 2
}qq 
}rr 	
[ss 	
HttpGetss	 
]ss 
publictt 
IActionResulttt )
GetPersonalDetailsByProfileIdtt :
(tt: ;
inttt; >
	Profileidtt? H
)ttH I
{uu 	
ifvv 
(vv 
	Profileidvv 
<=vv 
$numvv 
)vv 
{ww 
_loggerxx 
.xx 
LogErrorxx  
(xx  !
$strxx! s
)xxs t
;xxt u
returnyy 

BadRequestyy !
(yy! "
newyy" %
{yy& '
messageyy( /
=yy0 1
$stryy2 ]
}yy^ _
)yy_ `
;yy` a
}zz 
try{{ 
{|| 
return~~ 
Ok~~ 
(~~ 
_profileService~~ )
.~~) *)
GetPersonalDetailsByProfileId~~* G
(~~G H
	Profileid~~H Q
)~~Q R
)~~R S
;~~S T
} 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) Y
{
Y Z
	exception
Z c
.
c d
Message
d k
}
k l
{
l m
	exception
m v
.
v w

StackTracew 
} 
" 
) 
; 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str) 
{ 
	exception 
. 
Message 
} 
{ 
	exception ¡
.¡ ¢

StackTrace¢ ¬
}¬ ­
"­ ®
)® ¯
;¯ °
return
 
Problem
 
(
 
	exception
 (
.
( )
Message
) 0
)
0 1
;
1 2
}
 
}
 	
[
 	
HttpPut
	 
]
 
public
 
IActionResult
 "
UpdatePersonalDetail
 1
(
1 2
PersonalDetails
2 A
personalDetails
B Q
)
Q R
{
 	
if
 
(
 
personalDetails
 
==
  "
null
# '
)
' (
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$str' 
) 
; 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 `
}
a b
)
b c
;
c d
}
 
try
 
{
 
return
 
_profileService
 &
.
& '"
UpdatePersonalDetail
' ;
(
; <
personalDetails
< K
)
K L
?
M N
Ok
O Q
(
Q R
new
R U
{
V W
message
X _
=
` a
$strb 
} 
) 
: 
Problem 
( 
$str ´
)´ µ
;µ ¶
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) S
{
S T
	exception
T ]
.
] ^
Message
^ e
}
e f
{
f g
	exception
g p
.
p q

StackTrace
q {
}
{ |
"
| }
)
} ~
;
~ 
return
   

BadRequest
   !
(
  ! "
	exception
  " +
.
  + ,
Message
  , 3
)
  3 4
;
  4 5
}
¡¡ 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
	exception
¢¢ &
)
¢¢& '
{
££ 
_logger
¤¤ 
.
¤¤ 
LogInformation
¤¤ &
(
¤¤& '
$"
¤¤' )
$str
¤¤) R
{
¤¤R S
	exception
¤¤S \
.
¤¤\ ]
Message
¤¤] d
}
¤¤d e
{
¤¤e f
	exception
¤¤f o
.
¤¤o p

StackTrace
¤¤p z
}
¤¤z {
"
¤¤{ |
)
¤¤| }
;
¤¤} ~
return
¥¥ 
Problem
¥¥ 
(
¥¥ 
	exception
¥¥ (
.
¥¥( )
Message
¥¥) 0
)
¥¥0 1
;
¥¥1 2
}
¦¦ 
}
§§ 	
[
©© 	

HttpDelete
©©	 
]
©© 
public
ªª 
IActionResult
ªª $
DisablePersonalDetails
ªª 3
(
ªª3 4
int
ªª4 7
PersonalDetailsId
ªª8 I
)
ªªI J
{
«« 	
if
¬¬ 
(
¬¬ 
PersonalDetailsId
¬¬ !
<=
¬¬" $
$num
¬¬% &
)
¬¬& '
return
­­ 

BadRequest
­­ !
(
­­! "
new
­­" %
{
­­& '
message
­­( /
=
­­0 1
$str
­­2 _
}
­­` a
)
­­a b
;
­­b c
try
°° 
{
±± 
return
²² 
_profileService
²² &
.
²²& '$
DisablePersonalDetails
²²' =
(
²²= >
PersonalDetailsId
²²> O
)
²²O P
?
²²Q R
Ok
²²S U
(
²²U V
new
²²V Y
{
²²Z [
message
²²\ c
=
²²d e
$str²²f 
}²² 
)²² 
:²² 
Problem²² 
(²² 
$str²² ¸
)²²¸ ¹
;²²¹ º
}
³³ 
catch
´´ 
(
´´ #
ArgumentNullException
´´ (
	exception
´´) 2
)
´´2 3
{
µµ 
_logger
¶¶ 
.
¶¶ 
LogInformation
¶¶ &
(
¶¶& '
$"
¶¶' )
$str
¶¶) U
{
¶¶U V
	exception
¶¶V _
.
¶¶_ `
Message
¶¶` g
}
¶¶g h
{
¶¶h i
	exception
¶¶i r
.
¶¶r s

StackTrace
¶¶s }
}
¶¶} ~
"
¶¶~ 
)¶¶ 
;¶¶ 
return
·· 

BadRequest
·· !
(
··! "
	exception
··" +
.
··+ ,
Message
··, 3
)
··3 4
;
··4 5
}
¸¸ 
catch
¹¹ 
(
¹¹ 
	Exception
¹¹ 
	exception
¹¹ &
)
¹¹& '
{
ºº 
_logger
»» 
.
»» 
LogInformation
»» &
(
»»& '
$"
»»' )
$str
»») m
{
»»m n
	exception
»»n w
}
»»w x
"
»»x y
)
»»y z
;
»»z {
return
¼¼ 
Problem
¼¼ 
(
¼¼ 
$str
¼¼ B
)
¼¼B C
;
¼¼C D
}
½½ 
}
¿¿ 	
[
ÀÀ 	
HttpPost
ÀÀ	 
]
ÀÀ 
public
ÁÁ 
IActionResult
ÁÁ 
AddEducation
ÁÁ )
(
ÁÁ) *
	Education
ÁÁ* 3
	education
ÁÁ4 =
)
ÁÁ= >
{
ÂÂ 	
if
ÃÃ 
(
ÃÃ 
	education
ÃÃ 
==
ÃÃ 
null
ÃÃ !
)
ÃÃ! "
{
ÄÄ 
_logger
ÅÅ 
.
ÅÅ 
LogError
ÅÅ  
(
ÅÅ  !
$str
ÅÅ! c
)
ÅÅc d
;
ÅÅd e
return
ÆÆ 

BadRequest
ÆÆ !
(
ÆÆ! "
new
ÆÆ" %
{
ÆÆ& '
message
ÆÆ( /
=
ÆÆ0 1
$str
ÆÆ2 X
}
ÆÆY Z
)
ÆÆZ [
;
ÆÆ[ \
}
ÇÇ 
try
ÈÈ 
{
ÉÉ 
return
ÊÊ 
_profileService
ÊÊ &
.
ÊÊ& '
AddEducation
ÊÊ' 3
(
ÊÊ3 4
	education
ÊÊ4 =
)
ÊÊ= >
?
ÊÊ? @
Ok
ÊÊA C
(
ÊÊC D
new
ÊÊD G
{
ÊÊH I
message
ÊÊJ Q
=
ÊÊR S
$str
ÊÊT m
}
ÊÊn o
)
ÊÊo p
:
ÊÊq r
Problem
ÊÊs z
(
ÊÊz {
$strÊÊ{ 
)ÊÊ 
;ÊÊ 
}
ËË 
catch
ÌÌ 
(
ÌÌ !
ValidationException
ÌÌ &
	exception
ÌÌ' 0
)
ÌÌ0 1
{
ÍÍ 
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ &
(
ÎÎ& '
$"
ÎÎ' )
$str
ÎÎ) K
{
ÎÎK L
	exception
ÎÎL U
.
ÎÎU V
Message
ÎÎV ]
}
ÎÎ] ^
{
ÎÎ^ _
	exception
ÎÎ_ h
.
ÎÎh i

StackTrace
ÎÎi s
}
ÎÎs t
"
ÎÎt u
)
ÎÎu v
;
ÎÎv w
return
ÏÏ 

BadRequest
ÏÏ !
(
ÏÏ! "
	exception
ÏÏ" +
.
ÏÏ+ ,
Message
ÏÏ, 3
)
ÏÏ3 4
;
ÏÏ4 5
}
ÐÐ 
catch
ÑÑ 
(
ÑÑ #
ArgumentNullException
ÑÑ (
	exception
ÑÑ) 2
)
ÑÑ2 3
{
ÒÒ 
_logger
ÓÓ 
.
ÓÓ 
LogInformation
ÓÓ &
(
ÓÓ& '
$"
ÓÓ' )
$str
ÓÓ) K
{
ÓÓK L
	exception
ÓÓL U
.
ÓÓU V
Message
ÓÓV ]
}
ÓÓ] ^
{
ÓÓ^ _
	exception
ÓÓ_ h
.
ÓÓh i

StackTrace
ÓÓi s
}
ÓÓs t
"
ÓÓt u
)
ÓÓu v
;
ÓÓv w
return
ÔÔ 

BadRequest
ÔÔ !
(
ÔÔ! "
	exception
ÔÔ" +
.
ÔÔ+ ,
Message
ÔÔ, 3
)
ÔÔ3 4
;
ÔÔ4 5
}
ÕÕ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
	exception
ÖÖ &
)
ÖÖ& '
{
×× 
_logger
ØØ 
.
ØØ 
LogInformation
ØØ &
(
ØØ& '
$"
ØØ' )
$str
ØØ) K
{
ØØK L
	exception
ØØL U
.
ØØU V
Message
ØØV ]
}
ØØ] ^
{
ØØ^ _
	exception
ØØ_ h
.
ØØh i

StackTrace
ØØi s
}
ØØs t
"
ØØt u
)
ØØu v
;
ØØv w
return
ÙÙ 
Problem
ÙÙ 
(
ÙÙ 
$str
ÙÙ =
)
ÙÙ= >
;
ÙÙ> ?
}
ÚÚ 
}
ÝÝ 	
[
ÞÞ 	
HttpGet
ÞÞ	 
]
ÞÞ 
public
ßß 
IActionResult
ßß $
GetallEducationDetails
ßß 3
(
ßß3 4
)
ßß4 5
{
àà 	
try
áá 
{
ââ 
return
ãã 
Ok
ãã 
(
ãã 
_profileService
ãã )
.
ãã) *$
GetallEducationDetails
ãã* @
(
ãã@ A
)
ããA B
)
ããB C
;
ããC D
}
ää 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå &
)
åå& '
{
ææ 
_logger
çç 
.
çç 
LogInformation
çç &
(
çç& '
$"
çç' )
$str
çç) }
{
çç} ~
	exceptionçç~ 
.çç 
Messageçç 
}çç 
{çç 
	exceptionçç 
.çç 

StackTraceçç ¥
}çç¥ ¦
"çç¦ §
)çç§ ¨
;çç¨ ©
return
èè 
Problem
èè 
(
èè 
	exception
èè (
.
èè( )
Message
èè) 0
)
èè0 1
;
èè1 2
}
éé 
}
ìì 	
[
íí 	
HttpGet
íí	 
]
íí 
public
îî 
IActionResult
îî %
GetEducationDetailsById
îî 4
(
îî4 5
int
îî5 8
Educationid
îî9 D
)
îîD E
{
ïï 	
if
ðð 
(
ðð 
Educationid
ðð 
<=
ðð 
$num
ðð  
)
ðð  !
return
ññ 

BadRequest
ññ !
(
ññ! "
new
ññ" %
{
ññ& '
message
ññ( /
=
ññ0 1
$str
ññ2 Z
}
ññ[ \
)
ññ\ ]
;
ññ] ^
try
òò 
{
óó 
return
õõ 
Ok
õõ 
(
õõ 
_profileService
õõ )
.
õõ) *%
GetEducationDetailsById
õõ* A
(
õõA B
Educationid
õõB M
)
õõM N
)
õõN O
;
õõO P
}
öö 
catch
÷÷ 
(
÷÷ #
ArgumentNullException
÷÷ (
	exception
÷÷) 2
)
÷÷2 3
{
øø 
_logger
ùù 
.
ùù 
LogInformation
ùù &
(
ùù& '
$"
ùù' )
$str
ùù) V
{
ùùV W
	exception
ùùW `
.
ùù` a
Message
ùùa h
}
ùùh i
{
ùùi j
	exception
ùùj s
.
ùùs t

StackTrace
ùùt ~
}
ùù~ 
"ùù 
)ùù 
;ùù 
return
úú 

BadRequest
úú !
(
úú! "
	exception
úú" +
.
úú+ ,
Message
úú, 3
)
úú3 4
;
úú4 5
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
	exception
üü &
)
üü& '
{
ýý 
_logger
þþ 
.
þþ 
LogInformation
þþ &
(
þþ& '
$"
þþ' )
$str
þþ) ~
{
þþ~ 
	exceptionþþ 
.þþ 
Messageþþ 
}þþ 
{þþ 
	exceptionþþ 
.þþ 

StackTraceþþ ¦
}þþ¦ §
"þþ§ ¨
)þþ¨ ©
;þþ© ª
return
ÿÿ 
Problem
ÿÿ 
(
ÿÿ 
	exception
ÿÿ (
.
ÿÿ( )
Message
ÿÿ) 0
)
ÿÿ0 1
;
ÿÿ1 2
}
 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 /
!GetAllEducationDetailsByProfileId
 >
(
> ?
int
? B
	Profileid
C L
)
L M
{
 	
if
 
(
 
	Profileid
 
<=
 
$num
 
)
 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 X
}
Y Z
)
Z [
;
[ \
try
 
{
 
return
 
Ok
 
(
 
_profileService
 )
.
) */
!GetAllEducationDetailsByProfileId
* K
(
K L
	Profileid
L U
)
U V
)
V W
;
W X
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) `
{
` a
	exception
a j
.
j k
Message
k r
}
r s
{
s t
	exception
t }
.
} ~

StackTrace~ 
} 
" 
) 
; 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str) 
{ 
	exception 
. 
Message 
} 
{ 
	exception ¥
.¥ ¦

StackTrace¦ °
}° ±
"± ²
)² ³
;³ ´
return
 
Problem
 
(
 
	exception
 (
.
( )
Message
) 0
)
0 1
;
1 2
}
 
}
 	
[
 	
HttpPut
	 
]
 
public
 
IActionResult
 
UpdateEducation
 ,
(
, -
	Education
- 6
	education
7 @
)
@ A
{
 	
if
 
(
 
	education
 
==
 
null
 !
)
! "
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$str' 
) 
; 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 X
}
Y Z
)
Z [
;
[ \
}
   
try
¡¡ 
{
¢¢ 
return
¤¤ 
_profileService
¤¤ &
.
¤¤& '
UpdateEducation
¤¤' 6
(
¤¤6 7
	education
¤¤7 @
)
¤¤@ A
?
¤¤B C
Ok
¤¤D F
(
¤¤F G
new
¤¤G J
{
¤¤K L
message
¤¤M T
=
¤¤U V
$str
¤¤W w
}
¤¤x y
)
¤¤y z
:
¤¤{ |
Problem¤¤} 
(¤¤ 
$str¤¤ £
)¤¤£ ¤
;¤¤¤ ¥
}
¦¦ 
catch
§§ 
(
§§ #
ArgumentNullException
§§ (
	exception
§§) 2
)
§§2 3
{
¨¨ 
_logger
©© 
.
©© 
LogInformation
©© &
(
©©& '
$"
©©' )
$str
©©) N
{
©©N O
	exception
©©O X
.
©©X Y
Message
©©Y `
}
©©` a
{
©©a b
	exception
©©b k
.
©©k l

StackTrace
©©l v
}
©©v w
"
©©w x
)
©©x y
;
©©y z
return
ªª 

BadRequest
ªª !
(
ªª! "
	exception
ªª" +
.
ªª+ ,
Message
ªª, 3
)
ªª3 4
;
ªª4 5
}
«« 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
	exception
¬¬ &
)
¬¬& '
{
­­ 
_logger
®® 
.
®® 
LogInformation
®® &
(
®®& '
$"
®®' )
$str
®®) M
{
®®M N
	exception
®®N W
.
®®W X
Message
®®X _
}
®®_ `
{
®®` a
	exception
®®a j
.
®®j k

StackTrace
®®k u
}
®®u v
"
®®v w
)
®®w x
;
®®x y
return
¯¯ 
Problem
¯¯ 
(
¯¯ 
	exception
¯¯ (
.
¯¯( )
Message
¯¯) 0
)
¯¯0 1
;
¯¯1 2
}
°° 
}
±± 	
[
²² 	

HttpDelete
²²	 
]
²² 
public
³³ 
IActionResult
³³ '
DisableEducationalDetails
³³ 6
(
³³6 7
int
³³7 :
EducationId
³³; F
)
³³F G
{
´´ 	
if
µµ 
(
µµ 
EducationId
µµ 
<=
µµ 
$num
µµ  
)
µµ  !
return
¶¶ 

BadRequest
¶¶ !
(
¶¶! "
new
¶¶" %
{
¶¶& '
message
¶¶( /
=
¶¶0 1
$str
¶¶2 Z
}
¶¶[ \
)
¶¶\ ]
;
¶¶] ^
try
¹¹ 
{
ºº 
return
»» 
_profileService
»» &
.
»»& ''
DisableEducationalDetails
»»' @
(
»»@ A
EducationId
»»A L
)
»»L M
?
»»N O
Ok
»»P R
(
»»R S
new
»»S V
{
»»W X
message
»»Y `
=
»»a b
$str»»c 
}»» 
)»» 
:»» 
Problem»» 
(»» 
$str»» ¯
)»»¯ °
;»»° ±
}
¼¼ 
catch
½½ 
(
½½ #
ArgumentNullException
½½ (
	exception
½½) 2
)
½½2 3
{
¾¾ 
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$"
¿¿' )
$str
¿¿) X
{
¿¿X Y
	exception
¿¿Y b
.
¿¿b c
Message
¿¿c j
}
¿¿j k
{
¿¿k l
	exception
¿¿l u
.
¿¿u v

StackTrace¿¿v 
}¿¿ 
"¿¿ 
)¿¿ 
;¿¿ 
return
ÀÀ 

BadRequest
ÀÀ !
(
ÀÀ! "
	exception
ÀÀ" +
.
ÀÀ+ ,
Message
ÀÀ, 3
)
ÀÀ3 4
;
ÀÀ4 5
}
ÁÁ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
	exception
ÂÂ &
)
ÂÂ& '
{
ÃÃ 
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ &
(
ÄÄ& '
$"
ÄÄ' )
$str
ÄÄ) p
{
ÄÄp q
	exception
ÄÄq z
}
ÄÄz {
"
ÄÄ{ |
)
ÄÄ| }
;
ÄÄ} ~
return
ÅÅ 
Problem
ÅÅ 
(
ÅÅ 
$str
ÅÅ B
)
ÅÅB C
;
ÅÅC D
}
ÆÆ 
}
ÈÈ 	
[
ÉÉ 	
HttpPost
ÉÉ	 
]
ÉÉ 
public
ÊÊ 
IActionResult
ÊÊ 
AddProjects
ÊÊ (
(
ÊÊ( )
Projects
ÊÊ) 1
projects
ÊÊ2 :
)
ÊÊ: ;
{
ËË 	
if
ÌÌ 
(
ÌÌ 
projects
ÌÌ 
==
ÌÌ 
null
ÌÌ  
)
ÌÌ  !
{
ÍÍ 
_logger
ÎÎ 
.
ÎÎ 
LogError
ÎÎ  
(
ÎÎ  !
$str
ÎÎ! b
)
ÎÎb c
;
ÎÎc d
return
ÏÏ 

BadRequest
ÏÏ !
(
ÏÏ! "
new
ÏÏ" %
{
ÏÏ& '
message
ÏÏ( /
=
ÏÏ0 1
$str
ÏÏ2 V
}
ÏÏW X
)
ÏÏX Y
;
ÏÏY Z
}
ÐÐ 
try
ÑÑ 
{
ÒÒ 
return
ÓÓ 
_profileService
ÓÓ &
.
ÓÓ& '
AddProjects
ÓÓ' 2
(
ÓÓ2 3
projects
ÓÓ3 ;
)
ÓÓ; <
?
ÓÓ= >
Ok
ÓÓ? A
(
ÓÓA B
new
ÓÓB E
{
ÓÓF G
message
ÓÓH O
=
ÓÓP Q
$str
ÓÓR i
}
ÓÓj k
)
ÓÓk l
:
ÓÓm n
Problem
ÓÓo v
(
ÓÓv w
$strÓÓw 
)ÓÓ 
;ÓÓ 
}
ÔÔ 
catch
ÕÕ 
(
ÕÕ !
ValidationException
ÕÕ &
	exception
ÕÕ' 0
)
ÕÕ0 1
{
ÖÖ 
_logger
×× 
.
×× 
LogInformation
×× &
(
××& '
$"
××' )
$str
××) J
{
××J K
	exception
××K T
.
××T U
Message
××U \
}
××\ ]
{
××] ^
	exception
××^ g
.
××g h

StackTrace
××h r
}
××r s
"
××s t
)
××t u
;
××u v
return
ØØ 

BadRequest
ØØ !
(
ØØ! "
	exception
ØØ" +
.
ØØ+ ,
Message
ØØ, 3
)
ØØ3 4
;
ØØ4 5
}
ÙÙ 
catch
ÚÚ 
(
ÚÚ #
ArgumentNullException
ÚÚ (
	exception
ÚÚ) 2
)
ÚÚ2 3
{
ÛÛ 
_logger
ÜÜ 
.
ÜÜ 
LogInformation
ÜÜ &
(
ÜÜ& '
$"
ÜÜ' )
$str
ÜÜ) J
{
ÜÜJ K
	exception
ÜÜK T
.
ÜÜT U
Message
ÜÜU \
}
ÜÜ\ ]
{
ÜÜ] ^
	exception
ÜÜ^ g
.
ÜÜg h

StackTrace
ÜÜh r
}
ÜÜr s
"
ÜÜs t
)
ÜÜt u
;
ÜÜu v
return
ÝÝ 

BadRequest
ÝÝ !
(
ÝÝ! "
	exception
ÝÝ" +
.
ÝÝ+ ,
Message
ÝÝ, 3
)
ÝÝ3 4
;
ÝÝ4 5
}
ÞÞ 
catch
ßß 
(
ßß 
	Exception
ßß 
	exception
ßß &
)
ßß& '
{
àà 
_logger
áá 
.
áá 
LogInformation
áá &
(
áá& '
$"
áá' )
$str
áá) J
{
ááJ K
	exception
ááK T
.
ááT U
Message
ááU \
}
áá\ ]
{
áá] ^
	exception
áá^ g
.
áág h

StackTrace
ááh r
}
áár s
"
áás t
)
áát u
;
ááu v
return
ââ 
Problem
ââ 
(
ââ 
$str
ââ =
)
ââ= >
;
ââ> ?
}
ãã 
}
åå 	
[
èè 	
HttpGet
èè	 
]
èè 
public
éé 
IActionResult
éé "
GetallProjectDetails
éé 1
(
éé1 2
)
éé2 3
{
êê 	
try
ëë 
{
ìì 
return
îî 
Ok
îî 
(
îî 
_profileService
îî )
.
îî) *"
GetallProjectDetails
îî* >
(
îî> ?
)
îî? @
)
îî@ A
;
îîA B
}
ïï 
catch
ðð 
(
ðð 
	Exception
ðð 
	exception
ðð &
)
ðð& '
{
ññ 
_logger
òò 
.
òò 
LogInformation
òò &
(
òò& '
$"
òò' )
$str
òò) {
{
òò{ |
	exceptionòò| 
.òò 
Messageòò 
}òò 
{òò 
	exceptionòò 
.òò 

StackTraceòò £
}òò£ ¤
"òò¤ ¥
)òò¥ ¦
;òò¦ §
return
óó 
Problem
óó 
(
óó 
	exception
óó (
.
óó( )
Message
óó) 0
)
óó0 1
;
óó1 2
}
ôô 
}
÷÷ 	
[
øø 	
HttpGet
øø	 
]
øø 
public
ùù 
IActionResult
ùù #
GetProjectDetailsById
ùù 2
(
ùù2 3
int
ùù3 6
	Projectid
ùù7 @
)
ùù@ A
{
úú 	
if
ûû 
(
ûû 
	Projectid
ûû 
<=
ûû 
$num
ûû 
)
ûû 
return
üü 

BadRequest
üü !
(
üü! "
new
üü" %
{
üü& '
message
üü( /
=
üü0 1
$str
üü2 X
}
üüY Z
)
üüZ [
;
üü[ \
try
ýý 
{
þþ 
return
 
Ok
 
(
 
_profileService
 )
.
) *#
GetProjectDetailsById
* ?
(
? @
	Projectid
@ I
)
I J
)
J K
;
K L
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) T
{
T U
	exception
U ^
.
^ _
Message
_ f
}
f g
{
g h
	exception
h q
.
q r

StackTrace
r |
}
| }
"
} ~
)
~ 
; 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) |
{
| }
	exception} 
. 
Message 
} 
{ 
	exception 
. 

StackTrace ¤
}¤ ¥
"¥ ¦
)¦ §
;§ ¨
return
 
Problem
 
(
 
	exception
 (
.
( )
Message
) 0
)
0 1
;
1 2
}
 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 -
GetAllProjectDetailsByProfileId
 <
(
< =
int
= @
	Profileid
A J
)
J K
{
 	
if
 
(
 
	Profileid
 
<=
 
$num
 
)
 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 X
}
Y Z
)
Z [
;
[ \
try
 
{
 
return
 
Ok
 
(
 
_profileService
 )
.
) *-
GetAllProjectDetailsByProfileId
* I
(
I J
	Profileid
J S
)
S T
)
T U
;
U V
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) ^
{
^ _
	exception
_ h
.
h i
Message
i p
}
p q
{
q r
	exception
r {
.
{ |

StackTrace| 
} 
" 
) 
; 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str) 
{ 
	exception 
. 
Message 
} 
{ 
	exception £
.£ ¤

StackTrace¤ ®
}® ¯
"¯ °
)° ±
;± ²
return
 
Problem
 
(
 
	exception
 (
.
( )
Message
) 0
)
0 1
;
1 2
}
   
}
¡¡ 	
[
££ 	
HttpPut
££	 
]
££ 
public
¤¤ 
IActionResult
¤¤ 
UpdateProjects
¤¤ +
(
¤¤+ ,
Projects
¤¤, 4
projects
¤¤5 =
)
¤¤= >
{
¦¦ 	
if
¨¨ 
(
¨¨ 
projects
¨¨ 
==
¨¨ 
null
¨¨  
)
¨¨  !
{
©© 
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$str
ªª' r
)
ªªr s
;
ªªs t
return
«« 

BadRequest
«« !
(
««! "
new
««" %
{
««& '
message
««( /
=
««0 1
$str
««2 U
}
««V W
)
««W X
;
««X Y
}
¬¬ 
try
­­ 
{
®® 
return
°° 
_profileService
°° &
.
°°& '
UpdateProjects
°°' 5
(
°°5 6
projects
°°6 >
)
°°> ?
?
°°@ A
Ok
°°B D
(
°°D E
new
°°E H
{
°°I J
message
°°K R
=
°°S T
$str
°°U t
}
°°u v
)
°°v w
:
°°x y
Problem°°z 
(°° 
$str°°  
)°°  ¡
;°°¡ ¢
}
²² 
catch
³³ 
(
³³ #
ArgumentNullException
³³ (
	exception
³³) 2
)
³³2 3
{
´´ 
_logger
µµ 
.
µµ 
LogInformation
µµ &
(
µµ& '
$"
µµ' )
$str
µµ) M
{
µµM N
	exception
µµN W
.
µµW X
Message
µµX _
}
µµ_ `
{
µµ` a
	exception
µµa j
.
µµj k

StackTrace
µµk u
}
µµu v
"
µµv w
)
µµw x
;
µµx y
return
¶¶ 

BadRequest
¶¶ !
(
¶¶! "
	exception
¶¶" +
.
¶¶+ ,
Message
¶¶, 3
)
¶¶3 4
;
¶¶4 5
}
·· 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
	exception
¸¸ &
)
¸¸& '
{
¹¹ 
_logger
ºº 
.
ºº 
LogInformation
ºº &
(
ºº& '
$"
ºº' )
$str
ºº) L
{
ººL M
	exception
ººM V
.
ººV W
Message
ººW ^
}
ºº^ _
{
ºº_ `
	exception
ºº` i
.
ººi j

StackTrace
ººj t
}
ººt u
"
ººu v
)
ººv w
;
ººw x
return
»» 
Problem
»» 
(
»» 
	exception
»» (
.
»»( )
Message
»») 0
)
»»0 1
;
»»1 2
}
¼¼ 
}
½½ 	
[
¾¾ 	

HttpDelete
¾¾	 
]
¾¾ 
public
¿¿ 
IActionResult
¿¿ #
DisableProjectDetails
¿¿ 2
(
¿¿2 3
int
¿¿3 6

ProjectsId
¿¿7 A
)
¿¿A B
{
ÀÀ 	
if
ÁÁ 
(
ÁÁ 

ProjectsId
ÁÁ 
<=
ÁÁ 
$num
ÁÁ 
)
ÁÁ  
return
ÂÂ 

BadRequest
ÂÂ !
(
ÂÂ! "
new
ÂÂ" %
{
ÂÂ& '
message
ÂÂ( /
=
ÂÂ0 1
$str
ÂÂ2 X
}
ÂÂY Z
)
ÂÂZ [
;
ÂÂ[ \
try
ÅÅ 
{
ÆÆ 
return
ÇÇ 
_profileService
ÇÇ &
.
ÇÇ& '#
DisableProjectDetails
ÇÇ' <
(
ÇÇ< =

ProjectsId
ÇÇ= G
)
ÇÇG H
?
ÇÇI J
Ok
ÇÇK M
(
ÇÇM N
new
ÇÇN Q
{
ÇÇR S
message
ÇÇT [
=
ÇÇ\ ]
$str
ÇÇ^ |
}
ÇÇ} ~
)
ÇÇ~ 
:ÇÇ 
ProblemÇÇ 
(ÇÇ 
$strÇÇ ¨
)ÇÇ¨ ©
;ÇÇ© ª
}
ÈÈ 
catch
ÉÉ 
(
ÉÉ #
ArgumentNullException
ÉÉ (
	exception
ÉÉ) 2
)
ÉÉ2 3
{
ÊÊ 
_logger
ËË 
.
ËË 
LogInformation
ËË &
(
ËË& '
$"
ËË' )
$str
ËË) T
{
ËËT U
	exception
ËËU ^
.
ËË^ _
Message
ËË_ f
}
ËËf g
{
ËËg h
	exception
ËËh q
.
ËËq r

StackTrace
ËËr |
}
ËË| }
"
ËË} ~
)
ËË~ 
;ËË 
return
ÌÌ 

BadRequest
ÌÌ !
(
ÌÌ! "
	exception
ÌÌ" +
.
ÌÌ+ ,
Message
ÌÌ, 3
)
ÌÌ3 4
;
ÌÌ4 5
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
	exception
ÎÎ &
)
ÎÎ& '
{
ÏÏ 
_logger
ÐÐ 
.
ÐÐ 
LogInformation
ÐÐ &
(
ÐÐ& '
$"
ÐÐ' )
$str
ÐÐ) l
{
ÐÐl m
	exception
ÐÐm v
}
ÐÐv w
"
ÐÐw x
)
ÐÐx y
;
ÐÐy z
return
ÑÑ 
Problem
ÑÑ 
(
ÑÑ 
$str
ÑÑ B
)
ÑÑB C
;
ÑÑC D
}
ÒÒ 
}
ÔÔ 	
[
ÕÕ 	
HttpPost
ÕÕ	 
]
ÕÕ 
public
ÖÖ 
IActionResult
ÖÖ 
	AddSkills
ÖÖ &
(
ÖÖ& '
Skills
ÖÖ' -
skill
ÖÖ. 3
)
ÖÖ3 4
{
×× 	
if
ØØ 
(
ØØ 
skill
ØØ 
==
ØØ 
null
ØØ 
)
ØØ 
{
ÙÙ 
_logger
ÚÚ 
.
ÚÚ 
LogError
ÚÚ  
(
ÚÚ  !
$str
ÚÚ! `
)
ÚÚ` a
;
ÚÚa b
return
ÛÛ 

BadRequest
ÛÛ !
(
ÛÛ! "
new
ÛÛ" %
{
ÛÛ& '
message
ÛÛ( /
=
ÛÛ0 1
$str
ÛÛ2 T
}
ÛÛU V
)
ÛÛV W
;
ÛÛW X
}
ÜÜ 
try
ÝÝ 
{
ÞÞ 
return
ßß 
_profileService
ßß &
.
ßß& '
	AddSkills
ßß' 0
(
ßß0 1
skill
ßß1 6
)
ßß6 7
?
ßß8 9
Ok
ßß: <
(
ßß< =
new
ßß= @
{
ßßA B
message
ßßC J
=
ßßK L
$str
ßßM b
}
ßßc d
)
ßßd e
:
ßßf g
Problem
ßßh o
(
ßßo p
$strßßp 
)ßß 
;ßß 
}
àà 
catch
áá 
(
áá !
ValidationException
áá &
	exception
áá' 0
)
áá0 1
{
ââ 
_logger
ãã 
.
ãã 
LogInformation
ãã &
(
ãã& '
$"
ãã' )
$str
ãã) G
{
ããG H
	exception
ããH Q
.
ããQ R
Message
ããR Y
}
ããY Z
{
ããZ [
	exception
ãã[ d
.
ããd e

StackTrace
ããe o
}
ãão p
"
ããp q
)
ããq r
;
ããr s
return
ää 

BadRequest
ää !
(
ää! "
	exception
ää" +
.
ää+ ,
Message
ää, 3
)
ää3 4
;
ää4 5
}
åå 
catch
ææ 
(
ææ #
ArgumentNullException
ææ (
	exception
ææ) 2
)
ææ2 3
{
çç 
_logger
èè 
.
èè 
LogInformation
èè &
(
èè& '
$"
èè' )
$str
èè) H
{
èèH I
	exception
èèI R
.
èèR S
Message
èèS Z
}
èèZ [
{
èè[ \
	exception
èè\ e
.
èèe f

StackTrace
èèf p
}
èèp q
"
èèq r
)
èèr s
;
èès t
return
éé 

BadRequest
éé !
(
éé! "
	exception
éé" +
.
éé+ ,
Message
éé, 3
)
éé3 4
;
éé4 5
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
ìì 
_logger
íí 
.
íí 
LogInformation
íí &
(
íí& '
$"
íí' )
$str
íí) G
{
ííG H
	exception
ííH Q
.
ííQ R
Message
ííR Y
}
ííY Z
{
ííZ [
	exception
íí[ d
.
ííd e

StackTrace
ííe o
}
íío p
"
ííp q
)
ííq r
;
íír s
return
îî 
Problem
îî 
(
îî 
$str
îî =
)
îî= >
;
îî> ?
}
ïï 
}
ññ 	
[
òò 	
HttpGet
òò	 
]
òò 
public
óó 
IActionResult
óó  
GetallSkillDetails
óó /
(
óó/ 0
)
óó0 1
{
ôô 	
try
õõ 
{
öö 
return
øø 
Ok
øø 
(
øø 
_profileService
øø )
.
øø) * 
GetallSkillDetails
øø* <
(
øø< =
)
øø= >
)
øø> ?
;
øø? @
}
ùù 
catch
úú 
(
úú 
	Exception
úú 
	exception
úú &
)
úú& '
{
ûû 
_logger
üü 
.
üü 
LogInformation
üü &
(
üü& '
$"
üü' )
$str
üü) z
{
üüz {
	exceptionüü{ 
.üü 
Messageüü 
}üü 
{üü 
	exceptionüü 
.üü 

StackTraceüü ¢
}üü¢ £
"üü£ ¤
)üü¤ ¥
;üü¥ ¦
return
ýý 
Problem
ýý 
(
ýý 
	exception
ýý (
.
ýý( )
Message
ýý) 0
)
ýý0 1
;
ýý1 2
}
þþ 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 !
GetSkillDetailsById
 0
(
0 1
int
1 4
Skillid
5 <
)
< =
{
 	
if
 
(
 
Skillid
 
<=
 
$num
 
)
 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 V
}
W X
)
X Y
;
Y Z
try
 
{
 
return
 
Ok
 
(
 
_profileService
 )
.
) *!
GetSkillDetailsById
* =
(
= >
Skillid
> E
)
E F
)
F G
;
G H
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) R
{
R S
	exception
S \
.
\ ]
Message
] d
}
d e
{
e f
	exception
f o
.
o p

StackTrace
p z
}
z {
"
{ |
)
| }
;
} ~
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) {
{
{ |
	exception| 
. 
Message 
} 
{ 
	exception 
. 

StackTrace £
}£ ¤
"¤ ¥
)¥ ¦
;¦ §
return
 
Problem
 
(
 
	exception
 (
.
( )
Message
) 0
)
0 1
;
1 2
}
 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 +
GetAllSkillDetailsByProfileId
 :
(
: ;
int
; >
	Profileid
? H
)
H I
{
 	
if
 
(
 
	Profileid
 
<=
 
$num
 
)
 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 X
}
Y Z
)
Z [
;
[ \
try
 
{
 
return
 
Ok
 
(
 
_profileService
 )
.
) *+
GetAllSkillDetailsByProfileId
* G
(
G H
	Profileid
H Q
)
Q R
)
R S
;
S T
}
   
catch
¡¡ 
(
¡¡ #
ArgumentNullException
¡¡ (
	exception
¡¡) 2
)
¡¡2 3
{
¢¢ 
_logger
££ 
.
££ 
LogInformation
££ &
(
££& '
$"
££' )
$str
££) \
{
££\ ]
	exception
££] f
.
££f g
Message
££g n
}
££n o
{
££o p
	exception
££p y
.
££y z

StackTrace££z 
}££ 
"££ 
)££ 
;££ 
return
¤¤ 

BadRequest
¤¤ !
(
¤¤! "
	exception
¤¤" +
.
¤¤+ ,
Message
¤¤, 3
)
¤¤3 4
;
¤¤4 5
}
¥¥ 
catch
¦¦ 
(
¦¦ 
	Exception
¦¦ 
	exception
¦¦ &
)
¦¦& '
{
§§ 
_logger
¨¨ 
.
¨¨ 
LogInformation
¨¨ &
(
¨¨& '
$"
¨¨' )
$str¨¨) 
{¨¨ 
	exception¨¨ 
.¨¨ 
Message¨¨ 
}¨¨ 
{¨¨ 
	exception¨¨ ¡
.¨¨¡ ¢

StackTrace¨¨¢ ¬
}¨¨¬ ­
"¨¨­ ®
)¨¨® ¯
;¨¨¯ °
return
©© 
Problem
©© 
(
©© 
	exception
©© (
.
©©( )
Message
©©) 0
)
©©0 1
;
©©1 2
}
ªª 
}
«« 	
[
­­ 	
HttpPut
­­	 
]
­­ 
public
®® 
IActionResult
®® 
UpdateSkills
®® )
(
®®) *
Skills
®®* 0
skill
®®1 6
)
®®6 7
{
°° 	
if
²² 
(
²² 
skill
²² 
==
²² 
null
²² 
)
²² 
{
³³ 
_logger
´´ 
.
´´ 
LogInformation
´´ &
(
´´& '
$str
´´' t
)
´´t u
;
´´u v
return
µµ 

BadRequest
µµ !
(
µµ! "
new
µµ" %
{
µµ& '
message
µµ( /
=
µµ0 1
$str
µµ2 T
}
µµU V
)
µµV W
;
µµW X
}
¶¶ 
try
·· 
{
¸¸ 
return
ºº 
_profileService
ºº &
.
ºº& '
UpdateSkills
ºº' 3
(
ºº3 4
skill
ºº4 9
)
ºº9 :
?
ºº; <
Ok
ºº= ?
(
ºº? @
new
ºº@ C
{
ººD E
message
ººF M
=
ººN O
$str
ººP m
}
ººn o
)
ººo p
:
ººq r
Problem
ººs z
(
ººz {
$strºº{ 
)ºº 
;ºº 
}
¼¼ 
catch
½½ 
(
½½ #
ArgumentNullException
½½ (
	exception
½½) 2
)
½½2 3
{
¾¾ 
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$"
¿¿' )
$str
¿¿) K
{
¿¿K L
	exception
¿¿L U
.
¿¿U V
Message
¿¿V ]
}
¿¿] ^
{
¿¿^ _
	exception
¿¿_ h
.
¿¿h i

StackTrace
¿¿i s
}
¿¿s t
"
¿¿t u
)
¿¿u v
;
¿¿v w
return
ÀÀ 

BadRequest
ÀÀ !
(
ÀÀ! "
	exception
ÀÀ" +
.
ÀÀ+ ,
Message
ÀÀ, 3
)
ÀÀ3 4
;
ÀÀ4 5
}
ÁÁ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
	exception
ÂÂ &
)
ÂÂ& '
{
ÃÃ 
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ &
(
ÄÄ& '
$"
ÄÄ' )
$str
ÄÄ) J
{
ÄÄJ K
	exception
ÄÄK T
.
ÄÄT U
Message
ÄÄU \
}
ÄÄ\ ]
{
ÄÄ] ^
	exception
ÄÄ^ g
.
ÄÄg h

StackTrace
ÄÄh r
}
ÄÄr s
"
ÄÄs t
)
ÄÄt u
;
ÄÄu v
return
ÅÅ 
Problem
ÅÅ 
(
ÅÅ 
	exception
ÅÅ (
.
ÅÅ( )
Message
ÅÅ) 0
)
ÅÅ0 1
;
ÅÅ1 2
}
ÆÆ 
}
ÇÇ 	
[
ÈÈ 	

HttpDelete
ÈÈ	 
]
ÈÈ 
public
ÉÉ 
IActionResult
ÉÉ !
DisableSkillDetails
ÉÉ 0
(
ÉÉ0 1
int
ÉÉ1 4
SkillId
ÉÉ5 <
)
ÉÉ< =
{
ÊÊ 	
if
ËË 
(
ËË 
SkillId
ËË 
<=
ËË 
$num
ËË 
)
ËË 
return
ÌÌ 

BadRequest
ÌÌ !
(
ÌÌ! "
new
ÌÌ" %
{
ÌÌ& '
message
ÌÌ( /
=
ÌÌ0 1
$str
ÌÌ2 U
}
ÌÌV W
)
ÌÌW X
;
ÌÌX Y
try
ÏÏ 
{
ÐÐ 
return
ÑÑ 
_profileService
ÑÑ &
.
ÑÑ& '!
DisableSkillDetails
ÑÑ' :
(
ÑÑ: ;
SkillId
ÑÑ; B
)
ÑÑB C
?
ÑÑD E
Ok
ÑÑF H
(
ÑÑH I
new
ÑÑI L
{
ÑÑM N
message
ÑÑO V
=
ÑÑW X
$str
ÑÑY u
}
ÑÑv w
)
ÑÑw x
:
ÑÑy z
ProblemÑÑ{ 
(ÑÑ 
$strÑÑ ¡
)ÑÑ¡ ¢
;ÑÑ¢ £
}
ÒÒ 
catch
ÓÓ 
(
ÓÓ #
ArgumentNullException
ÓÓ (
	exception
ÓÓ) 2
)
ÓÓ2 3
{
ÔÔ 
_logger
ÕÕ 
.
ÕÕ 
LogInformation
ÕÕ &
(
ÕÕ& '
$"
ÕÕ' )
$str
ÕÕ) R
{
ÕÕR S
	exception
ÕÕS \
.
ÕÕ\ ]
Message
ÕÕ] d
}
ÕÕd e
{
ÕÕe f
	exception
ÕÕf o
.
ÕÕo p

StackTrace
ÕÕp z
}
ÕÕz {
"
ÕÕ{ |
)
ÕÕ| }
;
ÕÕ} ~
return
ÖÖ 

BadRequest
ÖÖ !
(
ÖÖ! "
	exception
ÖÖ" +
.
ÖÖ+ ,
Message
ÖÖ, 3
)
ÖÖ3 4
;
ÖÖ4 5
}
×× 
catch
ØØ 
(
ØØ 
	Exception
ØØ 
	exception
ØØ &
)
ØØ& '
{
ÙÙ 
_logger
ÚÚ 
.
ÚÚ 
LogInformation
ÚÚ &
(
ÚÚ& '
$"
ÚÚ' )
$str
ÚÚ) j
{
ÚÚj k
	exception
ÚÚk t
}
ÚÚt u
"
ÚÚu v
)
ÚÚv w
;
ÚÚw x
return
ÛÛ 
Problem
ÛÛ 
(
ÛÛ 
$str
ÛÛ B
)
ÛÛB C
;
ÛÛC D
}
ÜÜ 
}
ÞÞ 	
[
ßß 	
HttpPost
ßß	 
]
ßß 
public
àà 
IActionResult
àà 
AddBreakDuration
àà -
(
àà- .
BreakDuration
àà. ;
duration
àà< D
)
ààD E
{
áá 	
if
ââ 
(
ââ 
duration
ââ 
==
ââ 
null
ââ  
)
ââ  !
{
ãã 
_logger
ää 
.
ää 
LogError
ää  
(
ää  !
$str
ää! g
)
ääg h
;
ääh i
return
åå 

BadRequest
åå !
(
åå! "
new
åå" %
{
åå& '
message
åå( /
=
åå0 1
$str
åå2 U
}
ååV W
)
ååW X
;
ååX Y
}
ææ 
try
çç 
{
èè 
return
éé 
_profileService
éé &
.
éé& '
AddBreakDuration
éé' 7
(
éé7 8
duration
éé8 @
)
éé@ A
?
ééB C
Ok
ééD F
(
ééF G
new
ééG J
{
ééK L
message
ééM T
=
ééU V
$str
ééW t
}
ééu v
)
éév w
:
ééx y
Problemééz 
(éé 
$stréé 
)éé  
;éé  ¡
}
êê 
catch
ëë 
(
ëë !
ValidationException
ëë &
	exception
ëë' 0
)
ëë0 1
{
ìì 
_logger
íí 
.
íí 
LogInformation
íí &
(
íí& '
$"
íí' )
$str
íí) N
{
ííN O
	exception
ííO X
.
ííX Y
Message
ííY `
}
íí` a
{
íía b
	exception
ííb k
.
íík l

StackTrace
ííl v
}
íív w
"
ííw x
)
ííx y
;
ííy z
return
îî 

BadRequest
îî !
(
îî! "
	exception
îî" +
.
îî+ ,
Message
îî, 3
)
îî3 4
;
îî4 5
}
ïï 
catch
ðð 
(
ðð #
ArgumentNullException
ðð (
	exception
ðð) 2
)
ðð2 3
{
ññ 
_logger
òò 
.
òò 
LogInformation
òò &
(
òò& '
$"
òò' )
$str
òò) O
{
òòO P
	exception
òòP Y
.
òòY Z
Message
òòZ a
}
òòa b
{
òòb c
	exception
òòc l
.
òòl m

StackTrace
òòm w
}
òòw x
"
òòx y
)
òòy z
;
òòz {
return
óó 

BadRequest
óó !
(
óó! "
	exception
óó" +
.
óó+ ,
Message
óó, 3
)
óó3 4
;
óó4 5
}
ôô 
catch
õõ 
(
õõ 
	Exception
õõ 
	exception
õõ &
)
õõ& '
{
öö 
_logger
÷÷ 
.
÷÷ 
LogInformation
÷÷ &
(
÷÷& '
$"
÷÷' )
$str
÷÷) N
{
÷÷N O
	exception
÷÷O X
.
÷÷X Y
Message
÷÷Y `
}
÷÷` a
{
÷÷a b
	exception
÷÷b k
.
÷÷k l

StackTrace
÷÷l v
}
÷÷v w
"
÷÷w x
)
÷÷x y
;
÷÷y z
return
øø 
Problem
øø 
(
øø 
$str
øø =
)
øø= >
;
øø> ?
}
ùù 
}
ûû 	
[
ýý 	

HttpDelete
ýý	 
]
ýý 
public
þþ 
IActionResult
þþ "
DisableBreakDuration
þþ 1
(
þþ1 2
int
þþ2 5
BreakDurationId
þþ6 E
)
þþE F
{
ÿÿ 	
if
 
(
 
BreakDurationId
 
<=
  "
$num
# $
)
$ %
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 ]
}
^ _
)
_ `
;
` a
try
 
{
 
return
 
_profileService
 &
.
& '"
DisableBreakDuration
' ;
(
; <
BreakDurationId
< K
)
K L
?
M N
Ok
O Q
(
Q R
new
R U
{
V W
message
X _
=
` a
$strb 
} 
) 
: 
Problem 
( 
$str ²
)² ³
;³ ´
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) S
{
S T
	exception
T ]
.
] ^
Message
^ e
}
e f
{
f g
	exception
g p
.
p q

StackTrace
q {
}
{ |
"
| }
)
} ~
;
~ 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) k
{
k l
	exception
l u
}
u v
"
v w
)
w x
;
x y
return
 
Problem
 
(
 
$str
 B
)
B C
;
C D
}
 
}
 	
[
 	
HttpPost
	 
]
 
public
 
IActionResult
 
AddLanguage
 (
(
( )
Language
) 1
language
2 :
)
: ;
{
 	
if
 
(
 
language
 
==
 
null
  
)
  !
{
 
_logger
 
.
 
LogError
  
(
  !
$str
! b
)
b c
;
c d
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 P
}
Q R
)
R S
;
S T
}
 
try
 
{
 
return
 
_profileService
 &
.
& '
AddLanguage
' 2
(
2 3
language
3 ;
)
; <
?
= >
Ok
? A
(
A B
new
B E
{
F G
message
H O
=
P Q
$str
R j
}
k l
)
l m
:
n o
Problem
p w
(
w x
$strx 
) 
; 
}
 
catch
   
(
   !
ValidationException
   &
	exception
  ' 0
)
  0 1
{
¡¡ 
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ &
(
¢¢& '
$"
¢¢' )
$str
¢¢) I
{
¢¢I J
	exception
¢¢J S
.
¢¢S T
Message
¢¢T [
}
¢¢[ \
{
¢¢\ ]
	exception
¢¢] f
.
¢¢f g

StackTrace
¢¢g q
}
¢¢q r
"
¢¢r s
)
¢¢s t
;
¢¢t u
return
££ 

BadRequest
££ !
(
££! "
	exception
££" +
.
££+ ,
Message
££, 3
)
££3 4
;
££4 5
}
¤¤ 
catch
¥¥ 
(
¥¥ #
ArgumentNullException
¥¥ (
	exception
¥¥) 2
)
¥¥2 3
{
¦¦ 
_logger
§§ 
.
§§ 
LogInformation
§§ &
(
§§& '
$"
§§' )
$str
§§) J
{
§§J K
	exception
§§K T
.
§§T U
Message
§§U \
}
§§\ ]
{
§§] ^
	exception
§§^ g
.
§§g h

StackTrace
§§h r
}
§§r s
"
§§s t
)
§§t u
;
§§u v
return
¨¨ 

BadRequest
¨¨ !
(
¨¨! "
	exception
¨¨" +
.
¨¨+ ,
Message
¨¨, 3
)
¨¨3 4
;
¨¨4 5
}
©© 
catch
ªª 
(
ªª 
	Exception
ªª 
	exception
ªª &
)
ªª& '
{
«« 
_logger
¬¬ 
.
¬¬ 
LogInformation
¬¬ &
(
¬¬& '
$"
¬¬' )
$str
¬¬) I
{
¬¬I J
	exception
¬¬J S
.
¬¬S T
Message
¬¬T [
}
¬¬[ \
{
¬¬\ ]
	exception
¬¬] f
.
¬¬f g

StackTrace
¬¬g q
}
¬¬q r
"
¬¬r s
)
¬¬s t
;
¬¬t u
return
­­ 
Problem
­­ 
(
­­ 
$str
­­ =
)
­­= >
;
­­> ?
}
®® 
}
°° 	
[
±± 	

HttpDelete
±±	 
]
±± 
public
²² 
IActionResult
²² 
DisableLanguage
²² ,
(
²², -
int
²²- 0
Language_Id
²²1 <
)
²²< =
{
³³ 	
if
´´ 
(
´´ 
Language_Id
´´ 
<=
´´ 
$num
´´  
)
´´  !
return
µµ 

BadRequest
µµ !
(
µµ! "
new
µµ" %
{
µµ& '
message
µµ( /
=
µµ0 1
$str
µµ2 Y
}
µµZ [
)
µµ[ \
;
µµ\ ]
try
¸¸ 
{
¹¹ 
return
ºº 
_profileService
ºº &
.
ºº& '
DisableLanguage
ºº' 6
(
ºº6 7
Language_Id
ºº7 B
)
ººB C
?
ººD E
Ok
ººF H
(
ººH I
new
ººI L
{
ººM N
message
ººO V
=
ººW X
$str
ººY x
}
ººy z
)
ººz {
:
ºº| }
Problemºº~ 
(ºº 
$strºº ¤
)ºº¤ ¥
;ºº¥ ¦
}
»» 
catch
¼¼ 
(
¼¼ #
ArgumentNullException
¼¼ (
	exception
¼¼) 2
)
¼¼2 3
{
½½ 
_logger
¾¾ 
.
¾¾ 
LogInformation
¾¾ &
(
¾¾& '
$"
¾¾' )
$str
¾¾) N
{
¾¾N O
	exception
¾¾O X
.
¾¾X Y
Message
¾¾Y `
}
¾¾` a
{
¾¾a b
	exception
¾¾b k
.
¾¾k l

StackTrace
¾¾l v
}
¾¾v w
"
¾¾w x
)
¾¾x y
;
¾¾y z
return
¿¿ 

BadRequest
¿¿ !
(
¿¿! "
	exception
¿¿" +
.
¿¿+ ,
Message
¿¿, 3
)
¿¿3 4
;
¿¿4 5
}
ÀÀ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ÂÂ 
_logger
ÃÃ 
.
ÃÃ 
LogInformation
ÃÃ &
(
ÃÃ& '
$"
ÃÃ' )
$str
ÃÃ) f
{
ÃÃf g
	exception
ÃÃg p
}
ÃÃp q
"
ÃÃq r
)
ÃÃr s
;
ÃÃs t
return
ÄÄ 
Problem
ÄÄ 
(
ÄÄ 
$str
ÄÄ B
)
ÄÄB C
;
ÄÄC D
}
ÅÅ 
}
ÆÆ 	
[
ÇÇ 	
HttpPost
ÇÇ	 
]
ÇÇ 
public
ÈÈ 
IActionResult
ÈÈ 
AddSocialMedia
ÈÈ +
(
ÈÈ+ ,
SocialMedia
ÈÈ, 7
media
ÈÈ8 =
)
ÈÈ= >
{
ÉÉ 	
if
ÊÊ 
(
ÊÊ 
media
ÊÊ 
==
ÊÊ 
null
ÊÊ 
)
ÊÊ 
{
ËË 
_logger
ÌÌ 
.
ÌÌ 
LogError
ÌÌ  
(
ÌÌ  !
$str
ÌÌ! e
)
ÌÌe f
;
ÌÌf g
return
ÍÍ 

BadRequest
ÍÍ !
(
ÍÍ! "
new
ÍÍ" %
{
ÍÍ& '
message
ÍÍ( /
=
ÍÍ0 1
$str
ÍÍ2 [
}
ÍÍ\ ]
)
ÍÍ] ^
;
ÍÍ^ _
}
ÎÎ 
try
ÏÏ 
{
ÐÐ 
return
ÑÑ 
_profileService
ÑÑ &
.
ÑÑ& '
AddSocialMedia
ÑÑ' 5
(
ÑÑ5 6
media
ÑÑ6 ;
)
ÑÑ; <
?
ÑÑ= >
Ok
ÑÑ? A
(
ÑÑA B
new
ÑÑB E
{
ÑÑF G
message
ÑÑH O
=
ÑÑP Q
$str
ÑÑR n
}
ÑÑo p
)
ÑÑp q
:
ÑÑr s
Problem
ÑÑt {
(
ÑÑ{ |
$strÑÑ| 
)ÑÑ 
;ÑÑ 
}
ÒÒ 
catch
ÓÓ 
(
ÓÓ !
ValidationException
ÓÓ &
	exception
ÓÓ' 0
)
ÓÓ0 1
{
ÔÔ 
_logger
ÕÕ 
.
ÕÕ 
LogInformation
ÕÕ &
(
ÕÕ& '
$"
ÕÕ' )
$str
ÕÕ) L
{
ÕÕL M
	exception
ÕÕM V
.
ÕÕV W
Message
ÕÕW ^
}
ÕÕ^ _
{
ÕÕ_ `
	exception
ÕÕ` i
.
ÕÕi j

StackTrace
ÕÕj t
}
ÕÕt u
"
ÕÕu v
)
ÕÕv w
;
ÕÕw x
return
ÖÖ 

BadRequest
ÖÖ !
(
ÖÖ! "
	exception
ÖÖ" +
.
ÖÖ+ ,
Message
ÖÖ, 3
)
ÖÖ3 4
;
ÖÖ4 5
}
×× 
catch
ØØ 
(
ØØ #
ArgumentNullException
ØØ (
	exception
ØØ) 2
)
ØØ2 3
{
ÙÙ 
_logger
ÚÚ 
.
ÚÚ 
LogInformation
ÚÚ &
(
ÚÚ& '
$"
ÚÚ' )
$str
ÚÚ) M
{
ÚÚM N
	exception
ÚÚN W
.
ÚÚW X
Message
ÚÚX _
}
ÚÚ_ `
{
ÚÚ` a
	exception
ÚÚa j
.
ÚÚj k

StackTrace
ÚÚk u
}
ÚÚu v
"
ÚÚv w
)
ÚÚw x
;
ÚÚx y
return
ÛÛ 

BadRequest
ÛÛ !
(
ÛÛ! "
	exception
ÛÛ" +
.
ÛÛ+ ,
Message
ÛÛ, 3
)
ÛÛ3 4
;
ÛÛ4 5
}
ÜÜ 
catch
ÝÝ 
(
ÝÝ 
	Exception
ÝÝ 
	exception
ÝÝ &
)
ÝÝ& '
{
ÞÞ 
_logger
ßß 
.
ßß 
LogInformation
ßß &
(
ßß& '
$"
ßß' )
$str
ßß) L
{
ßßL M
	exception
ßßM V
.
ßßV W
Message
ßßW ^
}
ßß^ _
{
ßß_ `
	exception
ßß` i
.
ßßi j

StackTrace
ßßj t
}
ßßt u
"
ßßu v
)
ßßv w
;
ßßw x
return
àà 
Problem
àà 
(
àà 
$str
àà =
)
àà= >
;
àà> ?
}
áá 
}
ãã 	
[
ää 	

HttpDelete
ää	 
]
ää 
public
åå 
IActionResult
åå  
DisableSocialMedia
åå /
(
åå/ 0
int
åå0 3
SocialMedia_Id
åå4 B
)
ååB C
{
ææ 	
if
çç 
(
çç 
SocialMedia_Id
çç 
<=
çç !
$num
çç" #
)
çç# $
return
èè 

BadRequest
èè !
(
èè! "
new
èè" %
{
èè& '
message
èè( /
=
èè0 1
$str
èè2 \
}
èè] ^
)
èè^ _
;
èè_ `
try
ëë 
{
ìì 
return
íí 
_profileService
íí &
.
íí& ' 
DisableSocialMedia
íí' 9
(
íí9 :
SocialMedia_Id
íí: H
)
ííH I
?
ííJ K
Ok
ííL N
(
ííN O
new
ííO R
{
ííS T
message
ííU \
=
íí] ^
$stríí_ 
}íí 
)íí 
:íí 
Problemíí 
(íí 
$stríí ®
)íí® ¯
;íí¯ °
}
îî 
catch
ïï 
(
ïï #
ArgumentNullException
ïï (
	exception
ïï) 2
)
ïï2 3
{
ðð 
_logger
ññ 
.
ññ 
LogInformation
ññ &
(
ññ& '
$"
ññ' )
$str
ññ) Q
{
ññQ R
	exception
ññR [
.
ññ[ \
Message
ññ\ c
}
ññc d
{
ññd e
	exception
ññe n
.
ññn o

StackTrace
ñño y
}
ññy z
"
ññz {
)
ññ{ |
;
ññ| }
return
òò 

BadRequest
òò !
(
òò! "
	exception
òò" +
.
òò+ ,
Message
òò, 3
)
òò3 4
;
òò4 5
}
óó 
catch
ôô 
(
ôô 
	Exception
ôô 
	exception
ôô &
)
ôô& '
{
õõ 
_logger
öö 
.
öö 
LogInformation
öö &
(
öö& '
$"
öö' )
$str
öö) i
{
ööi j
	exception
ööj s
}
öös t
"
ööt u
)
ööu v
;
ööv w
return
÷÷ 
Problem
÷÷ 
(
÷÷ 
$str
÷÷ B
)
÷÷B C
;
÷÷C D
}
øø 
}
úú 	
[
ûû 	
HttpPost
ûû	 
]
ûû 
public
üü 
IActionResult
üü 
AddAchievement
üü +
(
üü+ ,
Achievements
üü, 8
achievement
üü9 D
)
üüD E
{
ýý 	
if
þþ 
(
þþ 
achievement
þþ 
==
þþ 
null
þþ #
)
þþ# $
{
ÿÿ 
_logger
 
.
 
LogError
  
(
  !
$str
! e
)
e f
;
f g
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 S
}
T U
)
U V
;
V W
}
 
try
 
{
 
return
 
_profileService
 &
.
& '
AddAchievements
' 6
(
6 7
achievement
7 B
)
B C
?
D E
Ok
F H
(
H I
new
I L
{
M N
message
O V
=
W X
$str
Y u
}
v w
)
w x
:
y z
Problem{ 
( 
$str  
)  ¡
;¡ ¢
}
 
catch
 
(
 !
ValidationException
 &
	exception
' 0
)
0 1
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) L
{
L M
	exception
M V
.
V W
Message
W ^
}
^ _
{
_ `
	exception
` i
.
i j

StackTrace
j t
}
t u
"
u v
)
v w
;
w x
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 #
ArgumentNullException
 (
	exception
) 2
)
2 3
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) M
{
M N
	exception
N W
.
W X
Message
X _
}
_ `
{
` a
	exception
a j
.
j k

StackTrace
k u
}
u v
"
v w
)
w x
;
x y
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) L
{
L M
	exception
M V
.
V W
Message
W ^
}
^ _
{
_ `
	exception
` i
.
i j

StackTrace
j t
}
t u
"
u v
)
v w
;
w x
return
 
Problem
 
(
 
$str
 =
)
= >
;
> ?
}
 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
  
GetallAchievements
 /
(
/ 0
)
0 1
{
 	
try
 
{
 
return
 
Ok
 
(
 
_profileService
 )
.
) * 
GetallAchievements
* <
(
< =
)
= >
)
> ?
;
? @
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
   
_logger
¡¡ 
.
¡¡ 
LogInformation
¡¡ &
(
¡¡& '
$"
¡¡' )
$str
¡¡) y
{
¡¡y z
	exception¡¡z 
.¡¡ 
Message¡¡ 
}¡¡ 
{¡¡ 
	exception¡¡ 
.¡¡ 

StackTrace¡¡ ¡
}¡¡¡ ¢
"¡¡¢ £
)¡¡£ ¤
;¡¡¤ ¥
return
¢¢ 
Problem
¢¢ 
(
¢¢ 
	exception
¢¢ (
.
¢¢( )
Message
¢¢) 0
)
¢¢0 1
;
¢¢1 2
}
££ 
}
¦¦ 	
[
§§ 	
HttpGet
§§	 
]
§§ 
public
¨¨ 
IActionResult
¨¨ 1
#GetAllAchievementDetailsByProfileId
¨¨ @
(
¨¨@ A
int
¨¨A D
	Profileid
¨¨E N
)
¨¨N O
{
©© 	
if
ªª 
(
ªª 
	Profileid
ªª 
<=
ªª 
$num
ªª 
)
ªª 
return
«« 

BadRequest
«« !
(
««! "
new
««" %
{
««& '
message
««( /
=
««0 1
$str
««2 X
}
««Y Z
)
««Z [
;
««[ \
try
¬¬ 
{
­­ 
return
¯¯ 
Ok
¯¯ 
(
¯¯ 
_profileService
¯¯ )
.
¯¯) *1
#GetAllAchievementDetailsByProfileId
¯¯* M
(
¯¯M N
	Profileid
¯¯N W
)
¯¯W X
)
¯¯X Y
;
¯¯Y Z
}
°° 
catch
±± 
(
±± #
ArgumentNullException
±± (
	exception
±±) 2
)
±±2 3
{
²² 
_logger
³³ 
.
³³ 
LogInformation
³³ &
(
³³& '
$"
³³' )
$str
³³) b
{
³³b c
	exception
³³c l
.
³³l m
Message
³³m t
}
³³t u
{
³³u v
	exception
³³v 
.³³ 

StackTrace³³ 
}³³ 
"³³ 
)³³ 
;³³ 
return
´´ 

BadRequest
´´ !
(
´´! "
	exception
´´" +
.
´´+ ,
Message
´´, 3
)
´´3 4
;
´´4 5
}
µµ 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
	exception
¶¶ &
)
¶¶& '
{
·· 
_logger
¸¸ 
.
¸¸ 
LogInformation
¸¸ &
(
¸¸& '
$"
¸¸' )
$str¸¸) 
{¸¸ 
	exception¸¸ 
.¸¸ 
Message¸¸ 
}¸¸ 
{¸¸ 
	exception¸¸ §
.¸¸§ ¨

StackTrace¸¸¨ ²
}¸¸² ³
"¸¸³ ´
)¸¸´ µ
;¸¸µ ¶
return
¹¹ 
Problem
¹¹ 
(
¹¹ 
	exception
¹¹ (
.
¹¹( )
Message
¹¹) 0
)
¹¹0 1
;
¹¹1 2
}
ºº 
}
»» 	
[
¼¼ 	

HttpDelete
¼¼	 
]
¼¼ 
public
½½ 
IActionResult
½½ !
DisableAchievements
½½ 0
(
½½0 1
int
½½1 4
achievementId
½½5 B
)
½½B C
{
¾¾ 	
if
¿¿ 
(
¿¿ 
achievementId
¿¿ 
<=
¿¿  
$num
¿¿! "
)
¿¿" #
return
ÀÀ 

BadRequest
ÀÀ !
(
ÀÀ! "
new
ÀÀ" %
{
ÀÀ& '
message
ÀÀ( /
=
ÀÀ0 1
$str
ÀÀ2 \
}
ÀÀ] ^
)
ÀÀ^ _
;
ÀÀ_ `
try
ÃÃ 
{
ÄÄ 
return
ÅÅ 
_profileService
ÅÅ &
.
ÅÅ& ' 
DisableAchievement
ÅÅ' 9
(
ÅÅ9 :
achievementId
ÅÅ: G
)
ÅÅG H
?
ÅÅI J
Ok
ÅÅK M
(
ÅÅM N
new
ÅÅN Q
{
ÅÅR S
message
ÅÅT [
=
ÅÅ\ ]
$strÅÅ^ 
}ÅÅ 
)ÅÅ 
:ÅÅ 
ProblemÅÅ 
(ÅÅ 
$strÅÅ ¬
)ÅÅ¬ ­
;ÅÅ­ ®
}
ÆÆ 
catch
ÇÇ 
(
ÇÇ #
ArgumentNullException
ÇÇ (
	exception
ÇÇ) 2
)
ÇÇ2 3
{
ÈÈ 
_logger
ÉÉ 
.
ÉÉ 
LogInformation
ÉÉ &
(
ÉÉ& '
$"
ÉÉ' )
$str
ÉÉ) R
{
ÉÉR S
	exception
ÉÉS \
.
ÉÉ\ ]
Message
ÉÉ] d
}
ÉÉd e
{
ÉÉe f
	exception
ÉÉf o
.
ÉÉo p

StackTrace
ÉÉp z
}
ÉÉz {
"
ÉÉ{ |
)
ÉÉ| }
;
ÉÉ} ~
return
ÊÊ 

BadRequest
ÊÊ !
(
ÊÊ! "
	exception
ÊÊ" +
.
ÊÊ+ ,
Message
ÊÊ, 3
)
ÊÊ3 4
;
ÊÊ4 5
}
ËË 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
	exception
ÌÌ &
)
ÌÌ& '
{
ÍÍ 
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ &
(
ÎÎ& '
$"
ÎÎ' )
$str
ÎÎ) U
{
ÎÎU V
	exception
ÎÎV _
.
ÎÎ_ `
Message
ÎÎ` g
}
ÎÎg h
{
ÎÎh i
	exception
ÎÎi r
.
ÎÎr s

StackTrace
ÎÎs }
}
ÎÎ} ~
"
ÎÎ~ 
)ÎÎ 
;ÎÎ 
return
ÏÏ 
Problem
ÏÏ 
(
ÏÏ 
	exception
ÏÏ (
.
ÏÏ( )
Message
ÏÏ) 0
)
ÏÏ0 1
;
ÏÏ1 2
}
ÐÐ 
}
ÑÑ 	
[
ÒÒ 	
HttpGet
ÒÒ	 
]
ÒÒ 
public
ÓÓ 
IActionResult
ÓÓ 
GetallProfiles
ÓÓ +
(
ÓÓ+ ,
)
ÓÓ, -
{
ÔÔ 	
try
ÕÕ 
{
ÖÖ 
return
ØØ 
Ok
ØØ 
(
ØØ 
_profileService
ØØ )
.
ØØ) *
GetallProfiles
ØØ* 8
(
ØØ8 9
)
ØØ9 :
)
ØØ: ;
;
ØØ; <
}
ÙÙ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
	exception
ÚÚ &
)
ÚÚ& '
{
ÛÛ 
_logger
ÜÜ 
.
ÜÜ 
LogInformation
ÜÜ &
(
ÜÜ& '
$"
ÜÜ' )
$str
ÜÜ) u
{
ÜÜu v
	exception
ÜÜv 
.ÜÜ 
MessageÜÜ 
}ÜÜ 
{ÜÜ 
	exceptionÜÜ 
.ÜÜ 

StackTraceÜÜ 
}ÜÜ 
"ÜÜ 
)ÜÜ  
;ÜÜ  ¡
return
ÝÝ 
Problem
ÝÝ 
(
ÝÝ 
	exception
ÝÝ (
.
ÝÝ( )
Message
ÝÝ) 0
)
ÝÝ0 1
;
ÝÝ1 2
}
ÞÞ 
}
ßß 	
[
ââ 	
HttpGet
ââ	 
]
ââ 
public
ãã 
IActionResult
ãã 
GetProfileById
ãã +
(
ãã+ ,
int
ãã, /
id
ãã0 2
)
ãã2 3
{
ää 	
if
åå 
(
åå 
id
åå 
<=
åå 
$num
åå 
)
åå 
{
ææ 
_logger
çç 
.
çç 
LogError
çç  
(
çç  !
$str
çç! d
)
ççd e
;
ççe f
return
èè 

BadRequest
èè !
(
èè! "
new
èè" %
{
èè& '
message
èè( /
=
èè0 1
$str
èè2 ]
}
èè^ _
)
èè_ `
;
èè` a
}
éé 
try
êê 
{
ëë 
return
íí 
Ok
íí 
(
íí 
_profileService
íí )
.
íí) *
GetProfileById
íí* 8
(
íí8 9
id
íí9 ;
)
íí; <
)
íí< =
;
íí= >
}
îî 
catch
ïï 
(
ïï #
ArgumentNullException
ïï (
	exception
ïï) 2
)
ïï2 3
{
ðð 
_logger
ññ 
.
ññ 
LogInformation
ññ &
(
ññ& '
$"
ññ' )
$str
ññ) M
{
ññM N
	exception
ññN W
.
ññW X
Message
ññX _
}
ññ_ `
{
ññ` a
	exception
ñña j
.
ññj k

StackTrace
ññk u
}
ññu v
"
ññv w
)
ññw x
;
ññx y
return
òò 

BadRequest
òò !
(
òò! "
	exception
òò" +
.
òò+ ,
Message
òò, 3
)
òò3 4
;
òò4 5
}
óó 
catch
ôô 
(
ôô 
	Exception
ôô 
	exception
ôô &
)
ôô& '
{
õõ 
_logger
öö 
.
öö 
LogInformation
öö &
(
öö& '
$"
öö' )
$str
öö) u
{
ööu v
	exception
ööv 
.öö 
Messageöö 
}öö 
{öö 
	exceptionöö 
.öö 

StackTraceöö 
}öö 
"öö 
)öö  
;öö  ¡
return
÷÷ 
Problem
÷÷ 
(
÷÷ 
	exception
÷÷ (
.
÷÷( )
Message
÷÷) 0
)
÷÷0 1
;
÷÷1 2
}
øø 
}
ùù 	
[
úú 	
HttpGet
úú	 
]
úú 
public
ûû 
IActionResult
ûû '
GetProfileIdByGivenUserId
ûû 6
(
ûû6 7
int
ûû7 :
userId
ûû; A
)
ûûA B
{
üü 	
try
ýý 
{
þþ 
return
 
Ok
 
(
 
_profileService
 )
.
) *"
GetProfileIdByUserId
* >
(
> ?
userId
? E
)
E F
)
F G
;
G H
}
 
catch
 
(
 !
ValidationException
 &
	exception
' 0
)
0 1
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str) 
{ 
	exception 
. 
Message 
} 
" 
) 
; 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
}
 	
[
 	
HttpGet
	 
]
 
public
 
IActionResult
 "
GetProfileIdByUserId
 1
(
1 2
)
2 3
{
 	
try
 
{
 
int
 
currentUser
 
=
  !
Convert
" )
.
) *
ToInt32
* 1
(
1 2
User
2 6
.
6 7
	FindFirst
7 @
(
@ A
$str
A I
)
I J
?
J K
.
K L
Value
L Q
)
Q R
;
R S
return
 
Ok
 
(
 
_profileService
 )
.
) *"
GetProfileIdByUserId
* >
(
> ?
currentUser
? J
)
J K
)
K L
;
M N
}
 
catch
 
(
 !
ValidationException
 &
	exception
' 0
)
0 1
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str) 
{ 
	exception 
. 
Message 
} 
" 
) 
; 
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
}
 	
[
 	
AllowAnonymous
	 
]
 
[
   	
HttpGet
  	 
]
   
public
¡¡ 
IActionResult
¡¡ 
GetProfileCount
¡¡ ,
(
¡¡, -
)
¡¡- .
{
¢¢ 	
try
££ 
{
¤¤ 
return
¥¥ 
Ok
¥¥ 
(
¥¥ 
_profileService
¥¥ )
.
¥¥) *
GetProfileCount
¥¥* 9
(
¥¥9 :
)
¥¥: ;
)
¥¥; <
;
¥¥< =
}
§§ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
	exception
¨¨ &
)
¨¨& '
{
©© 
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) v
{
ªªv w
	exceptionªªw 
.ªª 
Messageªª 
}ªª 
{ªª 
	exceptionªª 
.ªª 

StackTraceªª 
}ªª 
"ªª  
)ªª  ¡
;ªª¡ ¢
return
«« 
Problem
«« 
(
«« 
	exception
«« (
.
««( )
Message
««) 0
)
««0 1
;
««1 2
}
¬¬ 
}
¯¯ 	
[
°° 	
HttpPost
°°	 
]
°° 
public
±± 
IActionResult
±± 
GetFilterdProfile
±± .
(
±±. /
CascadeFilter
±±/ <
filterValues
±±= I
)
±±I J
{
²² 	
try
³³ 
{
´´ 
int
µµ  
currentdesignation
µµ &
=
µµ' (
Convert
µµ) 0
.
µµ0 1
ToInt32
µµ1 8
(
µµ8 9
User
µµ9 =
.
µµ= >
	FindFirst
µµ> G
(
µµG H
$str
µµH W
)
µµW X
?
µµX Y
.
µµY Z
Value
µµZ _
)
µµ_ `
;
µµa b
return
¶¶ 
Ok
¶¶ 
(
¶¶ 
_profileService
¶¶ )
.
¶¶) *
GetFilterdProfile
¶¶* ;
(
¶¶; <
filterValues
¶¶< H
.
¶¶H I
UserName
¶¶I Q
!
¶¶Q R
,
¶¶R S
filterValues
¶¶S _
.
¶¶_ `
DesignationId
¶¶` m
,
¶¶m n
filterValues
¶¶o {
.
¶¶{ |
DomainID¶¶| 
,¶¶ 
filterValues¶¶ 
.¶¶ 
TechnologyId¶¶ 
,¶¶  
filterValues¶¶¡ ­
.¶¶­ ®
	CollegeId¶¶® ·
,¶¶· ¸
filterValues¶¶¹ Å
.¶¶Å Æ
ProfileStatusId¶¶Æ Õ
,¶¶Õ Ö
filterValues¶¶Ö â
.¶¶â ã
MaxExperience¶¶ã ð
,¶¶ð ñ
filterValues¶¶ò þ
.¶¶þ ÿ
MinExperience¶¶ÿ 
,¶¶ "
currentdesignation¶¶ 
)¶¶  
)¶¶  ¡
;¶¶¡ ¢
}
·· 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
	exception
¸¸ &
)
¸¸& '
{
¹¹ 
_logger
ºº 
.
ºº 
LogError
ºº  
(
ºº  !
$"
ºº! #
$str
ºº# K
{
ººK L
	exception
ººL U
.
ººU V
Message
ººV ]
}
ºº] ^
{
ºº^ _
	exception
ºº_ h
.
ººh i

StackTrace
ººi s
}
ººs t
"
ººt u
)
ººu v
;
ººv w
return
»» 
Problem
»» 
(
»» 
	exception
»» (
.
»»( )
Message
»») 0
)
»»0 1
;
»»1 2
}
¼¼ 
}
½½ 	
[
¾¾ 	
HttpPost
¾¾	 
]
¾¾ 
public
¿¿ 
IActionResult
¿¿ #
AcceptOrRejectProfile
¿¿ 2
(
¿¿2 3
int
¿¿3 6
	profileId
¿¿7 @
,
¿¿@ A
int
¿¿B E
response
¿¿F N
)
¿¿N O
{
ÀÀ 	
if
ÁÁ 
(
ÁÁ 
	profileId
ÁÁ 
<=
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
{
ÂÂ 
_logger
ÃÃ 
.
ÃÃ 
LogError
ÃÃ  
(
ÃÃ  !
$str
ÃÃ! f
)
ÃÃf g
;
ÃÃg h
return
ÄÄ 

BadRequest
ÄÄ !
(
ÄÄ! "
new
ÄÄ" %
{
ÄÄ& '
message
ÄÄ( /
=
ÄÄ0 1
$str
ÄÄ2 G
}
ÄÄH I
)
ÄÄI J
;
ÄÄJ K
}
ÅÅ 
try
ÆÆ 
{
ÇÇ 
_profileService
ÈÈ 
.
ÈÈ  #
AcceptOrRejectProfile
ÈÈ  5
(
ÈÈ5 6
	profileId
ÈÈ6 ?
,
ÈÈ? @
response
ÈÈA I
)
ÈÈI J
;
ÈÈJ K
return
ÉÉ 
Ok
ÉÉ 
(
ÉÉ 
new
ÉÉ 
{
ÉÉ 
message
ÉÉ  '
=
ÉÉ( )
$str
ÉÉ* B
}
ÉÉC D
)
ÉÉD E
;
ÉÉE F
}
ÊÊ 
catch
ËË 
(
ËË !
ValidationException
ËË &
	exception
ËË' 0
)
ËË0 1
{
ÌÌ 
_logger
ÍÍ 
.
ÍÍ 
LogInformation
ÍÍ &
(
ÍÍ& '
$"
ÍÍ' )
$str
ÍÍ) T
{
ÍÍT U
	exception
ÍÍU ^
.
ÍÍ^ _
Message
ÍÍ_ f
}
ÍÍf g
{
ÍÍg h
	exception
ÍÍh q
.
ÍÍq r

StackTrace
ÍÍr |
}
ÍÍ| }
"
ÍÍ} ~
)
ÍÍ~ 
;ÍÍ 
return
ÎÎ 

BadRequest
ÎÎ !
(
ÎÎ! "
	exception
ÎÎ" +
.
ÎÎ+ ,
Message
ÎÎ, 3
)
ÎÎ3 4
;
ÎÎ4 5
}
ÏÏ 
catch
ÐÐ 
(
ÐÐ 
	Exception
ÐÐ 
	exception
ÐÐ &
)
ÐÐ& '
{
ÑÑ 
_logger
ÒÒ 
.
ÒÒ 
LogInformation
ÒÒ &
(
ÒÒ& '
$"
ÒÒ' )
$str
ÒÒ) T
{
ÒÒT U
	exception
ÒÒU ^
.
ÒÒ^ _
Message
ÒÒ_ f
}
ÒÒf g
{
ÒÒg h
	exception
ÒÒh q
.
ÒÒq r

StackTrace
ÒÒr |
}
ÒÒ| }
"
ÒÒ} ~
)
ÒÒ~ 
;ÒÒ 
return
ÓÓ 
Problem
ÓÓ 
(
ÓÓ 
$str
ÓÓ =
)
ÓÓ= >
;
ÓÓ> ?
}
ÔÔ 
}
ÕÕ 	
[
ÖÖ 	
HttpPost
ÖÖ	 
]
ÖÖ 
public
×× 
IActionResult
×× 
RequestToUpdate
×× ,
(
××, -
int
××- 0
	profileId
××1 :
)
××: ;
{
ØØ 	
if
ÙÙ 
(
ÙÙ 
	profileId
ÙÙ 
<=
ÙÙ 
$num
ÙÙ 
)
ÙÙ 
{
ÚÚ 
_logger
ÛÛ 
.
ÛÛ 
LogError
ÛÛ  
(
ÛÛ  !
$str
ÛÛ! f
)
ÛÛf g
;
ÛÛg h
return
ÜÜ 

BadRequest
ÜÜ !
(
ÜÜ! "
new
ÜÜ" %
{
ÜÜ& '
message
ÜÜ( /
=
ÜÜ0 1
$str
ÜÜ2 G
}
ÜÜH I
)
ÜÜI J
;
ÜÜJ K
}
ÝÝ 
try
ÞÞ 
{
ßß 
_mailService
àà 
.
àà !
RequestToUpdateFile
àà 0
(
àà0 1
	profileId
àà1 :
)
àà: ;
;
àà; <
return
áá 
Ok
áá 
(
áá 
$str
áá O
)
ááO P
;
ááP Q
}
ââ 
catch
ãã 
(
ãã !
ValidationException
ãã &
	exception
ãã' 0
)
ãã0 1
{
ää 
_logger
åå 
.
åå 
LogInformation
åå &
(
åå& '
$"
åå' )
$str
åå) T
{
ååT U
	exception
ååU ^
.
åå^ _
Message
åå_ f
}
ååf g
{
ååg h
	exception
ååh q
.
ååq r

StackTrace
åår |
}
åå| }
"
åå} ~
)
åå~ 
;åå 
return
ææ 

BadRequest
ææ !
(
ææ! "
	exception
ææ" +
.
ææ+ ,
Message
ææ, 3
)
ææ3 4
;
ææ4 5
}
çç 
catch
èè 
(
èè 
	Exception
èè 
	exception
èè &
)
èè& '
{
éé 
_logger
êê 
.
êê 
LogInformation
êê &
(
êê& '
$"
êê' )
$str
êê) T
{
êêT U
	exception
êêU ^
.
êê^ _
Message
êê_ f
}
êêf g
{
êêg h
	exception
êêh q
.
êêq r

StackTrace
êêr |
}
êê| }
"
êê} ~
)
êê~ 
;êê 
return
ëë 
Problem
ëë 
(
ëë 
$str
ëë =
)
ëë= >
;
ëë> ?
}
ìì 
}
íí 	
[
îî 	
HttpPost
îî	 
]
îî 
public
ïï 
IActionResult
ïï 
ShareProfile
ïï )
(
ïï) *
string
ïï* 0

profileUrl
ïï1 ;
,
ïï; <
int
ïï= @
	profileId
ïïA J
,
ïïJ K
string
ïïL R
toEmailName
ïïS ^
)
ïï^ _
{
ðð 	
if
ññ 
(
ññ 
String
ññ 
.
ññ 
IsNullOrEmpty
ññ $
(
ññ$ %

profileUrl
ññ% /
)
ññ/ 0
)
ññ0 1
{
òò 
_logger
óó 
.
óó 
LogError
óó  
(
óó  !
$str
óó! f
)
óóf g
;
óóg h
return
ôô 

BadRequest
ôô !
(
ôô! "
new
ôô" %
{
ôô& '
message
ôô( /
=
ôô0 1
$str
ôô2 G
}
ôôH I
)
ôôI J
;
ôôJ K
}
õõ 
try
öö 
{
÷÷ 
_mailService
øø 
.
øø 
ShareProfile
øø )
(
øø) *

profileUrl
øø* 4
,
øø4 5
	profileId
øø6 ?
,
øø? @
toEmailName
øøA L
)
øøL M
;
øøM N
return
ùù 
Ok
ùù 
(
ùù 
$str
ùù ?
)
ùù? @
;
ùù@ A
}
úú 
catch
ûû 
(
ûû !
ValidationException
ûû &
	exception
ûû' 0
)
ûû0 1
{
üü 
_logger
ýý 
.
ýý 
LogInformation
ýý &
(
ýý& '
$"
ýý' )
$str
ýý) T
{
ýýT U
	exception
ýýU ^
.
ýý^ _
Message
ýý_ f
}
ýýf g
{
ýýg h
	exception
ýýh q
.
ýýq r

StackTrace
ýýr |
}
ýý| }
"
ýý} ~
)
ýý~ 
;ýý 
return
þþ 

BadRequest
þþ !
(
þþ! "
	exception
þþ" +
.
þþ+ ,
Message
þþ, 3
)
þþ3 4
;
þþ4 5
}
ÿÿ 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) T
{
T U
	exception
U ^
.
^ _
Message
_ f
}
f g
{
g h
	exception
h q
.
q r

StackTrace
r |
}
| }
"
} ~
)
~ 
; 
return
 
Problem
 
(
 
$str
 =
)
= >
;
> ?
}
 
}
 	
[
 	
HttpPut
	 
]
 
public
 
IActionResult
 !
updateProfileStatus
 0
(
0 1
Profile
1 8
profile
9 @
)
@ A
{
 	
if
 
(
 
profile
 
.
 
Equals
 
(
 
null
 #
)
# $
)
$ %
{
 
_logger
 
.
 
LogError
  
(
  !
$str
! a
)
a b
;
b c
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 G
}
H I
)
I J
;
J K
}
 
try
 
{
 
return
 
_profileService
 &
.
& '!
updateProfileStatus
' :
(
: ;
profile
; B
)
B C
?
C D
Ok
E G
(
G H
$str
H i
)
i j
:
j k
Problem
l s
(
s t
$strt 
) 
; 
}
 
catch
 
(
 !
ValidationException
 &
	exception
' 0
)
0 1
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) R
{
R S
	exception
S \
.
\ ]
Message
] d
}
d e
{
e f
	exception
f o
.
o p

StackTrace
p z
}
z {
"
{ |
)
| }
;
} ~
return
 

BadRequest
 !
(
! "
	exception
" +
.
+ ,
Message
, 3
)
3 4
;
4 5
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) R
{
R S
	exception
S \
.
\ ]
Message
] d
}
d e
{
e f
	exception
f o
.
o p

StackTrace
p z
}
z {
"
{ |
)
| }
;
} ~
return
 
Problem
 
(
 
$str
 =
)
= >
;
> ?
}
 
}
 	
}
 
} î
nC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\ProfileStatusController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		 #
ProfileStatusController		 $
:		% &
ControllerBase		' 5
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 	#
ProfileStatusController
 !
(! "
ILogger" )
<) *#
ProfileStatusController* A
>A B
loggerC I
)I J
{ 
_logger 
= 
logger 
; 
} 
private 
readonly "
IProfileStatusServices , 
ProfileStatusService- A
=B C$
ProfileStatusDataFactoryD \
.\ ])
GetProfileStatusServiceObject] z
(z {
){ |
;| }
[ 
HttpGet 
] 
public 

IActionResult 
ViewProfileStatuss +
(+ ,
), -
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ B
)B C
;C D
return 
Ok 
(  
ProfileStatusService *
.* +
ViewProfileStatuss+ =
(= >
)> ?
)? @
;@ A
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$" !
$str! N
{N O
	exceptionO X
.X Y
MessageY `
}` a
{a b
	exceptionb k
.k l

StackTracel v
}v w
"w x
)x y
;y z
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" Ï
kC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\TechnologyController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		  
TechnologyController		 !
:		" #
ControllerBase		$ 2
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 
 
TechnologyController 
(  
ILogger  '
<' ( 
TechnologyController( <
>< =
logger> D
)D E
{ 
_logger 
= 
logger 
; 
} 
private 
readonly 
ITechnologyServices (
technologyService) :
=; <!
TechnologyDataFactory= R
.R S&
GetTechnologyServiceObjectS m
(m n
)n o
;o p
[ 
HttpGet 
] 
public 

IActionResult 
ViewTechnologies )
() *
)* +
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ @
)@ A
;A B
return 
Ok 
( 
technologyService '
.' (
ViewTechnologies( 8
(8 9
)9 :
): ;
;; <
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$"  
$str  H
{H I
	exceptionI R
.R S
MessageS Z
}Z [
{[ \
	exception\ e
.e f

StackTracef p
}p q
"q r
)r s
;s t
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" ú
eC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Controllers\UserController.cs
	namespace 	
PMS_API
 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 "
)

" #
]

# $
public 

class 
UserController 
:  

Controller  *
{* +
private 
readonly 
IUserServices '
_userServices( 5
;5 6
private 
readonly 
ILogger  
_logger! (
;( )
public 
UserController 
( 
IUserServices +
userServices, 8
,8 9
ILogger9 @
<@ A
UserControllerA O
>O P
loggerQ W
)W X
{ 	
_userServices 
= 
userServices &
;& '
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IActionResult 
Getallusers (
(( )
int) ,
profilestatusId- <
)< =
{= >
try 
{ 
int 
currentDesignation &
=' (
Convert) 0
.0 1
ToInt321 8
(8 9
User9 =
.= >
	FindFirst> G
(G H
$strH W
)W X
?X Y
.Y Z
ValueZ _
)_ `
;a b
return 
Ok 
( 
_userServices '
.' (
GetallUsers( 3
(3 4
profilestatusId4 C
,C D
currentDesignationD V
)V W
)W X
;X Y
} 
catch 
( 
	Exception 
	exception $
)$ %
{% &
_logger 
. 
LogInformation %
(% &
$"& (
$str( n
{n o
	exceptiono x
.x y
Message	y 
}
 
{
 
	exception
 
.
 

StackTrace
 
}
 
"
 
)
 
;
 
return 
Problem 
( 
	exception '
.' (
Message( /
)/ 0
;0 1
} 
}   	
[!! 	
HttpGet!!	 
]!! 
public## 
IActionResult## 
GetUserProfile## +
(##+ ,
)##, -
{%% 	
try'' 
{'' 
int)) 
currentUser)) 
=))  !
Convert))" )
.))) *
ToInt32))* 1
())1 2
User))2 6
.))6 7
	FindFirst))7 @
())@ A
$str))A I
)))I J
?))J K
.))K L
Value))L Q
)))Q R
;))R S
return++ 
Ok++ 
(++ 
_userServices++ '
.++' (
GetUser++( /
(++/ 0
currentUser++0 ;
)++; <
)++< =
;++= >
}-- 
catch// 
(// 
	Exception// 
	exception// %
)//% &
{//& '
_logger11 
.11 
LogInformation11 &
(11& '
$"11' )
$str11) o
{11o p
	exception11p y
.11y z
Message	11z 
}
11 
{
11 
	exception
11 
.
11 

StackTrace
11 
}
11 
"
11 
)
11 
;
11 
return33 
Problem33 
(33 
	exception33 '
.33' (
Message33( /
)33/ 0
;330 1
}55 
}77 	
[88 	
HttpGet88	 
]88 
public99 
IActionResult99 "
GetSpecificUserDetails99 3
(993 4
)994 5
{995 6
try:: 
{:: 
return<< 
Ok<< 
(<< 
_userServices<< '
.<<' ("
GetSpecificUserDetails<<( >
(<<> ?
)<<? @
)<<@ A
;<<A B
}== 
catch>> 
(>> 
	Exception>> 
	exception>> $
)>>$ %
{>>% &
_logger?? 
.?? 
LogInformation?? %
(??% &
$"??& (
$str??( y
{??y z
	exception	??z 
.
?? 
Message
?? 
}
?? 
{
?? 
	exception
?? 
.
?? 

StackTrace
?? ¡
}
??¡ ¢
"
??¢ £
)
??£ ¤
;
??¤ ¥
return@@ 
Problem@@ 
(@@ 
	exception@@ '
.@@' (
Message@@( /
)@@/ 0
;@@0 1
}AA 
}DD 	
[EE 	
HttpGetEE	 
]EE 
publicFF 
IActionResultFF 
GetUserByIdFF (
(FF( )
intFF) ,
idFF- /
)FF/ 0
{GG 	
tryHH 
{HH 
returnJJ 
OkJJ 
(JJ 
_userServicesJJ '
.JJ' (
GetUserJJ( /
(JJ/ 0
idJJ0 2
)JJ2 3
)JJ3 4
;JJ4 5
}KK 
catchLL 
(LL 
ValidationExceptionLL %
	exceptionLL& /
)LL/ 0
{LL0 1
_loggerMM 
.MM 
LogInformationMM &
(MM& '
$"MM' )
$strMM) G
{MMG H
	exceptionMMH Q
.MMQ R
MessageMMR Y
}MMY Z
{MMZ [
	exceptionMM[ d
.MMd e

StackTraceMMe o
}MMo p
"MMp q
)MMq r
;MMr s
returnNN 

BadRequestNN !
(NN! "
	exceptionNN" +
.NN+ ,
MessageNN, 3
)NN3 4
;NN4 5
}OO 
catchPP 
(PP 
	ExceptionPP 
	exceptionPP %
)PP% &
{PP& '
_loggerQQ 
.QQ 
LogInformationQQ &
(QQ& '
$"QQ' )
$strQQ) o
{QQo p
	exceptionQQp y
.QQy z
Message	QQz 
}
QQ 
{
QQ 
	exception
QQ 
.
QQ 

StackTrace
QQ 
}
QQ 
"
QQ 
)
QQ 
;
QQ 
returnRR 
ProblemRR 
(RR 
	exceptionRR '
.RR' (
MessageRR( /
)RR/ 0
;RR0 1
}SS 
}TT 	
[VV 	
HttpPostVV	 
]VV 
publicWW 
IActionResultWW 
AddUserWW $
(WW$ %
UserWW% )

userValuesWW* 4
)WW4 5
{WW5 6
ifXX 
(XX 

userValuesXX 
==XX 
nullXX 
)XX  
{XX  !
_loggerYY 
.YY 
LogInformationYY &
(YY& '
$strYY' b
)YYb c
;YYc d
returnZZ 

BadRequestZZ !
(ZZ! "
$strZZ" B
)ZZB C
;ZZC D
}[[ 
try^^ 
{^^ 
int__ 
currentUser__ 
=__  !
Convert__" )
.__) *
ToInt32__* 1
(__1 2
User__2 6
.__6 7
	FindFirst__7 @
(__@ A
$str__A I
)__I J
?__J K
.__K L
Value__L Q
)__Q R
;__S T
returnbb 
_userServicesbb $
.bb$ %
AddUserbb% ,
(bb, -

userValuesbb- 7
,bb7 8
currentUserbb8 C
)bbC D
?bbD E
OkbbE G
(bbG H
newbbH K
{bbK L
messagebbL S
=bbS T
$strbbT m
}bbm n
)bbn o
:bbo p
Problembbp w
(bbw x
$str	bbx 
)
bb 
;
bb 
}ee 
catchff 
(ff 
ValidationExceptionff %
	exceptionff& /
)ff/ 0
{ff0 1
_loggergg 
.gg 
LogInformationgg &
(gg& '
$"gg' )
$strgg) C
{ggC D
	exceptionggD M
.ggM N
MessageggN U
}ggU V
{ggV W
	exceptionggW `
.gg` a

StackTracegga k
}ggk l
"ggl m
)ggm n
;ggn o
returnhh 

BadRequesthh !
(hh! "
	exceptionhh" +
.hh+ ,
Messagehh, 3
)hh3 4
;hh4 5
}ii 
catchjj 
(jj !
ArgumentNullExceptionjj '
	exceptionjj( 1
)jj1 2
{jj2 3
_loggerkk 
.kk 
LogInformationkk &
(kk& '
$"kk' )
$strkk) C
{kkC D
	exceptionkkD M
.kkM N
MessagekkN U
}kkU V
{kkV W
	exceptionkkW `
.kk` a

StackTracekka k
}kkk l
"kkl m
)kkm n
;kkn o
returnll 

BadRequestll !
(ll! "
	exceptionll" +
.ll+ ,
Messagell, 3
)ll3 4
;ll4 5
}mm 
catchnn 
(nn 
	Exceptionnn 
	exceptionnn %
)nn% &
{nn& '
_loggeroo 
.oo 
LogInformationoo &
(oo& '
$"oo' )
$stroo) C
{ooC D
	exceptionooD M
.ooM N
MessageooN U
}ooU V
{ooV W
	exceptionooW `
.oo` a

StackTraceooa k
}ook l
"ool m
)oom n
;oon o
returnpp 
Problempp 
(pp 
$strpp =
)pp= >
;pp> ?
}qq 
}rr 	
[ss	 

HttpPutss
 
]ss 
publicuu	 
IActionResultuu 

UpdateUseruu (
(uu( )
Useruu) -
useruu. 2
,uu2 3
intuu3 6
iduu7 9
)uu9 :
{vv	 

ifww 
(ww 
userww 
==ww 
nullww 
)ww 
{ww 
_loggerxx 
.xx 
LogInformationxx &
(xx& '
$strxx' e
)xxe f
;xxf g
returnyy 

BadRequestyy !
(yy! "
$stryy" ;
)yy; <
;yy< =
}zz 
try~~ 
{~~ 
return
 
_userServices
 $
.
$ %

UpdateUser
% /
(
/ 0
user
0 4
)
4 5
?
5 6
Ok
7 9
(
9 :
new
: =
{
= >
message
> E
=
E F
$str
F a
}
a b
)
b c
:
c d

BadRequest
d n
(
n o
new
o r
{
r s
message
s z
=
z {
$str{ 
} 
) 
; 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
' (
_logger
 
.
 
LogInformation
 '
(
' (
$"
( *
$str
* F
{
F G
	exception
G P
.
P Q
Message
Q X
}
X Y
{
Y Z
	exception
Z c
.
c d

StackTrace
d n
}
n o
"
o p
)
p q
;
q r
return
 
Problem
 
(
  
	exception
  )
.
) *
Message
* 1
)
1 2
;
2 3
}
 
}
 	
[
	 


HttpDelete

 
(
 
Name
 
=
 
$str
 #
)
# $
]
$ %
public
	 
IActionResult
 
Disable
 %
(
% &
int
& )
id
* ,
)
, -
{
- .
if
 
(
 
id
 
==
 
$num
 
)
 
return
  

BadRequest
! +
(
+ ,
new
, /
{
/ 0
message
0 7
=
7 8
$str
8 J
}
J K
)
K L
;
L M
try
 
{
 
return
 
_userServices
 $
.
$ %
Disable
% ,
(
, -
id
- /
)
/ 0
?
0 1
Ok
1 3
(
3 4
new
4 7
{
7 8
message
8 ?
=
? @
$str
@ \
}
\ ]
)
] ^
:
^ _

BadRequest
_ i
(
i j
new
j m
{
m n
message
n u
=
u v
$strv 
} 
) 
; 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
' (
_logger
 
.
 
LogInformation
 '
(
' (
$"
( *
$str
* G
{
G H
	exception
H Q
.
Q R
Message
R Y
}
Y Z
{
Z [
	exception
[ d
.
d e

StackTrace
e o
}
o p
"
p q
)
q r
;
r s
return
 
Problem
 
(
  
	exception
  )
.
) *

StackTrace
* 4
)
4 5
;
5 6
}
 
}
 	
[
 
HttpPut
 
(
 
$str
 
)
 
]
  
public
 

IActionResult
 
ChangePassword
 '
(
' (
string
( .
OldPassword
/ :
,
: ;
string
; A
NewPassword
B M
,
M N
string
N T
ConfirmPassword
U d
)
d e
{
 
if
   

(
   
string
   
.
   
IsNullOrEmpty
    
(
    !
OldPassword
  ! ,
)
  , -
&&
  . 0
string
  1 7
.
  7 8
IsNullOrEmpty
  8 E
(
  E F
NewPassword
  F Q
)
  Q R
&&
  S U
string
  V \
.
  \ ]
IsNullOrEmpty
  ] j
(
  j k
ConfirmPassword
  k z
)
  z {
)
  { |

BadRequest
¢¢ 
(
¢¢ 
$str
¢¢ A
)
¢¢A B
;
¢¢B C
try
¤¤ 
{
¦¦ 	
int
§§ 
currentUser
§§ 
=
§§ 
Convert
§§ %
.
§§% &
ToInt32
§§& -
(
§§- .
User
§§. 2
.
§§2 3
	FindFirst
§§3 <
(
§§< =
$str
§§= E
)
§§E F
?
§§F G
.
§§G H
Value
§§H M
)
§§M N
;
§§N O
return
¨¨ 
_userServices
¨¨  
.
¨¨  !
ChangePassword
¨¨! /
(
¨¨/ 0
OldPassword
¨¨0 ;
,
¨¨; <
NewPassword
¨¨< G
,
¨¨G H
ConfirmPassword
¨¨H W
,
¨¨W X
currentUser
¨¨X c
)
¨¨c d
?
¨¨e f
Ok
¨¨g i
(
¨¨i j
$str¨¨j 
)¨¨ 
:¨¨ 

BadRequest¨¨ 
(¨¨ 
$str¨¨ ¶
)¨¨¶ ·
;¨¨· ¸
}
¬¬ 	
catch
®® 
(
®® !
ValidationException
®® "
	exception
®®# ,
)
®®, -
{
°° 	
_logger
²² 
.
²² 
LogInformation
²² "
(
²²" #
$"
²²# %
$str²²% 
{²² 
	exception²² 
.²² 
Message²² 
}²² 
"²² 
)²² 
;²² 
return
´´ 

BadRequest
´´ 
(
´´ 
	exception
´´ '
.
´´' (
Message
´´( /
)
´´/ 0
;
´´0 1
}
¶¶ 	
catch
ºº 
(
ºº 
	Exception
ºº 
	exception
ºº "
)
ºº" #
{
¼¼ 	
_logger
¾¾ 
.
¾¾ 
LogInformation
¾¾ "
(
¾¾" #
$str
¾¾# S
,
¾¾S T
	exception
¾¾U ^
)
¾¾^ _
;
¾¾_ `
return
ÀÀ 

BadRequest
ÀÀ 
(
ÀÀ 
$str
ÀÀ A
)
ÀÀA B
;
ÀÀB C
}
ÂÂ 	
}
ÆÆ 
[
ÇÇ 
HttpGet
ÇÇ 
]
ÇÇ 
public
ÈÈ 
IActionResult
ÈÈ &
GetAllUsersByDesignation
ÈÈ 5
(
ÈÈ5 6
)
ÈÈ6 7
{
ÈÈ7 8
try
ÉÉ 
{
ÉÉ 
int
ÊÊ  
currentDesignation
ÊÊ &
=
ÊÊ' (
Convert
ÊÊ) 0
.
ÊÊ0 1
ToInt32
ÊÊ1 8
(
ÊÊ8 9
User
ÊÊ9 =
.
ÊÊ= >
	FindFirst
ÊÊ> G
(
ÊÊG H
$str
ÊÊH W
)
ÊÊW X
?
ÊÊX Y
.
ÊÊY Z
Value
ÊÊZ _
)
ÊÊ_ `
;
ÊÊa b
return
ËË 
Ok
ËË 
(
ËË 
_userServices
ËË '
.
ËË' (&
GetAllUsersByDesignation
ËË( @
(
ËË@ A 
currentDesignation
ËËA S
)
ËËS T
)
ËËT U
;
ËËU V
}
ÌÌ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
	exception
ÍÍ $
)
ÍÍ$ %
{
ÍÍ% &
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ %
(
ÎÎ% &
$"
ÎÎ& (
$str
ÎÎ( {
{
ÎÎ{ |
	exceptionÎÎ| 
.ÎÎ 
MessageÎÎ 
}ÎÎ 
{ÎÎ 
	exceptionÎÎ 
.ÎÎ 

StackTraceÎÎ £
}ÎÎ£ ¤
"ÎÎ¤ ¥
)ÎÎ¥ ¦
;ÎÎ¦ §
return
ÏÏ 
Problem
ÏÏ 
(
ÏÏ 
	exception
ÏÏ '
.
ÏÏ' (
Message
ÏÏ( /
)
ÏÏ/ 0
;
ÏÏ0 1
}
ÐÐ 
}
ÑÑ 	
}
ÓÓ 
}ÔÔ ´
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\CustomException\MailException.cs
	namespace 	
PMS_API
 
{ 
[ 
Serializable 
] 
public 

class 
MailException 
:  
	Exception! *
{ 
public 
MailException 
( 
string #
errorMessage$ 0
)0 1
:2 3
base4 8
(8 9
errorMessage9 E
)E F
{F G
}G H
	protected		 
MailException		 
(		  
SerializationInfo		  1
info		2 6
,		6 7
StreamingContext		8 H
context		I P
)		P Q
:

 
base

 
(

 
info

 
,

 
context

  
)

  !
{ 	
} 	
} 
} 
qC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\CollegeDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

class "
CollegeDataAccessLayer '
:' (#
ICollegeDataAccessLayer( ?
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  "
CollegeDataAccessLayer  6
>6 7
_logger8 ?
=@ A
defaultB I
!I J
;J K
public			 
List		 
<		 
College		 
>		 
GetColleges		 )
(		) *
)		* +
{

 	
try 
{ 
return 
_db 
. 
Colleges #
!# $
.$ %
ToList% +
(+ ,
), -
;- .
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
}   	
}$$ 
}%% ÙÙ
bC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\Context.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Context 
: 
	DbContext $
{ 
public 
Context 
( 
) 
{ 
} 
public		 
Context		 
(		 
DbContextOptions		 '
<		' (
Context		( /
>		/ 0
options		1 8
)		8 9
:		: ;
base		< @
(		@ A
options		A H
)		H I
{

 	
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
optionsBuilder 
. 
UseSqlServer '
(' (
$str( a
)a b
;b c
} 	
public 
DbSet 
< 
User 
> 
? 
users !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DbSet 
< 
Profile 
> 
? 
profile &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
PersonalDetails $
>$ %
?& '
personalDetails' 6
{7 8
get9 <
;< =
set> A
;A B
}C D
public 
DbSet 
< 
	Education 
> 
?  !

educations! +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
DbSet 
< 
Language 
> 
? 
	languages  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
BreakDuration "
>" #
?# $
breakDurations% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
DbSet 
< 
Projects 
> 
? 
projects  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
Skills 
> 
? 
skills $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
SocialMedia  
>  !
?! "
SocialMedias# /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
DbSet 
< 
College 
> 
? 
Colleges '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DbSet 
< 
Designation  
>  !
?! "
Designations# /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
DbSet 
< 
Domain 
> 
? 
Domains %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 

Technology 
>  
?  !
Technologies" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Organisation !
>! "
?" #
Organisations$ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
DbSet 
< 
ProfileStatus "
>" #
?# $
ProfileStatuss% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public   
DbSet   
<   
AchievementType   $
>  $ %
?  % &
achievementtype  ' 6
{  7 8
get  9 <
;  < =
set  > A
;  A B
}  C D
public!! 
DbSet!! 
<!! 
Achievements!! !
>!!! "
?!!" #
achievements!!$ 0
{!!1 2
get!!3 6
;!!6 7
set!!8 ;
;!!; <
}!!= >
public"" 
DbSet"" 
<"" 
ProfileHistory"" #
>""# $
?""$ %
profilehistory""& 4
{""5 6
get""7 :
;"": ;
set""< ?
;""? @
}""A B
public## 
DbSet## 
<## 
CountryCode##  
>##  !
?##! "
CountryCodes### /
{##0 1
get##2 5
;##5 6
set##7 :
;##: ;
}##< =
public$$ 
DbSet$$ 
<$$ 
ChangePassword$$ #
>$$# $
?$$$ %
ChangePasswords$$& 5
{$$6 7
get$$8 ;
;$$; <
set$$= @
;$$@ A
}$$B C
	protected'' 
override'' 
void'' 
OnModelCreating''  /
(''/ 0
ModelBuilder''0 <
modelBuilder''= I
)''I J
{(( 	
modelBuilder** 
.** 
Entity** 
<**  
College**  '
>**' (
(**( )
)**) *
.++ 
HasData++  
(++  !
new,, 
College,, $
{,,% &
	CollegeId,,' 0
=,,1 2
$num,,3 4
,,,4 5
CollegeName,,6 A
=,,B C
$str,,D K
,,,K L
IsActive,,M U
=,,V W
true,,X \
},,] ^
,,,^ _
new-- 
College-- $
{--% &
	CollegeId--' 0
=--1 2
$num--3 4
,--4 5
CollegeName--6 A
=--B C
$str--D J
,--J K
IsActive--L T
=--U V
true--W [
}--\ ]
,--] ^
new.. 
College.. $
{..% &
	CollegeId..' 0
=..1 2
$num..3 4
,..4 5
CollegeName..6 A
=..B C
$str..D I
,..I J
IsActive..K S
=..T U
true..V Z
}..[ \
,..\ ]
new// 
College// $
{//% &
	CollegeId//' 0
=//1 2
$num//3 4
,//4 5
CollegeName//6 A
=//B C
$str//D H
,//H I
IsActive//J R
=//S T
true//U Y
}//Z [
,//[ \
new00 
College00 $
{00% &
	CollegeId00' 0
=001 2
$num003 4
,004 5
CollegeName006 A
=00B C
$str00D J
,00J K
IsActive00L T
=00U V
true00W [
}00\ ]
,00] ^
new11 
College11 $
{11% &
	CollegeId11' 0
=111 2
$num113 4
,114 5
CollegeName116 A
=11B C
$str11D I
,11I J
IsActive11K S
=11T U
true11V Z
}11[ \
,11\ ]
new22 
College22 $
{22% &
	CollegeId22' 0
=221 2
$num223 4
,224 5
CollegeName226 A
=22B C
$str22D I
,22I J
IsActive22K S
=22T U
true22V Z
}22[ \
,22\ ]
new33 
College33 $
{33% &
	CollegeId33' 0
=331 2
$num333 4
,334 5
CollegeName336 A
=33B C
$str33D P
,33P Q
IsActive33R Z
=33[ \
true33] a
}33b c
,33c d
new44 
College44 $
{44% &
	CollegeId44' 0
=441 2
$num443 4
,444 5
CollegeName446 A
=44B C
$str44D I
,44I J
IsActive44K S
=44T U
true44V Z
}44[ \
,44\ ]
new55 
College55 $
{55% &
	CollegeId55' 0
=551 2
$num553 5
,555 6
CollegeName557 B
=55C D
$str55E J
,55J K
IsActive55L T
=55U V
true55W [
}55\ ]
)66 
;66 
modelBuilder77 
.77 
Entity77 
<77  
Designation77  +
>77+ ,
(77, -
)77- .
.88 
HasData88  
(88  !
new99 
Designation99 (
{99) *
DesignationId99+ 8
=999 :
$num99; <
,99< =
DesignationName99> M
=99N O
$str99P T
,99T U
IsActive99V ^
=99_ `
true99a e
}99f g
,99g h
new:: 
Designation:: (
{::) *
DesignationId::+ 8
=::9 :
$num::; <
,::< =
DesignationName::> M
=::N O
$str::P W
,::W X
IsActive::Y a
=::b c
true::d h
}::i j
,::j k
new;; 
Designation;; (
{;;) *
DesignationId;;+ 8
=;;9 :
$num;;; <
,;;< =
DesignationName;;> M
=;;N O
$str;;P U
,;;U V
IsActive;;W _
=;;` a
true;;b f
};;g h
,;;h i
new<< 
Designation<< (
{<<) *
DesignationId<<+ 8
=<<9 :
$num<<; <
,<<< =
DesignationName<<> M
=<<N O
$str<<P T
,<<T U
IsActive<<V ^
=<<_ `
true<<a e
}<<f g
,<<g h
new== 
Designation== (
{==) *
DesignationId==+ 8
===9 :
$num==; <
,==< =
DesignationName==> M
===N O
$str==P U
,==U V
IsActive==W _
===` a
true==b f
}==g h
,==h i
new>> 
Designation>> (
{>>) *
DesignationId>>+ 8
=>>9 :
$num>>; <
,>>< =
DesignationName>>> M
=>>N O
$str>>P T
,>>T U
IsActive>>V ^
=>>_ `
true>>a e
}>>f g
,>>g h
new?? 
Designation?? (
{??) *
DesignationId??+ 8
=??9 :
$num??; <
,??< =
DesignationName??> M
=??N O
$str??P T
,??T U
IsActive??V ^
=??_ `
true??a e
}??f g
,??g h
new@@ 
Designation@@ (
{@@) *
DesignationId@@+ 8
=@@9 :
$num@@; <
,@@< =
DesignationName@@> M
=@@N O
$str@@P T
,@@T U
IsActive@@V ^
=@@_ `
true@@a e
}@@f g
,@@g h
newAA 
DesignationAA (
{AA) *
DesignationIdAA+ 8
=AA9 :
$numAA; <
,AA< =
DesignationNameAA> M
=AAN O
$strAAP T
,AAT U
IsActiveAAV ^
=AA_ `
trueAAa e
}AAf g
,AAg h
newBB 
DesignationBB (
{BB) *
DesignationIdBB+ 8
=BB9 :
$numBB; =
,BB= >
DesignationNameBB? N
=BBO P
$strBBQ U
,BBU V
IsActiveBBW _
=BB` a
trueBBb f
}BBg h
,BBh i
newCC 
DesignationCC (
{CC) *
DesignationIdCC+ 8
=CC9 :
$numCC; =
,CC= >
DesignationNameCC? N
=CCO P
$strCCQ V
,CCV W
IsActiveCCX `
=CCa b
trueCCc g
}CCh i
,CCi j
newDD 
DesignationDD (
{DD) *
DesignationIdDD+ 8
=DD9 :
$numDD; =
,DD= >
DesignationNameDD? N
=DDO P
$strDDQ U
,DDU V
IsActiveDDW _
=DD` a
trueDDb f
}DDg h
)EE 
;EE 
modelBuilderFF 
.FF 
EntityFF 
<FF  
DomainFF  &
>FF& '
(FF' (
)FF( )
.GG 
HasDataGG  
(GG  !
newHH 
DomainHH #
{HH$ %
DomainIdHH& .
=HH/ 0
$numHH1 2
,HH2 3

DomainNameHH4 >
=HH? @
$strHHA E
,HHE F
IsActiveHHG O
=HHP Q
trueHHR V
}HHW X
,HHX Y
newII 
DomainII #
{II$ %
DomainIdII& .
=II/ 0
$numII1 2
,II2 3

DomainNameII4 >
=II? @
$strIIA L
,IIL M
IsActiveIIN V
=IIW X
trueIIY ]
}II^ _
,II_ `
newJJ 
DomainJJ #
{JJ$ %
DomainIdJJ& .
=JJ/ 0
$numJJ1 2
,JJ2 3

DomainNameJJ4 >
=JJ? @
$strJJA F
,JJF G
IsActiveJJH P
=JJQ R
trueJJS W
}JJX Y
,JJY Z
newKK 
DomainKK #
{KK$ %
DomainIdKK& .
=KK/ 0
$numKK1 2
,KK2 3

DomainNameKK4 >
=KK? @
$strKKA I
,KKI J
IsActiveKKK S
=KKT U
trueKKV Z
}KK[ \
,KK\ ]
newLL 
DomainLL #
{LL$ %
DomainIdLL& .
=LL/ 0
$numLL1 2
,LL2 3

DomainNameLL4 >
=LL? @
$strLLA E
,LLE F
IsActiveLLG O
=LLP Q
trueLLR V
}LLW X
,LLX Y
newMM 
DomainMM #
{MM$ %
DomainIdMM& .
=MM/ 0
$numMM1 2
,MM2 3

DomainNameMM4 >
=MM? @
$strMMA L
,MML M
IsActiveMMN V
=MMW X
trueMMY ]
}MM^ _
,MM_ `
newNN 
DomainNN #
{NN$ %
DomainIdNN& .
=NN/ 0
$numNN1 2
,NN2 3

DomainNameNN4 >
=NN? @
$strNNA N
,NNN O
IsActiveNNP X
=NNY Z
trueNN[ _
}NN` a
,NNa b
newOO 
DomainOO #
{OO$ %
DomainIdOO& .
=OO/ 0
$numOO1 2
,OO2 3

DomainNameOO4 >
=OO? @
$strOOA J
,OOJ K
IsActiveOOL T
=OOU V
trueOOW [
}OO\ ]
,OO] ^
newPP 
DomainPP #
{PP$ %
DomainIdPP& .
=PP/ 0
$numPP1 2
,PP2 3

DomainNamePP4 >
=PP? @
$strPPA G
,PPG H
IsActivePPI Q
=PPR S
truePPT X
}PPY Z
,PPZ [
newQQ 
DomainQQ #
{QQ$ %
DomainIdQQ& .
=QQ/ 0
$numQQ1 3
,QQ3 4

DomainNameQQ5 ?
=QQ@ A
$strQQB J
,QQJ K
IsActiveQQL T
=QQU V
trueQQW [
}QQ\ ]
)RR 
;RR 
modelBuilderSS 
.SS 
EntitySS 
<SS  
GenderSS  &
>SS& '
(SS' (
)SS( )
.TT 
HasDataTT  
(TT  !
newUU 
GenderUU #
{UU$ %
GenderIdUU& .
=UU/ 0
$numUU1 2
,UU2 3

GenderNameUU4 >
=UU? @
$strUUA G
,UUG H
IsActiveUUI Q
=UUR S
trueUUT X
}UUY Z
,UUZ [
newVV 
GenderVV #
{VV$ %
GenderIdVV& .
=VV/ 0
$numVV1 2
,VV2 3

GenderNameVV4 >
=VV? @
$strVVA I
,VVI J
IsActiveVVK S
=VVT U
trueVVV Z
}VV[ \
,VV\ ]
newWW 
GenderWW #
{WW$ %
GenderIdWW& .
=WW/ 0
$numWW1 2
,WW2 3

GenderNameWW4 >
=WW? @
$strWWA I
,WWI J
IsActiveWWK S
=WWT U
trueWWV Z
}WW[ \
)XX 
;XX 
modelBuilderYY 
.YY 
EntityYY 
<YY  
OrganisationYY  ,
>YY, -
(YY- .
)YY. /
.ZZ 
HasDataZZ  
(ZZ  !
new[[ 
Organisation[[ )
{[[* +
OrganisationId[[, :
=[[; <
$num[[= >
,[[> ?
OrganisationName[[@ P
=[[Q R
$str[[S `
,[[` a
IsActive[[b j
=[[k l
true[[m q
}[[r s
,[[s t
new\\ 
Organisation\\ )
{\\* +
OrganisationId\\, :
=\\; <
$num\\= >
,\\> ?
OrganisationName\\@ P
=\\Q R
$str\\S \
,\\\ ]
IsActive\\^ f
=\\g h
true\\i m
}\\n o
,\\o p
new]] 
Organisation]] )
{]]* +
OrganisationId]], :
=]]; <
$num]]= >
,]]> ?
OrganisationName]]@ P
=]]Q R
$str]]S \
,]]\ ]
IsActive]]^ f
=]]g h
true]]i m
}]]n o
,]]o p
new^^ 
Organisation^^ )
{^^* +
OrganisationId^^, :
=^^; <
$num^^= >
,^^> ?
OrganisationName^^@ P
=^^Q R
$str^^S Z
,^^Z [
IsActive^^\ d
=^^e f
true^^g k
}^^l m
,^^m n
new__ 
Organisation__ )
{__* +
OrganisationId__, :
=__; <
$num__= >
,__> ?
OrganisationName__@ P
=__Q R
$str__S [
,__[ \
IsActive__] e
=__f g
true__h l
}__m n
,__n o
new`` 
Organisation`` )
{``* +
OrganisationId``, :
=``; <
$num``= >
,``> ?
OrganisationName``@ P
=``Q R
$str``S W
,``W X
IsActive``Y a
=``b c
true``d h
}``i j
,``j k
newaa 
Organisationaa )
{aa* +
OrganisationIdaa, :
=aa; <
$numaa= >
,aa> ?
OrganisationNameaa@ P
=aaQ R
$straaS Z
,aaZ [
IsActiveaa\ d
=aae f
trueaag k
}aal m
,aam n
newbb 
Organisationbb )
{bb* +
OrganisationIdbb, :
=bb; <
$numbb= >
,bb> ?
OrganisationNamebb@ P
=bbQ R
$strbbS X
,bbX Y
IsActivebbZ b
=bbc d
truebbe i
}bbj k
,bbk l
newcc 
Organisationcc )
{cc* +
OrganisationIdcc, :
=cc; <
$numcc= >
,cc> ?
OrganisationNamecc@ P
=ccQ R
$strccS W
,ccW X
IsActiveccY a
=ccb c
trueccd h
}cci j
,ccj k
newdd 
Organisationdd )
{dd* +
OrganisationIddd, :
=dd; <
$numdd= ?
,dd? @
OrganisationNameddA Q
=ddR S
$strddT Z
,ddZ [
IsActivedd\ d
=dde f
trueddg k
}ddl m
)ee 
;ee 
modelBuilderff 
.ff 
Entityff 
<ff  

Technologyff  *
>ff* +
(ff+ ,
)ff, -
.gg 
HasDatagg  
(gg  !
newhh 

Technologyhh '
{hh( )
TechnologyIdhh* 6
=hh7 8
$numhh9 :
,hh: ;
TechnologyNamehh< J
=hhK L
$strhhM S
,hhS T
IsActivehhU ]
=hh^ _
truehh` d
}hhe f
,hhf g
newii 

Technologyii '
{ii( )
TechnologyIdii* 6
=ii7 8
$numii9 :
,ii: ;
TechnologyNameii< J
=iiK L
$striiM U
,iiU V
IsActiveiiW _
=ii` a
trueiib f
}iig h
,iih i
newjj 

Technologyjj '
{jj( )
TechnologyIdjj* 6
=jj7 8
$numjj9 :
,jj: ;
TechnologyNamejj< J
=jjK L
$strjjM S
,jjS T
IsActivejjU ]
=jj^ _
truejj` d
}jje f
,jjf g
newkk 

Technologykk '
{kk( )
TechnologyIdkk* 6
=kk7 8
$numkk9 :
,kk: ;
TechnologyNamekk< J
=kkK L
$strkkM R
,kkR S
IsActivekkT \
=kk] ^
truekk_ c
}kkd e
,kke f
newll 

Technologyll '
{ll( )
TechnologyIdll* 6
=ll7 8
$numll9 :
,ll: ;
TechnologyNamell< J
=llK L
$strllM R
,llR S
IsActivellT \
=ll] ^
truell_ c
}lld e
,lle f
newmm 

Technologymm '
{mm( )
TechnologyIdmm* 6
=mm7 8
$nummm9 :
,mm: ;
TechnologyNamemm< J
=mmK L
$strmmM U
,mmU V
IsActivemmW _
=mm` a
truemmb f
}mmg h
,mmh i
newnn 

Technologynn '
{nn( )
TechnologyIdnn* 6
=nn7 8
$numnn9 :
,nn: ;
TechnologyNamenn< J
=nnK L
$strnnM R
,nnR S
IsActivennT \
=nn] ^
truenn_ c
}nnd e
,nne f
newoo 

Technologyoo '
{oo( )
TechnologyIdoo* 6
=oo7 8
$numoo9 :
,oo: ;
TechnologyNameoo< J
=ooK L
$strooM V
,ooV W
IsActiveooX `
=ooa b
trueooc g
}ooh i
,ooi j
newpp 

Technologypp '
{pp( )
TechnologyIdpp* 6
=pp7 8
$numpp9 :
,pp: ;
TechnologyNamepp< J
=ppK L
$strppM P
,ppP Q
IsActiveppR Z
=pp[ \
truepp] a
}ppb c
,ppc d
newqq 

Technologyqq '
{qq( )
TechnologyIdqq* 6
=qq7 8
$numqq9 ;
,qq; <
TechnologyNameqq= K
=qqL M
$strqqN U
,qqU V
IsActiveqqW _
=qq` a
trueqqb f
}qqg h
)rr 
;rr 
modelBuilderss 
.ss 
Entityss 
<ss  
ProfileStatusss  -
>ss- .
(ss. /
)ss/ 0
.tt 
HasDatatt  
(tt  !
newuu 
ProfileStatusuu *
{uu+ ,
ProfileStatusIduu- <
=uu= >
$numuu? @
,uu@ A
ProfileStatusNameuuB S
=uuT U
$struuV `
,uu` a
IsActiveuub j
=uuk l
trueuum q
}uur s
,uus t
newvv 
ProfileStatusvv *
{vv+ ,
ProfileStatusIdvv- <
=vv= >
$numvv? @
,vv@ A
ProfileStatusNamevvB S
=vvT U
$strvvV _
,vv_ `
IsActivevva i
=vvj k
truevvl p
}vvq r
,vvr s
newww 
ProfileStatusww *
{ww+ ,
ProfileStatusIdww- <
=ww= >
$numww? @
,ww@ A
ProfileStatusNamewwB S
=wwT U
$strwwV `
,ww` a
IsActivewwb j
=wwk l
truewwm q
}wwr s
)xx 
;xx 
modelBuilderyy 
.yy 
Entityyy 
<yy  
CountryCodeyy  +
>yy+ ,
(yy, -
)yy- .
.zz 
HasDatazz  
(zz  !
new{{ 
CountryCode{{ (
{{{) *
CountryCodeId{{+ 8
={{9 :
$num{{; <
,{{< =
CountryCodeName{{> M
={{N O
$str{{P U
,{{U V
IsActive{{W _
={{` a
true{{b f
}{{g h
,{{h i
new|| 
CountryCode|| (
{||) *
CountryCodeId||+ 8
=||9 :
$num||; <
,||< =
CountryCodeName||> M
=||N O
$str||P T
,||T U
IsActive||V ^
=||_ `
true||a e
}||f g
,||g h
new}} 
CountryCode}} (
{}}) *
CountryCodeId}}+ 8
=}}9 :
$num}}; <
,}}< =
CountryCodeName}}> M
=}}N O
$str}}P U
,}}U V
IsActive}}W _
=}}` a
true}}b f
}}}g h
,}}h i
new~~ 
CountryCode~~ (
{~~) *
CountryCodeId~~+ 8
=~~9 :
$num~~; <
,~~< =
CountryCodeName~~> M
=~~N O
$str~~P U
,~~U V
IsActive~~W _
=~~` a
true~~b f
}~~g h
,~~h i
new 
CountryCode (
{) *
CountryCodeId+ 8
=9 :
$num; <
,< =
CountryCodeName> M
=N O
$strP U
,U V
IsActiveW _
=` a
trueb f
}g h
,h i
new
 
CountryCode
 (
{
) *
CountryCodeId
+ 8
=
9 :
$num
; <
,
< =
CountryCodeName
> M
=
N O
$str
P U
,
U V
IsActive
W _
=
` a
true
b f
}
g h
,
h i
new
 
CountryCode
 (
{
) *
CountryCodeId
+ 8
=
9 :
$num
; <
,
< =
CountryCodeName
> M
=
N O
$str
P V
,
V W
IsActive
X `
=
a b
true
c g
}
h i
,
i j
new
 
CountryCode
 (
{
) *
CountryCodeId
+ 8
=
9 :
$num
; <
,
< =
CountryCodeName
> M
=
N O
$str
P V
,
V W
IsActive
X `
=
a b
true
c g
}
h i
,
i j
new
 
CountryCode
 (
{
) *
CountryCodeId
+ 8
=
9 :
$num
; <
,
< =
CountryCodeName
> M
=
N O
$str
P U
,
U V
IsActive
W _
=
` a
true
b f
}
g h
,
h i
new
 
CountryCode
 (
{
) *
CountryCodeId
+ 8
=
9 :
$num
; =
,
= >
CountryCodeName
? N
=
O P
$str
Q V
,
V W
IsActive
X `
=
a b
true
c g
}
h i
)
 
;
 
modelBuilder
 
.
 
Entity
 
<
  
User
  $
>
$ %
(
% &
)
& '
.
 
HasData
 
(
 
new
 
User
 
{
 
UserId
 !
=
" #
$num
$ %
,
% &
Name
' +
=
, -
$str
. :
,
: ;
Email
< A
=
B C
$str
D Y
,
Y Z
UserName
[ c
=
d e
$str
f q
,
q r
Password
s {
=
| }
$str~ 
, 
CountryCodeId 
= 
$num 
, 
MobileNumber  ¬
=­ ®
$str¯ »
,» ¼
DesignationId½ Ê
=Ë Ì
$numÍ Î
,Î Ï'
ReportingPersonUsernameÐ ç
=è é
$strê ò
,ò ó
OrganisationIdô 
= 
$num 
, 
GenderId 
= 
$num 
, 
IsActive 
=  
true¡ ¥
}¦ §
,§ ¨
new
 
User
 
{
 
UserId
 !
=
" #
$num
$ %
,
% &
Name
' +
=
, -
$str
. 5
,
5 6
Email
7 <
=
= >
$str
? R
,
R S
UserName
T \
=
] ^
$str
_ i
,
i j
Password
k s
=
t u
$strv 
, 
CountryCodeId 
= 
$num 
, 
MobileNumber ¥
=¦ §
$str¨ ´
,´ µ
DesignationId¶ Ã
=Ä Å
$numÆ Ç
,Ç È'
ReportingPersonUsernameÉ à
=á â
$strã î
,î ï
OrganisationIdð þ
=ÿ 
$num 
, 
GenderId 
= 
$num 
, 
IsActive 
= 
true ¡
}¢ £
,£ ¤
new
 
User
 
{
 
UserId
 !
=
" #
$num
$ %
,
% &
Name
' +
=
, -
$str
. 6
,
6 7
Email
8 =
=
> ?
$str
@ S
,
S T
UserName
U ]
=
^ _
$str
` k
,
k l
Password
m u
=
v w
$strx 
, 
CountryCodeId 
= 
$num 
, 
MobileNumber ¦
=§ ¨
$str© µ
,µ ¶
DesignationId· Ä
=Å Æ
$numÇ È
,È É'
ReportingPersonUsernameÊ á
=â ã
$strä ï
,ï ð
OrganisationIdñ ÿ
= 
$num 
, 
GenderId 
= 
$num 
, 
IsActive 
= 
true ¢
}£ ¤
,¤ ¥
new
 
User
 
{
 
UserId
 !
=
" #
$num
$ %
,
% &
Name
' +
=
, -
$str
. 7
,
7 8
Email
9 >
=
? @
$str
A V
,
V W
UserName
X `
=
a b
$str
c o
,
o p
Password
q y
=
z {
$str| 
, 
CountryCodeId 
= 
$num 
, 
MobileNumber «
=¬ ­
$str® º
,º »
DesignationId¼ É
=Ê Ë
$numÌ Í
,Í Î'
ReportingPersonUsernameÏ æ
=ç è
$stré ñ
,ñ ò
OrganisationIdó 
= 
$num 
, 
GenderId 
= 
$num 
, 
IsActive 
= 
true  ¤
}¥ ¦
,¦ §
new
 
User
 
{
 
UserId
 !
=
" #
$num
$ %
,
% &
Name
' +
=
, -
$str
. 7
,
7 8
Email
9 >
=
? @
$str
A U
,
U V
UserName
W _
=
` a
$str
b n
,
n o
Password
p x
=
y z
$str{ 
, 
CountryCodeId 
= 
$num 
, 
MobileNumber ª
=« ¬
$str­ ¹
,¹ º
DesignationId» È
=É Ê
$numË Ì
,Ì Í'
ReportingPersonUsernameÎ å
=æ ç
$strè ó
,ó ô
OrganisationIdõ 
= 
$num 
, 
GenderId 
= 
$num 
, 
IsActive 
=  ¡
true¢ ¦
}§ ¨
)
 
;
 
modelBuilder
 
.
 
Entity
 
<
  
Profile
  '
>
' (
(
( )
)
) *
.
 
HasData
 
(
  
new
 
Profile
 #
{
$ %
	ProfileId
& /
=
0 1
$num
2 3
,
3 4
ProfileStatusId
5 D
=
E F
$num
G H
,
H I
UserId
J P
=
Q R
$num
S T
,
T U
IsActive
V ^
=
_ `
true
a e
}
f g
,
g h
new
 
Profile
 #
{
$ %
	ProfileId
& /
=
0 1
$num
2 3
,
3 4
ProfileStatusId
5 D
=
E F
$num
G H
,
H I
UserId
J P
=
Q R
$num
S T
,
T U
IsActive
V ^
=
_ `
true
a e
}
f g
,
g h
new
 
Profile
 #
{
$ %
	ProfileId
& /
=
0 1
$num
2 3
,
3 4
ProfileStatusId
5 D
=
E F
$num
G H
,
H I
UserId
J P
=
Q R
$num
S T
,
T U
IsActive
V ^
=
_ `
true
a e
}
f g
,
g h
new
 
Profile
 #
{
$ %
	ProfileId
& /
=
0 1
$num
2 3
,
3 4
ProfileStatusId
5 D
=
E F
$num
G H
,
H I
UserId
J P
=
Q R
$num
S T
,
T U
IsActive
V ^
=
_ `
true
a e
}
f g
,
g h
new
 
Profile
 #
{
$ %
	ProfileId
& /
=
0 1
$num
2 3
,
3 4
ProfileStatusId
5 D
=
E F
$num
G H
,
H I
UserId
J P
=
Q R
$num
S T
,
T U
IsActive
V ^
=
_ `
true
a e
}
f g
)
 
;
 
modelBuilder
 
.
 
Entity
 
<
  
	Education
  )
>
) *
(
* +
)
+ ,
.
 
HasData
 
(
  
new
 
	Education
 %
{
& '
EducationId
( 3
=
4 5
$num
6 7
,
7 8
	ProfileId
9 B
=
C D
$num
E F
,
F G
Degree
H N
=
O P
$str
Q U
,
U V
Course
W ]
=
^ _
$str
` e
,
e f
	CollegeId
g p
=
q r
$num
s t
,
t u
Starting
v ~
= 
$num 
, 
Ending 
= 
$num 
, 

Percentage  
=¡ ¢
$num£ ¨
,¨ ©
IsActiveª ²
=³ ´
trueµ ¹
}º »
,» ¼
new
 
	Education
 %
{
& '
EducationId
( 3
=
4 5
$num
6 7
,
7 8
	ProfileId
9 B
=
C D
$num
E F
,
F G
Degree
H N
=
O P
$str
Q X
,
X Y
Course
Z `
=
a b
$str
c g
,
g h
	CollegeId
i r
=
s t
$num
u v
,
v w
Startingx 
= 
$num 
, 
Ending 
= 
$num 
, 

Percentage ¢
=£ ¤
$num¥ ª
,ª «
IsActive¬ ´
=µ ¶
true· »
}¼ ½
,½ ¾
new
 
	Education
 %
{
& '
EducationId
( 3
=
4 5
$num
6 7
,
7 8
	ProfileId
9 B
=
C D
$num
E F
,
F G
Degree
H N
=
O P
$str
Q V
,
V W
Course
X ^
=
_ `
$str
a f
,
f g
	CollegeId
h q
=
r s
$num
t u
,
u v
Starting
w 
= 
$num 
, 
Ending 
= 
$num 
, 

Percentage ¡
=¢ £
$num¤ ©
,© ª
IsActive« ³
=´ µ
true¶ º
}» ¼
,¼ ½
new
 
	Education
 %
{
& '
EducationId
( 3
=
4 5
$num
6 7
,
7 8
	ProfileId
9 B
=
C D
$num
E F
,
F G
Degree
H N
=
O P
$str
Q U
,
U V
Course
W ]
=
^ _
$str
` e
,
e f
	CollegeId
g p
=
q r
$num
s u
,
u v
Starting
w 
= 
$num 
, 
Ending 
= 
$num 
, 

Percentage ¡
=¢ £
$num¤ ©
,© ª
IsActive« ³
=´ µ
true¶ º
}» ¼
,¼ ½
new
 
	Education
 %
{
& '
EducationId
( 3
=
4 5
$num
6 7
,
7 8
	ProfileId
9 B
=
C D
$num
E F
,
F G
Degree
H N
=
O P
$str
Q X
,
X Y
Course
Z `
=
a b
$str
c g
,
g h
	CollegeId
i r
=
s t
$num
u v
,
v w
Startingx 
= 
$num 
, 
Ending 
= 
$num 
, 

Percentage ¢
=£ ¤
$num¥ ª
,ª «
IsActive¬ ´
=µ ¶
true· »
}¼ ½
)
 
;
 
modelBuilder
   
.
   
Entity
   
<
    
ProfileHistory
    .
>
  . /
(
  / 0
)
  0 1
.
¡¡ 
HasData
¡¡ 
(
¡¡  
new
¢¢ 
ProfileHistory
¢¢ *
{
¢¢+ ,
ProfileHistoryId
¢¢- =
=
¢¢> ?
$num
¢¢@ A
,
¢¢A B
	ProfileId
¢¢C L
=
¢¢M N
$num
¢¢O P
,
¢¢P Q
ApprovedDate
¢¢R ^
=
¢¢_ `
new
¢¢a d
System
¢¢e k
.
¢¢k l
DateTime
¢¢l t
(
¢¢t u
$num
¢¢u y
,
¢¢y z
$num
¢¢{ }
,
¢¢} ~
$num¢¢ 
)¢¢ 
,¢¢ 
IsActive¢¢ 
=¢¢ 
true¢¢ 
}¢¢ 
,¢¢ 
new
££ 
ProfileHistory
££ *
{
££+ ,
ProfileHistoryId
££- =
=
££> ?
$num
££@ A
,
££A B
	ProfileId
££C L
=
££M N
$num
££O P
,
££P Q
ApprovedDate
££R ^
=
££_ `
new
££a d
System
££e k
.
££k l
DateTime
££l t
(
££t u
$num
££u y
,
££y z
$num
££{ }
,
££} ~
$num££ 
)££ 
,££ 
IsActive££ 
=££ 
true££ 
}££ 
,££ 
new
¤¤ 
ProfileHistory
¤¤ *
{
¤¤+ ,
ProfileHistoryId
¤¤- =
=
¤¤> ?
$num
¤¤@ A
,
¤¤A B
	ProfileId
¤¤C L
=
¤¤M N
$num
¤¤O P
,
¤¤P Q
ApprovedDate
¤¤R ^
=
¤¤_ `
new
¤¤a d
System
¤¤e k
.
¤¤k l
DateTime
¤¤l t
(
¤¤t u
$num
¤¤u y
,
¤¤y z
$num
¤¤{ }
,
¤¤} ~
$num¤¤ 
)¤¤ 
,¤¤ 
IsActive¤¤ 
=¤¤ 
true¤¤ 
}¤¤ 
,¤¤ 
new
¥¥ 
ProfileHistory
¥¥ *
{
¥¥+ ,
ProfileHistoryId
¥¥- =
=
¥¥> ?
$num
¥¥@ A
,
¥¥A B
	ProfileId
¥¥C L
=
¥¥M N
$num
¥¥O P
,
¥¥P Q
ApprovedDate
¥¥R ^
=
¥¥_ `
new
¥¥a d
System
¥¥e k
.
¥¥k l
DateTime
¥¥l t
(
¥¥t u
$num
¥¥u y
,
¥¥y z
$num
¥¥{ }
,
¥¥} ~
$num¥¥ 
)¥¥ 
,¥¥ 
IsActive¥¥ 
=¥¥ 
true¥¥ 
}¥¥ 
)
¦¦ 
;
¦¦ 
modelBuilder
§§ 
.
§§ 
Entity
§§ 
<
§§  
Skills
§§  &
>
§§& '
(
§§' (
)
§§( )
.
¨¨ 
HasData
¨¨  
(
¨¨  !
new
©© 
Skills
©© #
{
©©$ %
SkillId
©©& -
=
©©. /
$num
©©0 1
,
©©1 2
	ProfileId
©©3 <
=
©©= >
$num
©©? @
,
©©@ A
TechnologyId
©©B N
=
©©O P
$num
©©Q R
,
©©R S
DomainId
©©T \
=
©©] ^
$num
©©_ `
,
©©` a
IsActive
©©b j
=
©©k l
true
©©m q
}
©©r s
,
©©s t
new
ªª 
Skills
ªª #
{
ªª$ %
SkillId
ªª& -
=
ªª. /
$num
ªª0 1
,
ªª1 2
	ProfileId
ªª3 <
=
ªª= >
$num
ªª? @
,
ªª@ A
TechnologyId
ªªB N
=
ªªO P
$num
ªªQ R
,
ªªR S
DomainId
ªªT \
=
ªª] ^
$num
ªª_ `
,
ªª` a
IsActive
ªªb j
=
ªªk l
true
ªªm q
}
ªªr s
,
ªªs t
new
«« 
Skills
«« #
{
««$ %
SkillId
««& -
=
««. /
$num
««0 1
,
««1 2
	ProfileId
««3 <
=
««= >
$num
««? @
,
««@ A
TechnologyId
««B N
=
««O P
$num
««Q R
,
««R S
DomainId
««T \
=
««] ^
$num
««_ `
,
««` a
IsActive
««b j
=
««k l
true
««m q
}
««r s
,
««s t
new
¬¬ 
Skills
¬¬ #
{
¬¬$ %
SkillId
¬¬& -
=
¬¬. /
$num
¬¬0 1
,
¬¬1 2
	ProfileId
¬¬3 <
=
¬¬= >
$num
¬¬? @
,
¬¬@ A
TechnologyId
¬¬B N
=
¬¬O P
$num
¬¬Q R
,
¬¬R S
DomainId
¬¬T \
=
¬¬] ^
$num
¬¬_ `
,
¬¬` a
IsActive
¬¬b j
=
¬¬k l
true
¬¬m q
}
¬¬r s
,
¬¬s t
new
­­ 
Skills
­­ #
{
­­$ %
SkillId
­­& -
=
­­. /
$num
­­0 1
,
­­1 2
	ProfileId
­­3 <
=
­­= >
$num
­­? @
,
­­@ A
TechnologyId
­­B N
=
­­O P
$num
­­Q R
,
­­R S
DomainId
­­T \
=
­­] ^
$num
­­_ `
,
­­` a
IsActive
­­b j
=
­­k l
true
­­m q
}
­­r s
)
®® 
;
®® 
modelBuilder
¯¯ 
.
¯¯ 
Entity
¯¯ 
<
¯¯  
Projects
¯¯  (
>
¯¯( )
(
¯¯) *
)
¯¯* +
.
°° 
HasData
°°  
(
°°  !
new
±± 
Projects
±± %
{
±±& '
	ProjectId
±±( 1
=
±±2 3
$num
±±4 5
,
±±5 6
	ProfileId
±±7 @
=
±±A B
$num
±±C D
,
±±D E
ProjectName
±±F Q
=
±±R S
$str
±±T Y
,
±±Y Z 
ProjectDescription
±±[ m
=
±±n o
$str±±p 
,±± 
StartingMonth±± 
=±± 
$str±± 
,±± 
StartingYear±± «
=±±¬ ­
$num±±® ²
,±±² ³
EndingMonth±±´ ¿
=±±À Á
$str±±Â Ë
,±±Ë Ì

EndingYear±±Í ×
=±±Ø Ù
$num±±Ú Þ
,±±Þ ß
Designation±±à ë
=±±ì í
$str±±î ò
,±±ò ó
	ToolsUsed±±ô ý
=±±þ ÿ
$str±± 
,±± 
IsActive±± 
=±± 
true±± 
}±± 
,±± 
new
²² 
Projects
²² %
{
²²& '
	ProjectId
²²( 1
=
²²2 3
$num
²²4 5
,
²²5 6
	ProfileId
²²7 @
=
²²A B
$num
²²C D
,
²²D E
ProjectName
²²F Q
=
²²R S
$str
²²T Y
,
²²Y Z 
ProjectDescription
²²[ m
=
²²n o
$str²²p 
,²² 
StartingMonth²² 
=²² 
$str²² 
,²² 
StartingYear²²  ¬
=²²­ ®
$num²²¯ ³
,²²³ ´
EndingMonth²²µ À
=²²Á Â
$str²²Ã É
,²²É Ê

EndingYear²²Ë Õ
=²²Ö ×
$num²²Ø Ü
,²²Ü Ý
Designation²²Þ é
=²²ê ë
$str²²ì ñ
,²²ñ ò
	ToolsUsed²²ó ü
=²²ý þ
$str²²ÿ 
,²² 
IsActive²² 
=²² 
true²² 
}²² 
,²² 
new
³³ 
Projects
³³ %
{
³³& '
	ProjectId
³³( 1
=
³³2 3
$num
³³4 5
,
³³5 6
	ProfileId
³³7 @
=
³³A B
$num
³³C D
,
³³D E
ProjectName
³³F Q
=
³³R S
$str
³³T Y
,
³³Y Z 
ProjectDescription
³³[ m
=
³³n o
$str³³p 
,³³ 
StartingMonth³³ 
=³³ 
$str³³ 
,³³ 
StartingYear³³  ¬
=³³­ ®
$num³³¯ ³
,³³³ ´
EndingMonth³³µ À
=³³Á Â
$str³³Ã É
,³³É Ê

EndingYear³³Ë Õ
=³³Ö ×
$num³³Ø Ü
,³³Ü Ý
Designation³³Þ é
=³³ê ë
$str³³ì ð
,³³ð ñ
	ToolsUsed³³ò û
=³³ü ý
$str³³þ 
,³³ 
IsActive³³ 
=³³ 
true³³ 
}³³ 
,³³ 
new
´´ 
Projects
´´ %
{
´´& '
	ProjectId
´´( 1
=
´´2 3
$num
´´4 5
,
´´5 6
	ProfileId
´´7 @
=
´´A B
$num
´´C D
,
´´D E
ProjectName
´´F Q
=
´´R S
$str
´´T Y
,
´´Y Z 
ProjectDescription
´´[ m
=
´´n o
$str´´p 
,´´ 
StartingMonth´´ 
=´´ 
$str´´  
,´´  ¡
StartingYear´´¢ ®
=´´¯ °
$num´´± µ
,´´µ ¶
EndingMonth´´· Â
=´´Ã Ä
$str´´Å Ï
,´´Ï Ð

EndingYear´´Ñ Û
=´´Ü Ý
$num´´Þ â
,´´â ã
Designation´´ä ï
=´´ð ñ
$str´´ò ö
,´´ö ÷
	ToolsUsed´´ø 
=´´ 
$str´´ 
,´´ 
IsActive´´ 
=´´ 
true´´ 
}´´ 
,´´ 
new
µµ 
Projects
µµ %
{
µµ& '
	ProjectId
µµ( 1
=
µµ2 3
$num
µµ4 5
,
µµ5 6
	ProfileId
µµ7 @
=
µµA B
$num
µµC D
,
µµD E
ProjectName
µµF Q
=
µµR S
$str
µµT Y
,
µµY Z 
ProjectDescription
µµ[ m
=
µµn o
$strµµp 
,µµ 
StartingMonthµµ 
=µµ 
$strµµ 
,µµ 
StartingYearµµ  ¬
=µµ­ ®
$numµµ¯ ³
,µµ³ ´
EndingMonthµµµ À
=µµÁ Â
$strµµÃ Î
,µµÎ Ï

EndingYearµµÐ Ú
=µµÛ Ü
$numµµÝ á
,µµá â
Designationµµã î
=µµï ð
$strµµñ õ
,µµõ ö
	ToolsUsedµµ÷ 
=µµ 
$strµµ 
,µµ 
IsActiveµµ 
=µµ 
trueµµ 
}µµ 
)
¶¶ 
;
¶¶ 
modelBuilder
¸¸ 
.
¸¸ 
Entity
¸¸ 
<
¸¸  
PersonalDetails
¸¸  /
>
¸¸/ 0
(
¸¸0 1
)
¸¸1 2
.
¹¹ 
HasData
¹¹ 
(
¹¹  
new
ºº 
PersonalDetails
ºº +
{
ºº, -
PersonalDetailsId
ºº. ?
=
ºº@ A
$num
ººB C
,
ººC D
	ProfileId
ººE N
=
ººO P
$num
ººQ R
,
ººR S
	Objective
ººT ]
=
ºº^ _
$str
ºº` p
,
ººp q
DateOfBirth
ººr }
=
ºº~ 
newºº 
Systemºº 
.ºº 
DateTimeºº 
(ºº 
$numºº 
,ºº 
$numºº 
,ºº 
$numºº  
)ºº  ¡
,ºº¡ ¢
Nationalityºº£ ®
=ºº¯ °
$strºº± ¹
,ºº¹ º
DateOfJoiningºº» È
=ººÉ Ê
newººË Î
SystemººÏ Õ
.ººÕ Ö
DateTimeººÖ Þ
(ººÞ ß
$numººß ã
,ººã ä
$numººå ç
,ººç è
$numººé ë
)ººë ì
,ººì í
base64headerººî ú
=ººû ü
$strººý 
,ºº 
UserIdºº 
=ºº 
$numºº 
,ºº 
IsActiveºº 
=ºº 
trueºº 
}ºº  ¡
,ºº¡ ¢
new
»» 
PersonalDetails
»» +
{
»», -
PersonalDetailsId
»». ?
=
»»@ A
$num
»»B C
,
»»C D
	ProfileId
»»E N
=
»»O P
$num
»»Q R
,
»»R S
	Objective
»»T ]
=
»»^ _
$str
»»` p
,
»»p q
DateOfBirth
»»r }
=
»»~ 
new»» 
System»» 
.»» 
DateTime»» 
(»» 
$num»» 
,»» 
$num»» 
,»» 
$num»»  
)»»  ¡
,»»¡ ¢
Nationality»»£ ®
=»»¯ °
$str»»± ¹
,»»¹ º
DateOfJoining»»» È
=»»É Ê
new»»Ë Î
System»»Ï Õ
.»»Õ Ö
DateTime»»Ö Þ
(»»Þ ß
$num»»ß ã
,»»ã ä
$num»»å ç
,»»ç è
$num»»é ë
)»»ë ì
,»»ì í
base64header»»î ú
=»»û ü
$str»»ý 
,»» 
UserId»» 
=»» 
$num»» 
,»» 
IsActive»» 
=»» 
true»» 
}»»  ¡
,»»¡ ¢
new
¼¼ 
PersonalDetails
¼¼ +
{
¼¼, -
PersonalDetailsId
¼¼. ?
=
¼¼@ A
$num
¼¼B C
,
¼¼C D
	ProfileId
¼¼E N
=
¼¼O P
$num
¼¼Q R
,
¼¼R S
	Objective
¼¼T ]
=
¼¼^ _
$str
¼¼` p
,
¼¼p q
DateOfBirth
¼¼r }
=
¼¼~ 
new¼¼ 
System¼¼ 
.¼¼ 
DateTime¼¼ 
(¼¼ 
$num¼¼ 
,¼¼ 
$num¼¼ 
,¼¼ 
$num¼¼  
)¼¼  ¡
,¼¼¡ ¢
Nationality¼¼£ ®
=¼¼¯ °
$str¼¼± ¹
,¼¼¹ º
DateOfJoining¼¼» È
=¼¼É Ê
new¼¼Ë Î
System¼¼Ï Õ
.¼¼Õ Ö
DateTime¼¼Ö Þ
(¼¼Þ ß
$num¼¼ß ã
,¼¼ã ä
$num¼¼å ç
,¼¼ç è
$num¼¼é ë
)¼¼ë ì
,¼¼ì í
base64header¼¼î ú
=¼¼û ü
$str¼¼ý 
,¼¼ 
UserId¼¼ 
=¼¼ 
$num¼¼ 
,¼¼ 
IsActive¼¼ 
=¼¼ 
true¼¼ 
}¼¼  ¡
,¼¼¡ ¢
new
½½ 
PersonalDetails
½½ +
{
½½, -
PersonalDetailsId
½½. ?
=
½½@ A
$num
½½B C
,
½½C D
	ProfileId
½½E N
=
½½O P
$num
½½Q R
,
½½R S
	Objective
½½T ]
=
½½^ _
$str
½½` p
,
½½p q
DateOfBirth
½½r }
=
½½~ 
new½½ 
System½½ 
.½½ 
DateTime½½ 
(½½ 
$num½½ 
,½½ 
$num½½ 
,½½ 
$num½½  
)½½  ¡
,½½¡ ¢
Nationality½½£ ®
=½½¯ °
$str½½± ¹
,½½¹ º
DateOfJoining½½» È
=½½É Ê
new½½Ë Î
System½½Ï Õ
.½½Õ Ö
DateTime½½Ö Þ
(½½Þ ß
$num½½ß ã
,½½ã ä
$num½½å ç
,½½ç è
$num½½é ë
)½½ë ì
,½½ì í
base64header½½î ú
=½½û ü
$str½½ý 
,½½ 
UserId½½ 
=½½ 
$num½½ 
,½½ 
IsActive½½ 
=½½ 
true½½ 
}½½  ¡
,½½¡ ¢
new
¾¾ 
PersonalDetails
¾¾ +
{
¾¾, -
PersonalDetailsId
¾¾. ?
=
¾¾@ A
$num
¾¾B C
,
¾¾C D
	ProfileId
¾¾E N
=
¾¾O P
$num
¾¾Q R
,
¾¾R S
	Objective
¾¾T ]
=
¾¾^ _
$str
¾¾` p
,
¾¾p q
DateOfBirth
¾¾r }
=
¾¾~ 
new¾¾ 
System¾¾ 
.¾¾ 
DateTime¾¾ 
(¾¾ 
$num¾¾ 
,¾¾ 
$num¾¾ 
,¾¾ 
$num¾¾  
)¾¾  ¡
,¾¾¡ ¢
Nationality¾¾£ ®
=¾¾¯ °
$str¾¾± ¹
,¾¾¹ º
DateOfJoining¾¾» È
=¾¾É Ê
new¾¾Ë Î
System¾¾Ï Õ
.¾¾Õ Ö
DateTime¾¾Ö Þ
(¾¾Þ ß
$num¾¾ß ã
,¾¾ã ä
$num¾¾å ç
,¾¾ç è
$num¾¾é ë
)¾¾ë ì
,¾¾ì í
base64header¾¾î ú
=¾¾û ü
$str¾¾ý 
,¾¾ 
UserId¾¾ 
=¾¾ 
$num¾¾ 
,¾¾ 
IsActive¾¾ 
=¾¾ 
true¾¾ 
}¾¾  ¡
)
¿¿ 
;
¿¿ 
modelBuilder
ÀÀ 
.
ÀÀ 
Entity
ÀÀ 
<
ÀÀ  
BreakDuration
ÀÀ  -
>
ÀÀ- .
(
ÀÀ. /
)
ÀÀ/ 0
.
ÁÁ 
HasData
ÁÁ  
(
ÁÁ  !
new
ÂÂ 
BreakDuration
ÂÂ *
{
ÂÂ+ ,
BreakDuration_Id
ÂÂ- =
=
ÂÂ> ?
$num
ÂÂ@ A
,
ÂÂA B
StartingDuration
ÂÂC S
=
ÂÂT U
new
ÂÂV Y
DateTime
ÂÂZ b
(
ÂÂb c
$num
ÂÂc g
,
ÂÂg h
$num
ÂÂi k
,
ÂÂk l
$num
ÂÂm o
)
ÂÂo p
,
ÂÂp q
EndingDurationÂÂr 
=ÂÂ 
newÂÂ 
DateTimeÂÂ 
(ÂÂ 
$numÂÂ 
,ÂÂ 
$numÂÂ 
,ÂÂ 
$numÂÂ 
)ÂÂ 
,ÂÂ !
PersonalDetailsIdÂÂ °
=ÂÂ± ²
$numÂÂ³ ´
,ÂÂ´ µ
IsActiveÂÂ¶ ¾
=ÂÂ¿ À
trueÂÂÁ Å
}ÂÂÆ Ç
,ÂÂÇ È
new
ÃÃ 
BreakDuration
ÃÃ *
{
ÃÃ+ ,
BreakDuration_Id
ÃÃ- =
=
ÃÃ> ?
$num
ÃÃ@ A
,
ÃÃA B
StartingDuration
ÃÃC S
=
ÃÃT U
new
ÃÃV Y
DateTime
ÃÃZ b
(
ÃÃb c
$num
ÃÃc g
,
ÃÃg h
$num
ÃÃi k
,
ÃÃk l
$num
ÃÃm o
)
ÃÃo p
,
ÃÃp q
EndingDurationÃÃr 
=ÃÃ 
newÃÃ 
DateTimeÃÃ 
(ÃÃ 
$numÃÃ 
,ÃÃ 
$numÃÃ 
,ÃÃ 
$numÃÃ 
)ÃÃ 
,ÃÃ !
PersonalDetailsIdÃÃ °
=ÃÃ± ²
$numÃÃ³ ´
,ÃÃ´ µ
IsActiveÃÃ¶ ¾
=ÃÃ¿ À
trueÃÃÁ Å
}ÃÃÆ Ç
,ÃÃÇ È
new
ÄÄ 
BreakDuration
ÄÄ *
{
ÄÄ+ ,
BreakDuration_Id
ÄÄ- =
=
ÄÄ> ?
$num
ÄÄ@ A
,
ÄÄA B
StartingDuration
ÄÄC S
=
ÄÄT U
new
ÄÄV Y
DateTime
ÄÄZ b
(
ÄÄb c
$num
ÄÄc g
,
ÄÄg h
$num
ÄÄi k
,
ÄÄk l
$num
ÄÄm o
)
ÄÄo p
,
ÄÄp q
EndingDurationÄÄr 
=ÄÄ 
newÄÄ 
DateTimeÄÄ 
(ÄÄ 
$numÄÄ 
,ÄÄ 
$numÄÄ 
,ÄÄ 
$numÄÄ 
)ÄÄ 
,ÄÄ !
PersonalDetailsIdÄÄ °
=ÄÄ± ²
$numÄÄ³ ´
,ÄÄ´ µ
IsActiveÄÄ¶ ¾
=ÄÄ¿ À
trueÄÄÁ Å
}ÄÄÆ Ç
,ÄÄÇ È
new
ÅÅ 
BreakDuration
ÅÅ *
{
ÅÅ+ ,
BreakDuration_Id
ÅÅ- =
=
ÅÅ> ?
$num
ÅÅ@ A
,
ÅÅA B
StartingDuration
ÅÅC S
=
ÅÅT U
new
ÅÅV Y
DateTime
ÅÅZ b
(
ÅÅb c
$num
ÅÅc g
,
ÅÅg h
$num
ÅÅi k
,
ÅÅk l
$num
ÅÅm o
)
ÅÅo p
,
ÅÅp q
EndingDurationÅÅr 
=ÅÅ 
newÅÅ 
DateTimeÅÅ 
(ÅÅ 
$numÅÅ 
,ÅÅ 
$numÅÅ 
,ÅÅ 
$numÅÅ 
)ÅÅ 
,ÅÅ !
PersonalDetailsIdÅÅ °
=ÅÅ± ²
$numÅÅ³ ´
,ÅÅ´ µ
IsActiveÅÅ¶ ¾
=ÅÅ¿ À
trueÅÅÁ Å
}ÅÅÆ Ç
,ÅÅÇ È
new
ÆÆ 
BreakDuration
ÆÆ *
{
ÆÆ+ ,
BreakDuration_Id
ÆÆ- =
=
ÆÆ> ?
$num
ÆÆ@ A
,
ÆÆA B
StartingDuration
ÆÆC S
=
ÆÆT U
new
ÆÆV Y
DateTime
ÆÆZ b
(
ÆÆb c
$num
ÆÆc g
,
ÆÆg h
$num
ÆÆi k
,
ÆÆk l
$num
ÆÆm o
)
ÆÆo p
,
ÆÆp q
EndingDurationÆÆr 
=ÆÆ 
newÆÆ 
DateTimeÆÆ 
(ÆÆ 
$numÆÆ 
,ÆÆ 
$numÆÆ 
,ÆÆ 
$numÆÆ 
)ÆÆ 
,ÆÆ !
PersonalDetailsIdÆÆ °
=ÆÆ± ²
$numÆÆ³ ´
,ÆÆ´ µ
IsActiveÆÆ¶ ¾
=ÆÆ¿ À
trueÆÆÁ Å
}ÆÆÆ Ç
,ÆÆÇ È
new
ÇÇ 
BreakDuration
ÇÇ *
{
ÇÇ+ ,
BreakDuration_Id
ÇÇ- =
=
ÇÇ> ?
$num
ÇÇ@ A
,
ÇÇA B
StartingDuration
ÇÇC S
=
ÇÇT U
new
ÇÇV Y
DateTime
ÇÇZ b
(
ÇÇb c
$num
ÇÇc g
,
ÇÇg h
$num
ÇÇi k
,
ÇÇk l
$num
ÇÇm o
)
ÇÇo p
,
ÇÇp q
EndingDurationÇÇr 
=ÇÇ 
newÇÇ 
DateTimeÇÇ 
(ÇÇ 
$numÇÇ 
,ÇÇ 
$numÇÇ 
,ÇÇ 
$numÇÇ 
)ÇÇ 
,ÇÇ !
PersonalDetailsIdÇÇ °
=ÇÇ± ²
$numÇÇ³ ´
,ÇÇ´ µ
IsActiveÇÇ¶ ¾
=ÇÇ¿ À
trueÇÇÁ Å
}ÇÇÆ Ç
)
ÈÈ 
;
ÈÈ 
modelBuilder
ÉÉ 
.
ÉÉ 
Entity
ÉÉ 
<
ÉÉ  
Language
ÉÉ  (
>
ÉÉ( )
(
ÉÉ) *
)
ÉÉ* +
.
ÊÊ 
HasData
ÊÊ 
(
ÊÊ 
new
ËË 
Language
ËË #
{
ËË$ %

LanguageId
ËË& 0
=
ËË1 2
$num
ËË3 4
,
ËË4 5
LanguageName
ËË6 B
=
ËËC D
$str
ËËE N
,
ËËN O
Read
ËËP T
=
ËËU V
true
ËËW [
,
ËË[ \
Write
ËË] b
=
ËËc d
true
ËËe i
,
ËËi j
Speak
ËËk p
=
ËËq r
true
ËËs w
,
ËËw x 
PersonalDetailsIdËËy 
=ËË 
$numËË 
,ËË 
	CreatedOnËË 
=ËË 
SystemËË ¢
.ËË¢ £
DateTimeËË£ «
.ËË« ¬
NowËË¬ ¯
,ËË¯ °
IsActiveËË± ¹
=ËËº »
trueËË¼ À
}ËËÁ Â
,ËËÂ Ã
new
ÌÌ 
Language
ÌÌ #
{
ÌÌ$ %

LanguageId
ÌÌ& 0
=
ÌÌ1 2
$num
ÌÌ3 4
,
ÌÌ4 5
LanguageName
ÌÌ6 B
=
ÌÌC D
$str
ÌÌE L
,
ÌÌL M
Read
ÌÌN R
=
ÌÌS T
true
ÌÌU Y
,
ÌÌY Z
Write
ÌÌ[ `
=
ÌÌa b
true
ÌÌc g
,
ÌÌg h
Speak
ÌÌi n
=
ÌÌo p
true
ÌÌq u
,
ÌÌu v 
PersonalDetailsIdÌÌw 
=ÌÌ 
$numÌÌ 
,ÌÌ 
	CreatedOnÌÌ 
=ÌÌ 
SystemÌÌ  
.ÌÌ  ¡
DateTimeÌÌ¡ ©
.ÌÌ© ª
NowÌÌª ­
,ÌÌ­ ®
IsActiveÌÌ¯ ·
=ÌÌ¸ ¹
trueÌÌº ¾
}ÌÌ¿ À
,ÌÌÀ Á
new
ÍÍ 
Language
ÍÍ #
{
ÍÍ$ %

LanguageId
ÍÍ& 0
=
ÍÍ1 2
$num
ÍÍ3 4
,
ÍÍ4 5
LanguageName
ÍÍ6 B
=
ÍÍC D
$str
ÍÍE L
,
ÍÍL M
Read
ÍÍN R
=
ÍÍS T
true
ÍÍU Y
,
ÍÍY Z
Write
ÍÍ[ `
=
ÍÍa b
true
ÍÍc g
,
ÍÍg h
Speak
ÍÍi n
=
ÍÍo p
true
ÍÍq u
,
ÍÍu v 
PersonalDetailsIdÍÍw 
=ÍÍ 
$numÍÍ 
,ÍÍ 
	CreatedOnÍÍ 
=ÍÍ 
SystemÍÍ  
.ÍÍ  ¡
DateTimeÍÍ¡ ©
.ÍÍ© ª
NowÍÍª ­
,ÍÍ­ ®
IsActiveÍÍ¯ ·
=ÍÍ¸ ¹
trueÍÍº ¾
}ÍÍ¿ À
,ÍÍÀ Á
new
ÎÎ 
Language
ÎÎ #
{
ÎÎ$ %

LanguageId
ÎÎ& 0
=
ÎÎ1 2
$num
ÎÎ3 4
,
ÎÎ4 5
LanguageName
ÎÎ6 B
=
ÎÎC D
$str
ÎÎE M
,
ÎÎM N
Read
ÎÎO S
=
ÎÎT U
true
ÎÎV Z
,
ÎÎZ [
Write
ÎÎ\ a
=
ÎÎb c
true
ÎÎd h
,
ÎÎh i
Speak
ÎÎj o
=
ÎÎp q
true
ÎÎr v
,
ÎÎv w 
PersonalDetailsIdÎÎx 
=ÎÎ 
$numÎÎ 
,ÎÎ 
	CreatedOnÎÎ 
=ÎÎ 
SystemÎÎ ¡
.ÎÎ¡ ¢
DateTimeÎÎ¢ ª
.ÎÎª «
NowÎÎ« ®
,ÎÎ® ¯
IsActiveÎÎ° ¸
=ÎÎ¹ º
trueÎÎ» ¿
}ÎÎÀ Á
,ÎÎÁ Â
new
ÏÏ 
Language
ÏÏ #
{
ÏÏ$ %

LanguageId
ÏÏ& 0
=
ÏÏ1 2
$num
ÏÏ3 4
,
ÏÏ4 5
LanguageName
ÏÏ6 B
=
ÏÏC D
$str
ÏÏE P
,
ÏÏP Q
Read
ÏÏR V
=
ÏÏW X
true
ÏÏY ]
,
ÏÏ] ^
Write
ÏÏ_ d
=
ÏÏe f
true
ÏÏg k
,
ÏÏk l
Speak
ÏÏm r
=
ÏÏs t
true
ÏÏu y
,
ÏÏy z 
PersonalDetailsIdÏÏ{ 
=ÏÏ 
$numÏÏ 
,ÏÏ 
	CreatedOnÏÏ 
=ÏÏ 
SystemÏÏ ¤
.ÏÏ¤ ¥
DateTimeÏÏ¥ ­
.ÏÏ­ ®
NowÏÏ® ±
,ÏÏ± ²
IsActiveÏÏ³ »
=ÏÏ¼ ½
trueÏÏ¾ Â
}ÏÏÃ Ä
,ÏÏÄ Å
new
ÐÐ 
Language
ÐÐ #
{
ÐÐ$ %

LanguageId
ÐÐ& 0
=
ÐÐ1 2
$num
ÐÐ3 4
,
ÐÐ4 5
LanguageName
ÐÐ6 B
=
ÐÐC D
$str
ÐÐE N
,
ÐÐN O
Read
ÐÐP T
=
ÐÐU V
true
ÐÐW [
,
ÐÐ[ \
Write
ÐÐ] b
=
ÐÐc d
true
ÐÐe i
,
ÐÐi j
Speak
ÐÐk p
=
ÐÐq r
true
ÐÐs w
,
ÐÐw x 
PersonalDetailsIdÐÐy 
=ÐÐ 
$numÐÐ 
,ÐÐ 
	CreatedOnÐÐ 
=ÐÐ 
SystemÐÐ ¢
.ÐÐ¢ £
DateTimeÐÐ£ «
.ÐÐ« ¬
NowÐÐ¬ ¯
,ÐÐ¯ °
IsActiveÐÐ± ¹
=ÐÐº »
trueÐÐ¼ À
}ÐÐÁ Â
,ÐÐÂ Ã
new
ÑÑ 
Language
ÑÑ #
{
ÑÑ$ %

LanguageId
ÑÑ& 0
=
ÑÑ1 2
$num
ÑÑ3 4
,
ÑÑ4 5
LanguageName
ÑÑ6 B
=
ÑÑC D
$str
ÑÑE N
,
ÑÑN O
Read
ÑÑP T
=
ÑÑU V
true
ÑÑW [
,
ÑÑ[ \
Write
ÑÑ] b
=
ÑÑc d
true
ÑÑe i
,
ÑÑi j
Speak
ÑÑk p
=
ÑÑq r
true
ÑÑs w
,
ÑÑw x 
PersonalDetailsIdÑÑy 
=ÑÑ 
$numÑÑ 
,ÑÑ 
	CreatedOnÑÑ 
=ÑÑ 
SystemÑÑ ¢
.ÑÑ¢ £
DateTimeÑÑ£ «
.ÑÑ« ¬
NowÑÑ¬ ¯
,ÑÑ¯ °
IsActiveÑÑ± ¹
=ÑÑº »
trueÑÑ¼ À
}ÑÑÁ Â
,ÑÑÂ Ã
new
ÒÒ 
Language
ÒÒ #
{
ÒÒ$ %

LanguageId
ÒÒ& 0
=
ÒÒ1 2
$num
ÒÒ3 4
,
ÒÒ4 5
LanguageName
ÒÒ6 B
=
ÒÒC D
$str
ÒÒE N
,
ÒÒN O
Read
ÒÒP T
=
ÒÒU V
true
ÒÒW [
,
ÒÒ[ \
Write
ÒÒ] b
=
ÒÒc d
true
ÒÒe i
,
ÒÒi j
Speak
ÒÒk p
=
ÒÒq r
true
ÒÒs w
,
ÒÒw x 
PersonalDetailsIdÒÒy 
=ÒÒ 
$numÒÒ 
,ÒÒ 
	CreatedOnÒÒ 
=ÒÒ 
SystemÒÒ ¢
.ÒÒ¢ £
DateTimeÒÒ£ «
.ÒÒ« ¬
NowÒÒ¬ ¯
,ÒÒ¯ °
IsActiveÒÒ± ¹
=ÒÒº »
trueÒÒ¼ À
}ÒÒÁ Â
,ÒÒÂ Ã
new
ÓÓ 
Language
ÓÓ #
{
ÓÓ$ %

LanguageId
ÓÓ& 0
=
ÓÓ1 2
$num
ÓÓ3 4
,
ÓÓ4 5
LanguageName
ÓÓ6 B
=
ÓÓC D
$str
ÓÓE K
,
ÓÓK L
Read
ÓÓM Q
=
ÓÓR S
true
ÓÓT X
,
ÓÓX Y
Write
ÓÓZ _
=
ÓÓ` a
true
ÓÓb f
,
ÓÓf g
Speak
ÓÓh m
=
ÓÓn o
true
ÓÓp t
,
ÓÓt u 
PersonalDetailsIdÓÓv 
=ÓÓ 
$numÓÓ 
,ÓÓ 
	CreatedOnÓÓ 
=ÓÓ 
SystemÓÓ 
.ÓÓ  
DateTimeÓÓ  ¨
.ÓÓ¨ ©
NowÓÓ© ¬
,ÓÓ¬ ­
IsActiveÓÓ® ¶
=ÓÓ· ¸
trueÓÓ¹ ½
}ÓÓ¾ ¿
,ÓÓ¿ À
new
ÔÔ 
Language
ÔÔ #
{
ÔÔ$ %

LanguageId
ÔÔ& 0
=
ÔÔ1 2
$num
ÔÔ3 5
,
ÔÔ5 6
LanguageName
ÔÔ7 C
=
ÔÔD E
$str
ÔÔF N
,
ÔÔN O
Read
ÔÔP T
=
ÔÔU V
true
ÔÔW [
,
ÔÔ[ \
Write
ÔÔ] b
=
ÔÔc d
true
ÔÔe i
,
ÔÔi j
Speak
ÔÔk p
=
ÔÔq r
true
ÔÔs w
,
ÔÔw x 
PersonalDetailsIdÔÔy 
=ÔÔ 
$numÔÔ 
,ÔÔ 
	CreatedOnÔÔ 
=ÔÔ 
SystemÔÔ ¢
.ÔÔ¢ £
DateTimeÔÔ£ «
.ÔÔ« ¬
NowÔÔ¬ ¯
,ÔÔ¯ °
IsActiveÔÔ± ¹
=ÔÔº »
trueÔÔ¼ À
}ÔÔÁ Â
)
ÕÕ 
;
ÕÕ 
modelBuilder
ÙÙ 
.
ÙÙ 
Entity
ÙÙ 
<
ÙÙ  
SocialMedia
ÙÙ  +
>
ÙÙ+ ,
(
ÙÙ, -
)
ÙÙ- .
.
ÚÚ 
HasData
ÚÚ 
(
ÚÚ 
new
ÛÛ 
SocialMedia
ÛÛ )
{
ÛÛ* +
SocialMedia_Id
ÛÛ, :
=
ÛÛ; <
$num
ÛÛ= >
,
ÛÛ> ?
SocialMedia_Name
ÛÛ@ P
=
ÛÛQ R
$str
ÛÛS ]
,
ÛÛ] ^
SocialMedia_Link
ÛÛ_ o
=
ÛÛp q
$strÛÛr 
,ÛÛ !
PersonalDetailsIdÛÛ 
=ÛÛ 
$numÛÛ 
,ÛÛ 
IsActiveÛÛ ¥
=ÛÛ¦ §
trueÛÛ¨ ¬
}ÛÛ­ ®
,ÛÛ® ¯
new
ÜÜ 
SocialMedia
ÜÜ )
{
ÜÜ* +
SocialMedia_Id
ÜÜ, :
=
ÜÜ; <
$num
ÜÜ= >
,
ÜÜ> ?
SocialMedia_Name
ÜÜ@ P
=
ÜÜQ R
$str
ÜÜS ]
,
ÜÜ] ^
SocialMedia_Link
ÜÜ_ o
=
ÜÜp q
$strÜÜr 
,ÜÜ !
PersonalDetailsIdÜÜ 
=ÜÜ 
$numÜÜ 
,ÜÜ 
IsActiveÜÜ ¥
=ÜÜ¦ §
trueÜÜ¨ ¬
}ÜÜ­ ®
,ÜÜ® ¯
new
ÝÝ 
SocialMedia
ÝÝ )
{
ÝÝ* +
SocialMedia_Id
ÝÝ, :
=
ÝÝ; <
$num
ÝÝ= >
,
ÝÝ> ?
SocialMedia_Name
ÝÝ@ P
=
ÝÝQ R
$str
ÝÝS ]
,
ÝÝ] ^
SocialMedia_Link
ÝÝ_ o
=
ÝÝp q
$strÝÝr 
,ÝÝ !
PersonalDetailsIdÝÝ 
=ÝÝ 
$numÝÝ 
,ÝÝ 
IsActiveÝÝ ¥
=ÝÝ¦ §
trueÝÝ¨ ¬
}ÝÝ­ ®
,ÝÝ® ¯
new
ÞÞ 
SocialMedia
ÞÞ )
{
ÞÞ* +
SocialMedia_Id
ÞÞ, :
=
ÞÞ; <
$num
ÞÞ= >
,
ÞÞ> ?
SocialMedia_Name
ÞÞ@ P
=
ÞÞQ R
$str
ÞÞS \
,
ÞÞ\ ]
SocialMedia_Link
ÞÞ^ n
=
ÞÞo p
$strÞÞq 
,ÞÞ !
PersonalDetailsIdÞÞ 
=ÞÞ 
$numÞÞ 
,ÞÞ 
IsActiveÞÞ £
=ÞÞ¤ ¥
trueÞÞ¦ ª
}ÞÞ« ¬
,ÞÞ¬ ­
new
ßß 
SocialMedia
ßß )
{
ßß* +
SocialMedia_Id
ßß, :
=
ßß; <
$num
ßß= >
,
ßß> ?
SocialMedia_Name
ßß@ P
=
ßßQ R
$str
ßßS ^
,
ßß^ _
SocialMedia_Link
ßß` p
=
ßßq r
$strßßs 
,ßß !
PersonalDetailsIdßß 
=ßß 
$numßß 
,ßß 
IsActiveßß §
=ßß¨ ©
trueßßª ®
}ßß¯ °
)
àà 
;
àà 
modelBuilder
áá 
.
áá 
Entity
áá 
<
áá  
AchievementType
áá  /
>
áá/ 0
(
áá0 1
)
áá1 2
.
ââ 
HasData
ââ  
(
ââ  !
new
ãã 
AchievementType
ãã ,
{
ãã- .
AchievementTypeId
ãã/ @
=
ããA B
$num
ããC D
,
ããD E!
AchievementTypeName
ããF Y
=
ããZ [
$str
ãã\ d
,
ããd e
IsActive
ããf n
=
ãão p
true
ããq u
}
ããv w
,
ããw x
new
ää 
AchievementType
ää ,
{
ää- .
AchievementTypeId
ää/ @
=
ääA B
$num
ääC D
,
ääD E!
AchievementTypeName
ääF Y
=
ääZ [
$str
ää\ j
,
ääj k
IsActive
ääl t
=
ääu v
true
ääw {
}
ää| }
)
åå 
;
åå 
modelBuilder
ææ 
.
ææ 
Entity
ææ 
<
ææ  
Achievements
ææ  ,
>
ææ, -
(
ææ- .
)
ææ. /
.
çç 
HasData
çç  
(
çç  !
new
èè 
Achievements
èè )
{
èè* +
AchievementId
èè, 9
=
èè: ;
$num
èè< =
,
èè= >
	ProfileId
èè? H
=
èèI J
$num
èèK L
,
èèL M
AchievementTypeId
èèN _
=
èè` a
$num
èèb c
,
èèc d
base64header
èèe q
=
èèr s
$str
èèt y
,
èèy z
IsActiveèè{ 
=èè 
trueèè 
}èè 
,èè 
new
éé 
Achievements
éé )
{
éé* +
AchievementId
éé, 9
=
éé: ;
$num
éé< =
,
éé= >
	ProfileId
éé? H
=
ééI J
$num
ééK L
,
ééL M
AchievementTypeId
ééN _
=
éé` a
$num
ééb c
,
ééc d
base64header
éée q
=
éér s
$str
éét y
,
ééy z
IsActiveéé{ 
=éé 
trueéé 
}éé 
,éé 
new
êê 
Achievements
êê )
{
êê* +
AchievementId
êê, 9
=
êê: ;
$num
êê< =
,
êê= >
	ProfileId
êê? H
=
êêI J
$num
êêK L
,
êêL M
AchievementTypeId
êêN _
=
êê` a
$num
êêb c
,
êêc d
base64header
êêe q
=
êêr s
$str
êêt y
,
êêy z
IsActiveêê{ 
=êê 
trueêê 
}êê 
,êê 
new
ëë 
Achievements
ëë )
{
ëë* +
AchievementId
ëë, 9
=
ëë: ;
$num
ëë< =
,
ëë= >
	ProfileId
ëë? H
=
ëëI J
$num
ëëK L
,
ëëL M
AchievementTypeId
ëëN _
=
ëë` a
$num
ëëb c
,
ëëc d
base64header
ëëe q
=
ëër s
$str
ëët y
,
ëëy z
IsActiveëë{ 
=ëë 
trueëë 
}ëë 
,ëë 
new
ìì 
Achievements
ìì )
{
ìì* +
AchievementId
ìì, 9
=
ìì: ;
$num
ìì< =
,
ìì= >
	ProfileId
ìì? H
=
ììI J
$num
ììK L
,
ììL M
AchievementTypeId
ììN _
=
ìì` a
$num
ììb c
,
ììc d
base64header
ììe q
=
ììr s
$str
ììt y
,
ììy z
IsActiveìì{ 
=ìì 
trueìì 
}ìì 
)
íí 
;
íí 
}
ññ 	
}
óó 
}ôô 
uC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\DesignationDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class &
DesignationDataAccessLayer +
:+ ,'
IDesignationDataAccessLayer, G
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private		 
readonly		 
ILogger		 
<		  &
DesignationDataAccessLayer		  :
>		: ;
_logger		< C
=		D E
default		F M
!		M N
;		N O
public	 
List 
< 
Designation  
>  !
GetDesignations" 1
(1 2
)2 3
{ 	
try 
{ 
return 
_db 
. 
Designations '
!' (
.( )
Include) 0
(0 1
d1 2
=>2 4
d4 5
.5 6
users6 ;
); <
.< =
ToList= C
(C D
)D E
;E F
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw   
;   
}## 
}$$ 	
}(( 
})) 
pC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\DomainDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

class !
DomainDataAccessLayer &
:& '"
IDomainDataAccessLayer' =
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory% 9
.9 :
GetDbContextObject: L
(L M
)M N
;N O
private 
readonly 
ILogger 
<  !
DomainDataAccessLayer  5
>5 6
_logger7 >
=? @
defaultA H
!H I
;I J
public			 
List		 
<		 
Domain		 
>		 

GetDomains		 '
(		' (
)		( )
{

 	
try 
{ 
return 
_db 
. 
Domains "
!" #
.# $
ToList$ *
(* +
)+ ,
;, -
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}   
}!! 	
}%% 
}&& ñ
rC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\ICollegeDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

	interface #
ICollegeDataAccessLayer ,
{ 
public 
List 
< 
College 
> 
GetColleges (
(( )
)) *
;* +
} 
} 
vC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\IDesignationDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

	interface '
IDesignationDataAccessLayer 0
{ 
public 
List 
< 
Designation 
>  
GetDesignations! 0
(0 1
)1 2
;2 3
} 
} Á
qC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\IDomainDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface "
IDomainDataAccessLayer +
{ 
public 
List 
< 
Domain 
> 

GetDomains &
(& '
)' (
;( )
} 
} Ù
wC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\IOrganisationDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface (
IOrganisationDataAccessLayer 1
{ 
public 
List 
< 
Organisation  
>  !
GetOrganisations" 2
(2 3
)3 4
;4 5
} 
} Ý
xC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\IProfileStatusDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface )
IProfileStatusDataAccessLayer 2
{ 
public 
List 
< 
ProfileStatus !
>! "
GetProfileStatuss# 4
(4 5
)5 6
;6 7
} 
} Ò
uC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\ITechnologyDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface &
ITechnologyDataAccessLayer /
{ 
public 
List 
< 

Technology 
> 
GetTechnologies  /
(/ 0
)0 1
;1 2
} 
} (
nC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\MailDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface  
IMailDataAccessLayer )
{ 
public		 
string		 
GetUserEmail		 "
(		" #
int		# &
Userid		' -
)		- .
;		. /
public

 
string

 
GetUserName

 !
(

! "
int

" %
Userid

& ,
)

, -
;

- .
public 
string $
GetUserNameWithProfileId .
(. /
int/ 2
	profileId3 <
)< =
;= >
} 
public 

class 
MailDataAccessLayer $
:$ % 
IMailDataAccessLayer% 9
{ 
private 
readonly 
Context  
_context! )
;) *
private 
readonly 
ILogger  
<  !
ProfileService! /
>/ 0
_logger1 8
;8 9
public 
MailDataAccessLayer #
(# $
Context$ +
context, 3
,3 4
ILogger5 <
<< =
ProfileService= K
>K L
loggerM S
)S T
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
public 
string 
GetUserEmail "
(" #
int# &
Userid' -
)- .
{ 	
try 
{ 
return 
_context 
.  
users  %
!% &
.& '
Find' +
(+ ,
Userid, 2
)2 3
!3 4
.4 5
Email5 :
!: ;
;; <
} 
catch 
( 
	Exception !
getUserEmailException 2
)2 3
{ 
_logger 
. 
LogInformation &
(& '
$"' )
$str) \
{\ ]!
getUserEmailException] r
.r s
Messages z
}z {
$str{ ~
{~ "
getUserEmailException	 
.
 

StackTrace
 
}
  
"
  ¡
)
¡ ¢
;
¢ £
throw   
;   
}!! 
}"" 	
public## 
string## 
GetUserName## !
(##! "
int##" %
Userid##& ,
)##, -
{$$ 	
try%% 
{&& 
return'' 
_context'' 
.''  
users''  %
!''% &
.''& '
Find''' +
(''+ ,
Userid'', 2
)''2 3
!''3 4
.''4 5
UserName''5 =
!''= >
;''> ?
}(( 
catch)) 
()) 
	Exception))  
getUserNameException)) 1
)))1 2
{** 
_logger++ 
.++ 
LogInformation++ &
(++& '
$"++' )
$str++) Z
{++Z [ 
getUserNameException++[ o
.++o p
Message++p w
}++w x
$str++x {
{++{ |!
getUserNameException	++| 
.
++ 

StackTrace
++ 
}
++ 
"
++ 
)
++ 
;
++ 
throw,, 
;,, 
}-- 
}.. 	
public00 
string00 $
GetUserNameWithProfileId00 .
(00. /
int00/ 2
	profileId003 <
)00< =
{11 	
try22 
{33 
int44 
userId44 
=44 
(44 
from44 !
profile44" )
in44* ,
_context44- 5
.445 6
profile446 =
where44> C
profile44D K
.44K L
	ProfileId44L U
==44U W
	profileId44W `
select44a g
profile44h o
.44o p
	ProfileId44p y
)44y z
.44z {
First	44{ 
(
44 
)
44 
;
44 
return55 
_context55 
.55  
users55  %
!55% &
.55& '
Find55' +
(55+ ,
userId55, 2
)552 3
!553 4
.554 5
UserName555 =
!55= >
;55> ?
}66 
catch77 
(77 
	Exception77  
getUserNameException77 1
)771 2
{88 
_logger99 
.99 
LogInformation99 &
(99& '
$"99' )
$str99) Z
{99Z [ 
getUserNameException99[ o
.99o p
Message99p w
}99w x
$str99x {
{99{ |!
getUserNameException	99| 
.
99 

StackTrace
99 
}
99 
"
99 
)
99 
;
99 
throw:: 
;:: 
};; 
}<< 	
}== 
}?? 
vC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\OrganisationDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class '
OrganisationDataAccessLayer ,
:, -(
IOrganisationDataAccessLayer- I
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  '
OrganisationDataAccessLayer  ;
>; <
_logger= D
=E F
defaultG N
!N O
;O P
public			 
List		 
<		 
Organisation		 !
>		! "
GetOrganisations		# 3
(		3 4
)		4 5
{

 	
try 
{ 
return 
_db 
. 
Organisations (
!( )
.) *
ToList* 0
(0 1
)1 2
;2 3
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
}   	
}$$ 
}%% »²
fC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\ProfileData.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IProfileData !
{		 
bool

 

AddProfile

 
(

 
Profile

 
profile

  '
)

' (
;

( )
bool 
AddPersonalDetail 
( 
PersonalDetails .
personalDetails/ >
)> ?
;? @
List 
< 
PersonalDetails 
> !
GetAllPersonalDetails 3
(3 4
)4 5
;5 6
PersonalDetails "
GetPersonalDetailsById .
(. /
int/ 2

Personalid3 =
)= >
;> ?
bool  
UpdatePersonalDetail !
(! "
PersonalDetails" 1
personalDetails2 A
)A B
;B C
bool "
DisablePersonalDetails #
(# $
int$ '
PersonalDetailsid( 9
)9 :
;: ;
bool 
AddEducation 
( 
	Education #
	education$ -
)- .
;. /
List 
< 
	Education 
> "
GetallEducationDetails .
(. /
)/ 0
;0 1
	Education #
GetEducationDetailsById )
() *
int* -
Educationid. 9
)9 :
;: ;
bool 
UpdateEducation 
( 
	Education &
	education' 0
)0 1
;1 2
bool %
DisableEducationalDetails &
(& '
int' *
Educationid+ 6
)6 7
;7 8
bool 
AddProjects 
( 
Projects !
project" )
)) *
;* +
List 
< 
Projects 
>  
GetallProjectDetails +
(+ ,
), -
;- .
Projects !
GetProjectDetailsById &
(& '
int' *
	Projectid+ 4
)4 5
;5 6
bool 
UpdateProjects 
( 
Projects $
projects% -
)- .
;. /
bool !
DisableProjectDetails "
(" #
int# &
	Projectid' 0
)0 1
;1 2
bool 
	AddSkills 
( 
Skills 
skill #
)# $
;$ %
List 
< 
Skills 
> 
GetallSkillDetails '
(' (
)( )
;) *
Skills   
GetSkillDetailsById   "
(  " #
int  # &
Skillid  ' .
)  . /
;  / 0
bool!! 
UpdateSkills!! 
(!! 
Skills!!  
skill!!! &
)!!& '
;!!' (
bool"" 
DisableSkillDetails""  
(""  !
int""! $
Skillid""% ,
)"", -
;""- .
bool$$ 
AddAchievements$$ 
($$ 
Achievements$$ )
achievements$$* 6
)$$6 7
;$$7 8
List%% 
<%% 
Achievements%% 
>%% 
GetallAchievements%% -
(%%- .
)%%. /
;%%/ 0
bool'' 
DisableAchievement'' 
(''  
int''  #
AchievementId''$ 1
)''1 2
;''2 3
bool)) 
AddBreakDuration)) 
()) 
BreakDuration)) +
duration)), 4
)))4 5
;))5 6
bool**  
DisableBreakDuration** !
(**! "
int**" %
BreakDurationid**& 5
)**5 6
;**6 7
bool,, 
AddLanguage,, 
(,, 
Language,, !
language,," *
),,* +
;,,+ ,
bool-- 
DisableLanguage-- 
(-- 
int--  

Languageid--! +
)--+ ,
;--, -
bool// 
AddSocialMedia// 
(// 
SocialMedia// '
media//( -
)//- .
;//. /
bool00 
DisableSocialMedia00 
(00  
int00  #
SocialMediaid00$ 1
)001 2
;002 3

Technology33 
GetTechnologyById33 $
(33$ %
int33% (
Technologyid33) 5
)335 6
;336 7
List44 
<44 

Technology44 
>44 
GetallTechnologies44 +
(44+ ,
)44, -
;44- .
public77 
List77 
<77 
Profile77 
>77 
GetallProfiles77 +
(77+ ,
)77, -
;77- .
Profile88 
GetProfileById88 
(88 
int88 "
	ProfileId88# ,
)88, -
;88- .
public:: 
ProfileStatus:: '
GetProfileStatusByProfileId:: 8
(::8 9
int::9 <
	Profileid::= F
)::F G
;::G H
public<< 
List<< 
<<< 
User<< 
><< 
GetFilterdProfile<< +
(<<+ ,
string<<, 2
userName<<3 ;
,<<; <
int<<= @
designationId<<A N
,<<N O
int<<P S
domainID<<T \
,<<\ ]
int<<^ a
technologyId<<b n
,<<n o
int<<p s
	collegeId<<t }
,<<} ~
int	<< 
profileStatusId
<< 
,
<< 
int
<< 
maxExperience
<< ¥
,
<<¥ ¦
int
<<§ ª
minExperience
<<« ¸
,
<<¸ ¹
int
<<¹ ¼ 
currentdesignation
<<½ Ï
)
<<Ï Ð
;
<<Ð Ñ
}?? 
publicAA 

classAA 
ProfileDataAA 
:AA 
IProfileDataAA +
{BB 
privateCC 
readonlyCC 
ContextCC  
_contextCC! )
;CC) *
privateDD 
readonlyDD 
ILoggerDD  
<DD  !
ProfileServiceDD! /
>DD/ 0
_loggerDD1 8
;DD8 9
publicFF 
ProfileDataFF 
(FF 
ContextFF "
contextFF# *
,FF* +
ILoggerFF, 3
<FF3 4
ProfileServiceFF4 B
>FFB C
loggerFFD J
)FFJ K
{GG 	
_contextHH 
=HH 
contextHH 
;HH 
_loggerII 
=II 
loggerII 
;II 
}JJ 	
publicKK 
boolKK 

AddProfileKK 
(KK 
ProfileKK &
profileKK' .
)KK. /
{LL 	
profileMM 
.MM 
IsActiveMM 
=MM 
trueMM #
;MM# $
ifOO 
(OO 
profileOO 
==OO 
nullOO 
)OO  
throwPP 
newPP 
ArgumentExceptionPP +
(PP, -
$strPP- \
,PP\ ]
nameofPP] c
(PPc d
profilePPd k
)PPk l
)PPl m
;PPm n
tryRR 
{SS 
profileTT 
.TT 
IsActiveTT  
=TT! "
trueTT# '
;TT' (
_contextUU 
.UU 
profileUU  
!UU  !
.UU! "
AddUU" %
(UU% &
profileUU& -
)UU- .
;UU. /
_contextVV 
.VV 
SaveChangesVV $
(VV$ %
)VV% &
;VV& '
returnWW 
trueWW 
;WW 
}XX 
catchZZ 
(ZZ 
	ExceptionZZ 
	exceptionZZ &
)ZZ& '
{[[ 
_logger]] 
.]] 
LogError]]  
(]]  !
$"]]! #
$str]]# ?
{]]? @
	exception]]@ I
.]]I J
Message]]J Q
}]]Q R
"]]R S
)]]S T
;]]T U
_logger^^ 
.^^ 
LogInformation^^ &
(^^& '
$"^^' )
$str^^) E
{^^E F
	exception^^F O
.^^O P

StackTrace^^P Z
}^^Z [
"^^[ \
)^^\ ]
;^^] ^
return`` 
false`` 
;`` 
}aa 
}dd 	
publicff 
IEnumerableff 
<ff 
BreakDurationff (
>ff( )/
#GetBreakDurationByPersonalDetailsIdff* M
(ffM N
intffN Q

PersonalidffR \
)ff\ ]
{gg 	
tryhh 
{ii 
returnjj 
_contextjj 
.jj  
Setjj  #
<jj# $
BreakDurationjj$ 1
>jj1 2
(jj2 3
)jj3 4
.jj4 5
Wherejj5 :
(jj: ;
nameofjj; A
=>jjB D
nameofjjE K
.jjK L
PersonalDetailsIdjjL ]
==jj^ `

Personalidjja k
)jjk l
.jjl m
ToListjjm s
(jjs t
)jjt u
;jju v
}kk 
catchll 
(ll 
	Exceptionll 
	exceptionll &
)ll& '
{mm 
_loggernn 
.nn 
LogErrornn  
(nn  !
$"nn! #
$strnn# I
{nnI J
	exceptionnnJ S
.nnS T
MessagennT [
}nn[ \
"nn\ ]
)nn] ^
;nn^ _
_loggeroo 
.oo 
LogInformationoo &
(oo& '
$"oo' )
$stroo) O
{ooO P
	exceptionooP Y
.ooY Z

StackTraceooZ d
}ood e
"ooe f
)oof g
;oog h
throwpp 
;pp 
}qq 
}ss 	
publicuu 
Listuu 
<uu 
PersonalDetailsuu #
>uu# $!
GetAllPersonalDetailsuu% :
(uu: ;
)uu; <
{vv 	
tryxx 
{yy 
returnzz 
_contextzz 
.zz  
personalDetailszz  /
!zz/ 0
.zz0 1
Includezz1 8
(zz8 9
szz9 :
=>zz; =
szz> ?
.zz? @
languagezz@ H
)zzH I
.zzI J
IncludezzJ Q
(zzQ R
szzR S
=>zzT V
szzW X
.zzX Y
breakDurationzzY f
)zzf g
.zzg h
Includezzh o
(zzo p
szzp q
=>zzr t
szzu v
.zzv w
socialmedia	zzw 
)
zz 
.
zz 
ToList
zz 
(
zz 
)
zz 
;
zz 
}}} 
catch 
( 
	Exception 
	exception &
)& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# J
{
J K
	exception
K T
.
T U
Message
U \
}
\ ]
"
] ^
)
^ _
;
_ `
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) M
{
M N
	exception
N W
.
W X

StackTrace
X b
}
b c
"
c d
)
d e
;
e f
throw
 
;
 
}
 
}
 	
public
 
PersonalDetails
 $
GetPersonalDetailsById
 5
(
5 6
int
6 9

Personalid
: D
)
D E
{
 	
if
 
(
 

Personalid
 
<=
 
$num
 
)
  
throw
 
new
 !
ValidationException
 -
(
- .
$str
. Q
)
Q R
;
R S
try
 
{
 
var
 
personalDetails
 #
=
$ %#
GetAllPersonalDetails
& ;
(
; <
)
< =
.
= >
FirstOrDefault
> L
(
L M
x
M N
=>
O Q
x
R S
.
S T
PersonalDetailsId
T e
==
f h

Personalid
i s
)
s t
;
t u
if
 
(
 
personalDetails
 #
==
$ &
null
' +
)
+ ,
throw
- 2
new
3 6#
ArgumentNullException
7 L
(
L M
$"
M O
$str
O \
{
\ ]

Personalid
] g
}
g h
"
h i
)
i j
;
j k
return
 
personalDetails
 &
;
& '
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# K
{
K L
	exception
L U
.
U V
Message
V ]
}
] ^
"
^ _
)
_ `
;
` a
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) Q
{
Q R
	exception
R [
.
[ \

StackTrace
\ f
}
f g
"
g h
)
h i
;
i j
throw
 
;
 
}
 
}
 	
public
 
bool
 
AddPersonalDetail
 %
(
% &
PersonalDetails
& 5
personalDetails
6 E
)
E F
{
 	
if
   
(
   
personalDetails
   
==
    "
null
  # '
)
  ' (
throw
¡¡ 
new
¡¡ 
ArgumentException
¡¡ +
(
¡¡+ ,
$str
¡¡, [
,
¡¡[ \
nameof
¡¡\ b
(
¡¡b c
personalDetails
¡¡c r
)
¡¡r s
)
¡¡s t
;
¡¡t u
try
££ 
{
¤¤ 
personalDetails
¥¥ 
.
¥¥  
IsActive
¥¥  (
=
¥¥) *
true
¥¥+ /
;
¥¥/ 0
_context
¦¦ 
.
¦¦ 
personalDetails
¦¦ (
!
¦¦( )
.
¦¦) *
Add
¦¦* -
(
¦¦- .
personalDetails
¦¦. =
)
¦¦= >
;
¦¦> ?
_context
§§ 
.
§§ 
SaveChanges
§§ $
(
§§$ %
)
§§% &
;
§§& '
return
¨¨ 
true
¨¨ 
;
¨¨ 
}
©© 
catch
«« 
(
«« 
	Exception
«« 
	exception
«« &
)
««& '
{
¬¬ 
_logger
®® 
.
®® 
LogError
®®  
(
®®  !
$"
®®! #
$str
®®# G
{
®®G H
	exception
®®H Q
.
®®Q R
Message
®®R Y
}
®®Y Z
"
®®Z [
)
®®[ \
;
®®\ ]
_logger
¯¯ 
.
¯¯ 
LogInformation
¯¯ &
(
¯¯& '
$"
¯¯' )
$str
¯¯) M
{
¯¯M N
	exception
¯¯N W
.
¯¯W X

StackTrace
¯¯X b
}
¯¯b c
"
¯¯c d
)
¯¯d e
;
¯¯e f
return
±± 
false
±± 
;
±± 
}
²² 
}
µµ 	
public
¶¶ 
bool
¶¶ "
UpdatePersonalDetail
¶¶ (
(
¶¶( )
PersonalDetails
¶¶) 8
personalDetails
¶¶9 H
)
¶¶H I
{
·· 	
if
¸¸ 
(
¸¸ 
personalDetails
¸¸ 
==
¸¸  "
null
¸¸# '
)
¸¸' (
throw
¹¹ 
new
¹¹ !
ValidationException
¹¹ -
(
¹¹- .
$str
¹¹. `
)
¹¹` a
;
¹¹a b
try
»» 
{
¼¼ 
_context
½½ 
.
½½ 
personalDetails
½½ (
!
½½( )
.
½½) *
Update
½½* 0
(
½½0 1
personalDetails
½½1 @
)
½½@ A
;
½½A B
_context
¾¾ 
.
¾¾ 
SaveChanges
¾¾ $
(
¾¾$ %
)
¾¾% &
;
¾¾& '
return
¿¿ 
true
¿¿ 
;
¿¿ 
}
ÀÀ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ÂÂ 
_logger
ÄÄ 
.
ÄÄ 
LogError
ÄÄ  
(
ÄÄ  !
$"
ÄÄ! #
$str
ÄÄ# H
{
ÄÄH I
	exception
ÄÄI R
.
ÄÄR S
Message
ÄÄS Z
}
ÄÄZ [
"
ÄÄ[ \
)
ÄÄ\ ]
;
ÄÄ] ^
_logger
ÅÅ 
.
ÅÅ 
LogInformation
ÅÅ &
(
ÅÅ& '
$"
ÅÅ' )
$str
ÅÅ) O
{
ÅÅO P
	exception
ÅÅP Y
.
ÅÅY Z

StackTrace
ÅÅZ d
}
ÅÅd e
"
ÅÅe f
)
ÅÅf g
;
ÅÅg h
return
ÆÆ 
false
ÆÆ 
;
ÆÆ 
}
ÇÇ 
}
ÉÉ 	
public
ËË 
bool
ËË $
DisablePersonalDetails
ËË *
(
ËË* +
int
ËË+ .
PersonalDetailsid
ËË/ @
)
ËË@ A
{
ÌÌ 	
if
ÍÍ 
(
ÍÍ 
PersonalDetailsid
ÍÍ !
<=
ÍÍ" $
$num
ÍÍ% &
)
ÍÍ& '
throw
ÎÎ 
new
ÎÎ !
ValidationException
ÎÎ -
(
ÎÎ- .
$str
ÎÎ. Y
)
ÎÎY Z
;
ÎÎZ [
try
ÐÐ 
{
ÑÑ 
var
ÒÒ 
personalDetails
ÒÒ #
=
ÒÒ$ %
_context
ÒÒ& .
.
ÒÒ. /
personalDetails
ÒÒ/ >
!
ÒÒ> ?
.
ÒÒ? @
Find
ÒÒ@ D
(
ÒÒD E
PersonalDetailsid
ÒÒE V
)
ÒÒV W
;
ÒÒW X
if
ÕÕ 
(
ÕÕ 
personalDetails
ÕÕ #
==
ÕÕ$ &
null
ÕÕ' +
)
ÕÕ+ ,
throw
ÕÕ- 2
new
ÕÕ3 6#
ArgumentNullException
ÕÕ7 L
(
ÕÕL M
$"
ÕÕM O
$str
ÕÕO k
{
ÕÕk l
PersonalDetailsid
ÕÕl }
}
ÕÕ} ~
"
ÕÕ~ 
)ÕÕ 
;ÕÕ 
personalDetails
ÖÖ 
.
ÖÖ  
IsActive
ÖÖ  (
=
ÖÖ) *
false
ÖÖ+ 0
;
ÖÖ0 1
_context
×× 
.
×× 
personalDetails
×× (
.
××( )
Update
××) /
(
××/ 0
personalDetails
××0 ?
)
××? @
;
××@ A
_context
ØØ 
.
ØØ 
SaveChanges
ØØ $
(
ØØ$ %
)
ØØ% &
;
ØØ& '
return
ÙÙ 
true
ÙÙ 
;
ÙÙ 
}
ÛÛ 
catch
ÞÞ 
(
ÞÞ 
	Exception
ÞÞ 
	exception
ÞÞ &
)
ÞÞ& '
{
ßß 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
$"
áá! #
$str
áá# K
{
ááK L
	exception
ááL U
.
ááU V
Message
ááV ]
}
áá] ^
"
áá^ _
)
áá_ `
;
áá` a
_logger
ââ 
.
ââ 
LogInformation
ââ &
(
ââ& '
$"
ââ' )
$str
ââ) Q
{
ââQ R
	exception
ââR [
.
ââ[ \

StackTrace
ââ\ f
}
ââf g
"
ââg h
)
ââh i
;
ââi j
return
ãã 
false
ãã 
;
ãã 
}
ää 
}
ææ 	
public
çç 
List
çç 
<
çç 
	Education
çç 
>
çç $
GetallEducationDetails
çç 5
(
çç5 6
)
çç6 7
{
èè 	
try
êê 
{
ëë 
return
íí 
_context
íí 
.
íí  

educations
íí  *
!
íí* +
.
íí+ ,
Include
íí, 3
(
íí3 4
$str
íí4 =
)
íí= >
.
íí> ?
ToList
íí? E
(
ííE F
)
ííF G
;
ííG H
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
	exception
ññ &
)
ññ& '
{
òò 
_logger
ôô 
.
ôô 
LogError
ôô  
(
ôô  !
$"
ôô! #
$str
ôô# K
{
ôôK L
	exception
ôôL U
.
ôôU V
Message
ôôV ]
}
ôô] ^
"
ôô^ _
)
ôô_ `
;
ôô` a
_logger
õõ 
.
õõ 
LogInformation
õõ &
(
õõ& '
$"
õõ' )
$str
õõ) Q
{
õõQ R
	exception
õõR [
.
õõ[ \

StackTrace
õõ\ f
}
õõf g
"
õõg h
)
õõh i
;
õõi j
throw
öö 
;
öö 
}
÷÷ 
}
øø 	
public
ùù 
	Education
ùù %
GetEducationDetailsById
ùù 0
(
ùù0 1
int
ùù1 4
Educationid
ùù5 @
)
ùù@ A
{
úú 	
if
ûû 
(
ûû 
Educationid
ûû 
<=
ûû 
$num
ûû  
)
ûû  !
throw
ýý 
new
ýý !
ValidationException
ýý -
(
ýý- .
$str
ýý. S
)
ýýS T
;
ýýT U
try
ÿÿ 
{
 
var
 
	education
 
=
 $
GetallEducationDetails
  6
(
6 7
)
7 8
.
8 9
First
9 >
(
> ?
x
? @
=>
A C
x
D E
.
E F
EducationId
F Q
==
R T
Educationid
U `
&&
a c
x
d e
.
e f
IsActive
f n
)
n o
;
o p
if
 
(
 
	education
 
==
  
null
! %
)
% &
throw
' ,
new
- 0#
ArgumentNullException
1 F
(
F G
$"
G I
$str
I V
{
V W
Educationid
W b
}
b c
"
c d
)
d e
;
e f
return
 
	education
  
;
  !
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# L
{
L M
	exception
M V
.
V W
Message
W ^
}
^ _
"
_ `
)
` a
;
a b
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) R
{
R S
	exception
S \
.
\ ]

StackTrace
] g
}
g h
"
h i
)
i j
;
j k
throw
 
;
 
}
 
}
 	
public
 
bool
 
AddEducation
  
(
  !
	Education
! *
	education
+ 4
)
4 5
{
 	
if
 
(
 
	education
 
==
 
null
 !
)
! "
throw
 
new
 
ArgumentException
 +
(
+ ,
$str
, \
,
\ ]
nameof
] c
(
c d
	education
d m
)
m n
)
n o
;
o p
try
 
{
 
	education
 
.
 
IsActive
 "
=
# $
true
% )
;
) *
_context
 
.
 

educations
 #
!
# $
.
$ %
Add
% (
(
( )
	education
) 2
)
2 3
;
3 4
_context
 
.
 
SaveChanges
 $
(
$ %
)
% &
;
& '
return
 
true
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
¡¡ 
.
¡¡ 
LogError
¡¡  
(
¡¡  !
$"
¡¡! #
$str
¡¡# A
{
¡¡A B
	exception
¡¡B K
.
¡¡K L
Message
¡¡L S
}
¡¡S T
"
¡¡T U
)
¡¡U V
;
¡¡V W
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ &
(
¢¢& '
$"
¢¢' )
$str
¢¢) G
{
¢¢G H
	exception
¢¢H Q
.
¢¢Q R

StackTrace
¢¢R \
}
¢¢\ ]
"
¢¢] ^
)
¢¢^ _
;
¢¢_ `
throw
££ 
;
££ 
}
¤¤ 
}
§§ 	
public
¨¨ 
bool
¨¨ 
UpdateEducation
¨¨ #
(
¨¨# $
	Education
¨¨$ -
	education
¨¨. 7
)
¨¨7 8
{
©© 	
if
ªª 
(
ªª 
	education
ªª 
==
ªª 
null
ªª !
)
ªª! "
throw
«« 
new
«« !
ValidationException
«« -
(
««- .
$str
««. c
)
««c d
;
««d e
try
¬¬ 
{
­­ 
_context
®® 
.
®® 

educations
®® #
!
®®# $
.
®®$ %
Update
®®% +
(
®®+ ,
	education
®®, 5
)
®®5 6
;
®®6 7
_context
¯¯ 
.
¯¯ 
SaveChanges
¯¯ $
(
¯¯$ %
)
¯¯% &
;
¯¯& '
return
°° 
true
°° 
;
°° 
}
±± 
catch
²² 
(
²² 
	Exception
²² 
	exception
²² &
)
²²& '
{
³³ 
_logger
µµ 
.
µµ 
LogError
µµ  
(
µµ  !
$"
µµ! #
$str
µµ# C
{
µµC D
	exception
µµD M
.
µµM N
Message
µµN U
}
µµU V
"
µµV W
)
µµW X
;
µµX Y
_logger
¶¶ 
.
¶¶ 
LogInformation
¶¶ &
(
¶¶& '
$"
¶¶' )
$str
¶¶) I
{
¶¶I J
	exception
¶¶J S
.
¶¶S T

StackTrace
¶¶T ^
}
¶¶^ _
"
¶¶_ `
)
¶¶` a
;
¶¶a b
return
·· 
false
·· 
;
·· 
}
¸¸ 
}
ºº 	
public
½½ 
bool
½½ '
DisableEducationalDetails
½½ -
(
½½- .
int
½½. 1
Educationid
½½2 =
)
½½= >
{
¾¾ 	
if
¿¿ 
(
¿¿ 
Educationid
¿¿ 
<=
¿¿ 
$num
¿¿  
)
¿¿  !
throw
ÁÁ 
new
ÁÁ !
ValidationException
ÁÁ -
(
ÁÁ- .
$str
ÁÁ. S
)
ÁÁS T
;
ÁÁT U
try
ÃÃ 
{
ÄÄ 
var
ÅÅ 
	education
ÅÅ 
=
ÅÅ 
_context
ÅÅ  (
.
ÅÅ( )

educations
ÅÅ) 3
!
ÅÅ3 4
.
ÅÅ4 5
Find
ÅÅ5 9
(
ÅÅ9 :
Educationid
ÅÅ: E
)
ÅÅE F
;
ÅÅF G
if
ÈÈ 
(
ÈÈ 
	education
ÈÈ 
==
ÈÈ  
null
ÈÈ! %
)
ÈÈ% &
throw
ÈÈ' ,
new
ÈÈ- 0#
ArgumentNullException
ÈÈ1 F
(
ÈÈF G
$"
ÈÈG I
$str
ÈÈI _
{
ÈÈ_ `
Educationid
ÈÈ` k
}
ÈÈk l
"
ÈÈl m
)
ÈÈm n
;
ÈÈn o
	education
ÉÉ 
.
ÉÉ 
IsActive
ÉÉ "
=
ÉÉ# $
false
ÉÉ% *
;
ÉÉ* +
_context
ÊÊ 
.
ÊÊ 

educations
ÊÊ #
.
ÊÊ# $
Update
ÊÊ$ *
(
ÊÊ* +
	education
ÊÊ+ 4
)
ÊÊ4 5
;
ÊÊ5 6
_context
ËË 
.
ËË 
SaveChanges
ËË $
(
ËË$ %
)
ËË% &
;
ËË& '
return
ÌÌ 
true
ÌÌ 
;
ÌÌ 
}
ÎÎ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
	exception
ÑÑ &
)
ÑÑ& '
{
ÒÒ 
_logger
ÔÔ 
.
ÔÔ 
LogError
ÔÔ  
(
ÔÔ  !
$"
ÔÔ! #
$str
ÔÔ# L
{
ÔÔL M
	exception
ÔÔM V
.
ÔÔV W
Message
ÔÔW ^
}
ÔÔ^ _
"
ÔÔ_ `
)
ÔÔ` a
;
ÔÔa b
_logger
ÕÕ 
.
ÕÕ 
LogInformation
ÕÕ &
(
ÕÕ& '
$"
ÕÕ' )
$str
ÕÕ) R
{
ÕÕR S
	exception
ÕÕS \
.
ÕÕ\ ]

StackTrace
ÕÕ] g
}
ÕÕg h
"
ÕÕh i
)
ÕÕi j
;
ÕÕj k
return
ÖÖ 
false
ÖÖ 
;
ÖÖ 
}
×× 
}
ÙÙ 	
public
ÚÚ 
bool
ÚÚ 
AddProjects
ÚÚ 
(
ÚÚ  
Projects
ÚÚ  (
project
ÚÚ) 0
)
ÚÚ0 1
{
ÛÛ 	
if
ÞÞ 
(
ÞÞ 
project
ÞÞ 
==
ÞÞ 
null
ÞÞ 
)
ÞÞ  
throw
ßß 
new
ßß 
ArgumentException
ßß +
(
ßß+ ,
$str
ßß, Z
,
ßßZ [
nameof
ßß[ a
(
ßßa b
project
ßßb i
)
ßßi j
)
ßßj k
;
ßßk l
try
áá 
{
ââ 
project
åå 
.
åå 
IsActive
åå  
=
åå! "
true
åå# '
;
åå' (
_context
ææ 
.
ææ 
projects
ææ !
!
ææ! "
.
ææ" #
Add
ææ# &
(
ææ& '
project
ææ' .
)
ææ. /
;
ææ/ 0
_context
çç 
.
çç 
SaveChanges
çç $
(
çç$ %
)
çç% &
;
çç& '
return
èè 
true
èè 
;
èè 
}
éé 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
ìì 
_logger
îî 
.
îî 
LogError
îî  
(
îî  !
$"
îî! #
$str
îî# @
{
îî@ A
	exception
îîA J
.
îîJ K
Message
îîK R
}
îîR S
"
îîS T
)
îîT U
;
îîU V
_logger
ïï 
.
ïï 
LogInformation
ïï &
(
ïï& '
$"
ïï' )
$str
ïï) F
{
ïïF G
	exception
ïïG P
.
ïïP Q

StackTrace
ïïQ [
}
ïï[ \
"
ïï\ ]
)
ïï] ^
;
ïï^ _
return
ññ 
false
ññ 
;
ññ 
}
òò 
}
õõ 	
public
öö 
List
öö 
<
öö 
Projects
öö 
>
öö "
GetallProjectDetails
öö 2
(
öö2 3
)
öö3 4
{
÷÷ 	
try
ùù 
{
úú 
return
üü 
_context
üü 
.
üü  
projects
üü  (
!
üü( )
.
üü) *
ToList
üü* 0
(
üü0 1
)
üü1 2
;
üü2 3
}
þþ 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# I
{
I J
	exception
J S
.
S T
Message
T [
}
[ \
"
\ ]
)
] ^
;
^ _
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) O
{
O P
	exception
P Y
.
Y Z

StackTrace
Z d
}
d e
"
e f
)
f g
;
g h
throw
 
;
 
}
 
}
 	
public
 
Projects
 #
GetProjectDetailsById
 -
(
- .
int
. 1
	Projectid
2 ;
)
; <
{
 	
if
 
(
 
	Projectid
 
<=
 
$num
 
)
 
throw
 
new
 !
ValidationException
 -
(
- .
$str
. Q
)
Q R
;
R S
try
 
{
 
var
 
project
 
=
 "
GetallProjectDetails
 2
(
2 3
)
3 4
.
4 5
First
5 :
(
: ;
x
; <
=>
= ?
x
@ A
.
A B
	ProjectId
B K
==
L N
	Projectid
O X
&&
Y [
x
\ ]
.
] ^
IsActive
^ f
)
f g
;
g h
if
 
(
 
project
 
==
 
null
 #
)
# $
throw
% *
new
+ .#
ArgumentNullException
/ D
(
D E
$"
E G
$str
G T
{
T U
	Projectid
U ^
}
^ _
"
_ `
)
` a
;
a b
return
 
project
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# J
{
J K
	exception
K T
.
T U
Message
U \
}
\ ]
"
] ^
)
^ _
;
_ `
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) P
{
P Q
	exception
Q Z
.
Z [

StackTrace
[ e
}
e f
"
f g
)
g h
;
h i
throw
 
;
 
}
 
}
 	
public
 
bool
 
UpdateProjects
 "
(
" #
Projects
# +
projects
, 4
)
4 5
{
 	
if
 
(
 
projects
 
==
 
null
  
)
  !
throw
 
new
 !
ValidationException
 -
(
- .
$str
. a
)
a b
;
b c
try
¡¡ 
{
¢¢ 
projects
££ 
.
££ 
IsActive
££ !
=
££" #
true
££$ (
;
££( )
_context
¤¤ 
.
¤¤ 
projects
¤¤ !
!
¤¤! "
.
¤¤" #
Update
¤¤# )
(
¤¤) *
projects
¤¤* 2
)
¤¤2 3
;
¤¤3 4
_context
¥¥ 
.
¥¥ 
SaveChanges
¥¥ $
(
¥¥$ %
)
¥¥% &
;
¥¥& '
return
¦¦ 
true
¦¦ 
;
¦¦ 
}
§§ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
	exception
¨¨ &
)
¨¨& '
{
©© 
_logger
«« 
.
«« 
LogError
««  
(
««  !
$"
««! #
$str
««# H
{
««H I
	exception
««I R
.
««R S
Message
««S Z
}
««Z [
"
««[ \
)
««\ ]
;
««] ^
_logger
¬¬ 
.
¬¬ 
LogInformation
¬¬ &
(
¬¬& '
$"
¬¬' )
$str
¬¬) O
{
¬¬O P
	exception
¬¬P Y
.
¬¬Y Z

StackTrace
¬¬Z d
}
¬¬d e
"
¬¬e f
)
¬¬f g
;
¬¬g h
return
­­ 
false
­­ 
;
­­ 
}
®® 
}
°° 	
public
±± 
bool
±± #
DisableProjectDetails
±± )
(
±±) *
int
±±* -
	Projectid
±±. 7
)
±±7 8
{
²² 	
if
³³ 
(
³³ 
	Projectid
³³ 
<=
³³ 
$num
³³ 
)
³³ 
throw
µµ 
new
µµ !
ValidationException
µµ -
(
µµ- .
$str
µµ. Q
)
µµQ R
;
µµR S
try
·· 
{
¸¸ 
var
¹¹ 
projects
¹¹ 
=
¹¹ 
_context
¹¹ '
.
¹¹' (
projects
¹¹( 0
!
¹¹0 1
.
¹¹1 2
Find
¹¹2 6
(
¹¹6 7
	Projectid
¹¹7 @
)
¹¹@ A
;
¹¹A B
if
¼¼ 
(
¼¼ 
projects
¼¼ 
==
¼¼ 
null
¼¼  $
)
¼¼$ %
throw
½½ 
new
½½ #
ArgumentNullException
½½ 3
(
½½3 4
$"
½½4 6
$str
½½6 J
{
½½J K
	Projectid
½½K T
}
½½T U
"
½½U V
)
½½V W
;
½½W X
projects
¿¿ 
.
¿¿ 
IsActive
¿¿ !
=
¿¿" #
false
¿¿$ )
;
¿¿) *
_context
ÀÀ 
.
ÀÀ 
projects
ÀÀ !
.
ÀÀ! "
Update
ÀÀ" (
(
ÀÀ( )
projects
ÀÀ) 1
)
ÀÀ1 2
;
ÀÀ2 3
_context
ÁÁ 
.
ÁÁ 
SaveChanges
ÁÁ $
(
ÁÁ$ %
)
ÁÁ% &
;
ÁÁ& '
return
ÂÂ 
true
ÂÂ 
;
ÂÂ 
}
ÄÄ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
	exception
ÇÇ &
)
ÇÇ& '
{
ÈÈ 
_logger
ÊÊ 
.
ÊÊ 
LogError
ÊÊ  
(
ÊÊ  !
$"
ÊÊ! #
$str
ÊÊ# J
{
ÊÊJ K
	exception
ÊÊK T
.
ÊÊT U
Message
ÊÊU \
}
ÊÊ\ ]
"
ÊÊ] ^
)
ÊÊ^ _
;
ÊÊ_ `
_logger
ËË 
.
ËË 
LogInformation
ËË &
(
ËË& '
$"
ËË' )
$str
ËË) P
{
ËËP Q
	exception
ËËQ Z
.
ËËZ [

StackTrace
ËË[ e
}
ËËe f
"
ËËf g
)
ËËg h
;
ËËh i
return
ÌÌ 
false
ÌÌ 
;
ÌÌ 
}
ÍÍ 
}
ÏÏ 	
public
ÐÐ 
bool
ÐÐ 
AddBreakDuration
ÐÐ $
(
ÐÐ$ %
BreakDuration
ÐÐ% 2
duration
ÐÐ3 ;
)
ÐÐ; <
{
ÑÑ 	
if
ÔÔ 
(
ÔÔ 
duration
ÔÔ 
==
ÔÔ 
null
ÔÔ  
)
ÔÔ  !
throw
ÕÕ 
new
ÕÕ 
ArgumentException
ÕÕ +
(
ÕÕ+ ,
$str
ÕÕ, a
,
ÕÕa b
nameof
ÕÕb h
(
ÕÕh i
duration
ÕÕi q
)
ÕÕq r
)
ÕÕr s
;
ÕÕs t
try
×× 
{
ØØ 
_context
ÚÚ 
.
ÚÚ 
breakDurations
ÚÚ '
!
ÚÚ' (
.
ÚÚ( )
Add
ÚÚ) ,
(
ÚÚ, -
duration
ÚÚ- 5
)
ÚÚ5 6
;
ÚÚ6 7
_context
ÛÛ 
.
ÛÛ 
SaveChanges
ÛÛ $
(
ÛÛ$ %
)
ÛÛ% &
;
ÛÛ& '
return
ÜÜ 
true
ÜÜ 
;
ÜÜ 
}
ÝÝ 
catch
ßß 
(
ßß 
	Exception
ßß 
	exception
ßß &
)
ßß& '
{
àà 
_logger
ââ 
.
ââ 
LogError
ââ  
(
ââ  !
$"
ââ! #
$str
ââ# E
{
ââE F
	exception
ââF O
.
ââO P
Message
ââP W
}
ââW X
"
ââX Y
)
ââY Z
;
ââZ [
_logger
ãã 
.
ãã 
LogInformation
ãã &
(
ãã& '
$"
ãã' )
$str
ãã) L
{
ããL M
	exception
ããM V
.
ããV W

StackTrace
ããW a
}
ããa b
"
ããb c
)
ããc d
;
ããd e
return
åå 
false
åå 
;
åå 
}
ææ 
}
éé 	
public
ìì 
bool
ìì "
DisableBreakDuration
ìì (
(
ìì( )
int
ìì) ,
BreakDurationid
ìì- <
)
ìì< =
{
íí 	
if
îî 
(
îî 
BreakDurationid
îî 
<=
îî  "
$num
îî# $
)
îî$ %
throw
ðð 
new
ðð !
ValidationException
ðð -
(
ðð- .
$str
ðð. W
)
ððW X
;
ððX Y
try
òò 
{
óó 
var
ôô 
breakDurations
ôô "
=
ôô# $
_context
ôô% -
.
ôô- .
breakDurations
ôô. <
!
ôô< =
.
ôô= >
Find
ôô> B
(
ôôB C
BreakDurationid
ôôC R
)
ôôR S
;
ôôS T
if
÷÷ 
(
÷÷ 
breakDurations
÷÷ "
==
÷÷# %
null
÷÷& *
)
÷÷* +
throw
÷÷, 1
new
÷÷2 5#
ArgumentNullException
÷÷6 K
(
÷÷K L
$"
÷÷L N
$str
÷÷N b
{
÷÷b c
BreakDurationid
÷÷c r
}
÷÷r s
"
÷÷s t
)
÷÷t u
;
÷÷u v
breakDurations
øø 
.
øø 
IsActive
øø '
=
øø( )
false
øø* /
;
øø/ 0
_context
ùù 
.
ùù 
breakDurations
ùù '
.
ùù' (
Update
ùù( .
(
ùù. /
breakDurations
ùù/ =
)
ùù= >
;
ùù> ?
_context
úú 
.
úú 
SaveChanges
úú $
(
úú$ %
)
úú% &
;
úú& '
return
ûû 
true
ûû 
;
ûû 
}
ýý 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# I
{
I J
	exception
J S
.
S T
Message
T [
}
[ \
"
\ ]
)
] ^
;
^ _
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) O
{
O P
	exception
P Y
.
Y Z

StackTrace
Z d
}
d e
"
e f
)
f g
;
g h
return
 
false
 
;
 
}
 
}
 	
public
 
bool
 
	AddSkills
 
(
 
Skills
 $
skill
% *
)
* +
{
 	
if
 
(
 
skill
 
==
 
null
 
)
 
throw
 
new
 
ArgumentException
 +
(
+ ,
$str
, X
,
X Y
nameof
Y _
(
_ `
skill
` e
)
e f
)
f g
;
g h
try
 
{
 
skill
 
.
 
IsActive
 
=
  
true
! %
;
% &
_context
 
.
 
skills
 
!
  
.
  !
Add
! $
(
$ %
skill
% *
)
* +
;
+ ,
_context
 
.
 
SaveChanges
 $
(
$ %
)
% &
;
& '
return
 
true
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# >
{
> ?
	exception
? H
.
H I
Message
I P
}
P Q
"
Q R
)
R S
;
S T
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) D
{
D E
	exception
E N
.
N O

StackTrace
O Y
}
Y Z
"
Z [
)
[ \
;
\ ]
return
 
false
 
;
 
}
 
}
¢¢ 	
public
££ 
List
££ 
<
££ 
Skills
££ 
>
££  
GetallSkillDetails
££ .
(
££. /
)
££/ 0
{
¤¤ 	
try
¦¦ 
{
§§ 
return
©© 
_context
©© 
.
©©  
skills
©©  &
!
©©& '
.
©©' (
Include
©©( /
(
©©/ 0
$str
©©0 8
)
©©8 9
.
©©9 :
Include
©©: A
(
©©A B
$str
©©B N
)
©©N O
.
©©O P
ToList
©©P V
(
©©V W
)
©©W X
;
©©X Y
}
«« 
catch
­­ 
(
­­ 
	Exception
­­ 
	exception
­­ &
)
­­& '
{
®® 
_logger
°° 
.
°° 
LogError
°°  
(
°°  !
$"
°°! #
$str
°°# G
{
°°G H
	exception
°°H Q
.
°°Q R
Message
°°R Y
}
°°Y Z
"
°°Z [
)
°°[ \
;
°°\ ]
_logger
±± 
.
±± 
LogInformation
±± &
(
±±& '
$"
±±' )
$str
±±) M
{
±±M N
	exception
±±N W
.
±±W X

StackTrace
±±X b
}
±±b c
"
±±c d
)
±±d e
;
±±e f
throw
²² 
;
²² 
}
³³ 
}
´´ 	
public
µµ 
Skills
µµ !
GetSkillDetailsById
µµ )
(
µµ) *
int
µµ* -
Skillid
µµ. 5
)
µµ5 6
{
¶¶ 	
if
·· 
(
·· 
Skillid
·· 
<=
·· 
$num
·· 
)
·· 
throw
¹¹ 
new
¹¹ !
ValidationException
¹¹ -
(
¹¹- .
$str
¹¹. O
)
¹¹O P
;
¹¹P Q
try
»» 
{
¼¼ 
var
½½ 
skills
½½ 
=
½½  
GetallSkillDetails
½½ /
(
½½/ 0
)
½½0 1
.
½½1 2
First
½½2 7
(
½½7 8
x
½½8 9
=>
½½: <
x
½½= >
.
½½> ?
SkillId
½½? F
==
½½G I
Skillid
½½J Q
&&
½½R T
x
½½U V
.
½½V W
IsActive
½½W _
)
½½_ `
;
½½` a
if
¾¾ 
(
¾¾ 
skills
¾¾ 
==
¾¾ 
null
¾¾ "
)
¾¾" #
throw
¾¾$ )
new
¾¾* -#
ArgumentNullException
¾¾. C
(
¾¾C D
$"
¾¾D F
$str
¾¾F S
{
¾¾S T
Skillid
¾¾T [
}
¾¾[ \
"
¾¾\ ]
)
¾¾] ^
;
¾¾^ _
return
¿¿ 
skills
¿¿ 
;
¿¿ 
}
ÀÀ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ÂÂ 
_logger
ÃÃ 
.
ÃÃ 
LogError
ÃÃ  
(
ÃÃ  !
$"
ÃÃ! #
$str
ÃÃ# H
{
ÃÃH I
	exception
ÃÃI R
.
ÃÃR S
Message
ÃÃS Z
}
ÃÃZ [
"
ÃÃ[ \
)
ÃÃ\ ]
;
ÃÃ] ^
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ &
(
ÄÄ& '
$"
ÄÄ' )
$str
ÄÄ) N
{
ÄÄN O
	exception
ÄÄO X
.
ÄÄX Y

StackTrace
ÄÄY c
}
ÄÄc d
"
ÄÄd e
)
ÄÄe f
;
ÄÄf g
throw
ÅÅ 
;
ÅÅ 
}
ÆÆ 
}
ÇÇ 	
public
ÈÈ 
bool
ÈÈ 
UpdateSkills
ÈÈ  
(
ÈÈ  !
Skills
ÈÈ! '
skill
ÈÈ( -
)
ÈÈ- .
{
ÉÉ 	
if
ÊÊ 
(
ÊÊ 
skill
ÊÊ 
==
ÊÊ 
null
ÊÊ 
)
ÊÊ 
throw
ËË 
new
ËË !
ValidationException
ËË -
(
ËË- .
$str
ËË. ^
)
ËË^ _
;
ËË_ `
try
ÌÌ 
{
ÍÍ 
skill
ÎÎ 
.
ÎÎ 
IsActive
ÎÎ 
=
ÎÎ  
true
ÎÎ! %
;
ÎÎ% &
_context
ÏÏ 
.
ÏÏ 
skills
ÏÏ 
!
ÏÏ  
.
ÏÏ  !
Update
ÏÏ! '
(
ÏÏ' (
skill
ÏÏ( -
)
ÏÏ- .
;
ÏÏ. /
_context
ÐÐ 
.
ÐÐ 
SaveChanges
ÐÐ $
(
ÐÐ$ %
)
ÐÐ% &
;
ÐÐ& '
return
ÑÑ 
true
ÑÑ 
;
ÑÑ 
}
ÒÒ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
	exception
ÓÓ &
)
ÓÓ& '
{
ÔÔ 
_logger
ÖÖ 
.
ÖÖ 
LogError
ÖÖ  
(
ÖÖ  !
$"
ÖÖ! #
$str
ÖÖ# H
{
ÖÖH I
	exception
ÖÖI R
.
ÖÖR S
Message
ÖÖS Z
}
ÖÖZ [
"
ÖÖ[ \
)
ÖÖ\ ]
;
ÖÖ] ^
_logger
×× 
.
×× 
LogInformation
×× &
(
××& '
$"
××' )
$str
××) O
{
××O P
	exception
××P Y
.
××Y Z

StackTrace
××Z d
}
××d e
"
××e f
)
××f g
;
××g h
return
ØØ 
false
ØØ 
;
ØØ 
}
ÙÙ 
}
ÚÚ 	
public
ÛÛ 
bool
ÛÛ !
DisableSkillDetails
ÛÛ '
(
ÛÛ' (
int
ÛÛ( +
Skillid
ÛÛ, 3
)
ÛÛ3 4
{
ÜÜ 	
if
ÝÝ 
(
ÝÝ 
Skillid
ÝÝ 
<=
ÝÝ 
$num
ÝÝ 
)
ÝÝ 
throw
ßß 
new
ßß !
ValidationException
ßß -
(
ßß- .
$str
ßß. O
)
ßßO P
;
ßßP Q
try
áá 
{
ââ 
var
ãã 
skills
ãã 
=
ãã 
_context
ãã %
.
ãã% &
skills
ãã& ,
!
ãã, -
.
ãã- .
Find
ãã. 2
(
ãã2 3
Skillid
ãã3 :
)
ãã: ;
;
ãã; <
if
ææ 
(
ææ 
skills
ææ 
==
ææ 
null
ææ "
)
ææ" #
throw
ææ$ )
new
ææ* -#
ArgumentNullException
ææ. C
(
ææC D
$"
ææD F
$str
ææF X
{
ææX Y
Skillid
ææY `
}
ææ` a
"
ææa b
)
ææb c
;
ææc d
skills
çç 
.
çç 
IsActive
çç 
=
çç  !
false
çç" '
;
çç' (
_context
èè 
.
èè 
skills
èè 
.
èè  
Update
èè  &
(
èè& '
skills
èè' -
)
èè- .
;
èè. /
_context
éé 
.
éé 
SaveChanges
éé $
(
éé$ %
)
éé% &
;
éé& '
return
êê 
true
êê 
;
êê 
}
ìì 
catch
ïï 
(
ïï 
	Exception
ïï 
	exception
ïï &
)
ïï& '
{
ðð 
_logger
òò 
.
òò 
LogError
òò  
(
òò  !
$"
òò! #
$str
òò# H
{
òòH I
	exception
òòI R
.
òòR S
Message
òòS Z
}
òòZ [
"
òò[ \
)
òò\ ]
;
òò] ^
_logger
óó 
.
óó 
LogInformation
óó &
(
óó& '
$"
óó' )
$str
óó) N
{
óóN O
	exception
óóO X
.
óóX Y

StackTrace
óóY c
}
óóc d
"
óód e
)
óóe f
;
óóf g
return
ôô 
false
ôô 
;
ôô 
}
õõ 
}
÷÷ 	
public
øø 
bool
øø 
AddLanguage
øø 
(
øø  
Language
øø  (
language
øø) 1
)
øø1 2
{
ùù 	
if
üü 
(
üü 
language
üü 
==
üü 
null
üü  
)
üü  !
throw
ýý 
new
ýý 
ArgumentException
ýý +
(
ýý+ ,
$str
ýý, \
,
ýý\ ]
nameof
ýý] c
(
ýýc d
language
ýýd l
)
ýýl m
)
ýým n
;
ýýn o
try
ÿÿ 
{
 
_context
 
.
 
	languages
 "
!
" #
.
# $
Add
$ '
(
' (
language
( 0
)
0 1
;
1 2
_context
 
.
 
SaveChanges
 $
(
$ %
)
% &
;
& '
return
 
true
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# @
{
@ A
	exception
A J
.
J K
Message
K R
}
R S
"
S T
)
T U
;
U V
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) F
{
F G
	exception
G P
.
P Q

StackTrace
Q [
}
[ \
"
\ ]
)
] ^
;
^ _
return
 
false
 
;
 
}
 
}
 	
public
 
bool
 
DisableLanguage
 #
(
# $
int
$ '

Languageid
( 2
)
2 3
{
 	
if
 
(
 

Languageid
 
<=
 
$num
 
)
  
throw
 
new
 !
ValidationException
 -
(
- .
$str
. R
)
R S
;
S T
try
 
{
 
var
 
	languages
 
=
 
_context
  (
.
( )
	languages
) 2
!
2 3
.
3 4
Find
4 8
(
8 9

Languageid
9 C
)
C D
;
D E
if
 
(
 
	languages
 
==
  
null
! %
)
% &
throw
' ,
new
- 0#
ArgumentNullException
1 F
(
F G
$"
G I
$str
I ^
{
^ _

Languageid
_ i
}
i j
"
j k
)
k l
;
l m
	languages
 
.
 
IsActive
 "
=
# $
false
% *
;
* +
_context
 
.
 
	languages
 "
.
" #
Update
# )
(
) *
	languages
* 3
)
3 4
;
4 5
_context
   
.
   
SaveChanges
   $
(
  $ %
)
  % &
;
  & '
return
¡¡ 
true
¡¡ 
;
¡¡ 
}
££ 
catch
¦¦ 
(
¦¦ 
	Exception
¦¦ 
	exception
¦¦ &
)
¦¦& '
{
§§ 
_logger
©© 
.
©© 
LogError
©©  
(
©©  !
$"
©©! #
$str
©©# D
{
©©D E
	exception
©©E N
.
©©N O
Message
©©O V
}
©©V W
"
©©W X
)
©©X Y
;
©©Y Z
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) J
{
ªªJ K
	exception
ªªK T
.
ªªT U

StackTrace
ªªU _
}
ªª_ `
"
ªª` a
)
ªªa b
;
ªªb c
return
«« 
false
«« 
;
«« 
}
¬¬ 
}
®® 	
public
¯¯ 
bool
¯¯ 
AddSocialMedia
¯¯ "
(
¯¯" #
SocialMedia
¯¯# .
media
¯¯/ 4
)
¯¯4 5
{
°° 	
if
±± 
(
±± 
media
±± 
==
±± 
null
±± 
)
±± 
throw
²² 
new
²² 
ArgumentException
²² +
(
²²+ ,
$str
²², `
,
²²` a
nameof
²²a g
(
²²g h
media
²²h m
)
²²m n
)
²²n o
;
²²o p
try
³³ 
{
´´ 
_context
¶¶ 
.
¶¶ 
SocialMedias
¶¶ %
!
¶¶% &
.
¶¶& '
Add
¶¶' *
(
¶¶* +
media
¶¶+ 0
)
¶¶0 1
;
¶¶1 2
_context
·· 
.
·· 
SaveChanges
·· $
(
··$ %
)
··% &
;
··& '
return
¸¸ 
true
¸¸ 
;
¸¸ 
}
¹¹ 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
¼¼ 
_logger
¾¾ 
.
¾¾ 
LogError
¾¾  
(
¾¾  !
$"
¾¾! #
$str
¾¾# C
{
¾¾C D
	exception
¾¾D M
.
¾¾M N
Message
¾¾N U
}
¾¾U V
"
¾¾V W
)
¾¾W X
;
¾¾X Y
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$"
¿¿' )
$str
¿¿) I
{
¿¿I J
	exception
¿¿J S
.
¿¿S T

StackTrace
¿¿T ^
}
¿¿^ _
"
¿¿_ `
)
¿¿` a
;
¿¿a b
return
ÁÁ 
false
ÁÁ 
;
ÁÁ 
}
ÂÂ 
}
ÃÃ 	
public
ÄÄ 
bool
ÄÄ  
DisableSocialMedia
ÄÄ &
(
ÄÄ& '
int
ÄÄ' *
SocialMediaid
ÄÄ+ 8
)
ÄÄ8 9
{
ÅÅ 	
if
ÆÆ 
(
ÆÆ 
SocialMediaid
ÆÆ 
<=
ÆÆ  
$num
ÆÆ! "
)
ÆÆ" #
throw
ÈÈ 
new
ÈÈ !
ValidationException
ÈÈ -
(
ÈÈ- .
$str
ÈÈ. U
)
ÈÈU V
;
ÈÈV W
try
ÊÊ 
{
ËË 
var
ÌÌ 
SocialMedias
ÌÌ  
=
ÌÌ! "
_context
ÌÌ# +
.
ÌÌ+ ,
SocialMedias
ÌÌ, 8
!
ÌÌ8 9
.
ÌÌ9 :
Find
ÌÌ: >
(
ÌÌ> ?
SocialMediaid
ÌÌ? L
)
ÌÌL M
;
ÌÌM N
if
ÏÏ 
(
ÏÏ 
SocialMedias
ÏÏ  
==
ÏÏ! #
null
ÏÏ$ (
)
ÏÏ( )
throw
ÏÏ* /
new
ÏÏ0 3#
ArgumentNullException
ÏÏ4 I
(
ÏÏI J
$"
ÏÏJ L
$str
ÏÏL d
{
ÏÏd e
SocialMediaid
ÏÏe r
}
ÏÏr s
"
ÏÏs t
)
ÏÏt u
;
ÏÏu v
SocialMedias
ÐÐ 
.
ÐÐ 
IsActive
ÐÐ %
=
ÐÐ& '
false
ÐÐ( -
;
ÐÐ- .
_context
ÑÑ 
.
ÑÑ 
SocialMedias
ÑÑ %
.
ÑÑ% &
Update
ÑÑ& ,
(
ÑÑ, -
SocialMedias
ÑÑ- 9
)
ÑÑ9 :
;
ÑÑ: ;
_context
ÒÒ 
.
ÒÒ 
SaveChanges
ÒÒ $
(
ÒÒ$ %
)
ÒÒ% &
;
ÒÒ& '
return
ÓÓ 
true
ÓÓ 
;
ÓÓ 
}
ÕÕ 
catch
ØØ 
(
ØØ 
	Exception
ØØ 
	exception
ØØ &
)
ØØ& '
{
ÙÙ 
_logger
ÛÛ 
.
ÛÛ 
LogError
ÛÛ  
(
ÛÛ  !
$"
ÛÛ! #
$str
ÛÛ# G
{
ÛÛG H
	exception
ÛÛH Q
.
ÛÛQ R
Message
ÛÛR Y
}
ÛÛY Z
"
ÛÛZ [
)
ÛÛ[ \
;
ÛÛ\ ]
_logger
ÜÜ 
.
ÜÜ 
LogInformation
ÜÜ &
(
ÜÜ& '
$"
ÜÜ' )
$str
ÜÜ) M
{
ÜÜM N
	exception
ÜÜN W
.
ÜÜW X

StackTrace
ÜÜX b
}
ÜÜb c
"
ÜÜc d
)
ÜÜd e
;
ÜÜe f
return
ÝÝ 
false
ÝÝ 
;
ÝÝ 
}
ÞÞ 
}
àà 	
public
áá 
List
áá 
<
áá 

Technology
áá 
>
áá  
GetallTechnologies
áá  2
(
áá2 3
)
áá3 4
{
ââ 	
try
ää 
{
åå 
return
çç 
_context
çç 
.
çç  
Technologies
çç  ,
!
çç, -
.
çç- .
ToList
çç. 4
(
çç4 5
)
çç5 6
;
çç6 7
}
éé 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
ìì 
_logger
îî 
.
îî 
LogError
îî  
(
îî  !
$"
îî! #
$str
îî# G
{
îîG H
	exception
îîH Q
.
îîQ R
Message
îîR Y
}
îîY Z
"
îîZ [
)
îî[ \
;
îî\ ]
_logger
ïï 
.
ïï 
LogInformation
ïï &
(
ïï& '
$"
ïï' )
$str
ïï) M
{
ïïM N
	exception
ïïN W
.
ïïW X

StackTrace
ïïX b
}
ïïb c
"
ïïc d
)
ïïd e
;
ïïe f
throw
ðð 
;
ðð 
}
ññ 
}
òò 	
public
ôô 

Technology
ôô 
GetTechnologyById
ôô +
(
ôô+ ,
int
ôô, /
Technologyid
ôô0 <
)
ôô< =
{
õõ 	
if
öö 
(
öö 
Technologyid
öö 
<=
öö 
$num
öö  !
)
öö! "
throw
øø 
new
øø !
ValidationException
øø -
(
øø- .
$str
øø. T
)
øøT U
;
øøU V
try
úú 
{
ûû 

Technology
üü 

technology
üü %
=
üü& ' 
GetallTechnologies
üü( :
(
üü: ;
)
üü; <
.
üü< =
First
üü= B
(
üüB C
x
üüC D
=>
üüE G
x
üüH I
.
üüI J
TechnologyId
üüJ V
==
üüW Y
Technologyid
üüZ f
&&
üüg i
x
üüj k
.
üük l
IsActive
üül t
)
üüt u
;
üüu v
if
ýý 
(
ýý 

technology
ýý 
==
ýý !
null
ýý" &
)
ýý& '
throw
ýý( -
new
ýý. 1#
ArgumentNullException
ýý2 G
(
ýýG H
$"
ýýH J
$str
ýýJ W
{
ýýW X

technology
ýýX b
}
ýýb c
"
ýýc d
)
ýýd e
;
ýýe f
return
þþ 

technology
þþ !
;
þþ! "
}
ÿÿ 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# I
{
I J
	exception
J S
.
S T
Message
T [
}
[ \
"
\ ]
)
] ^
;
^ _
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) O
{
O P
	exception
P Y
.
Y Z

StackTrace
Z d
}
d e
"
e f
)
f g
;
g h
throw
 
;
 
}
 
}
 	
public
 
bool
 
AddAchievements
 #
(
# $
Achievements
$ 0
achievements
1 =
)
= >
{
 	
if
 
(
 
achievements
 
==
 
null
  $
)
$ %
throw
 
new
 
ArgumentException
 +
(
+ ,
$str
, `
,
` a
nameof
a g
(
g h
achievements
h t
)
t u
)
u v
;
v w
try
 
{
 
achievements
 
.
 
IsActive
 %
=
& '
true
( ,
;
, -
_context
 
.
 
achievements
 %
!
% &
.
& '
Add
' *
(
* +
achievements
+ 7
)
7 8
;
8 9
_context
 
.
 
SaveChanges
 $
(
$ %
)
% &
;
& '
return
 
true
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# D
{
D E
	exception
E N
.
N O
Message
O V
}
V W
"
W X
)
X Y
;
Y Z
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) J
{
J K
	exception
K T
.
T U

StackTrace
U _
}
_ `
"
` a
)
a b
;
b c
return
 
false
 
;
 
}
 
}
 	
public
 
List
 
<
 
Achievements
  
>
  ! 
GetallAchievements
" 4
(
4 5
)
5 6
{
 	
try
   
{
¡¡ 
return
££ 
_context
££ 
.
££  
achievements
££  ,
!
££, -
.
££- .
Include
££. 5
(
££5 6
$str
££6 G
)
££G H
.
££H I
ToList
££I O
(
££O P
)
££P Q
;
££Q R
}
¥¥ 
catch
§§ 
(
§§ 
	Exception
§§ 
	exception
§§ &
)
§§& '
{
¨¨ 
_logger
ªª 
.
ªª 
LogError
ªª  
(
ªª  !
$"
ªª! #
$str
ªª# F
{
ªªF G
	exception
ªªG P
.
ªªP Q
Message
ªªQ X
}
ªªX Y
"
ªªY Z
)
ªªZ [
;
ªª[ \
_logger
«« 
.
«« 
LogInformation
«« &
(
««& '
$"
««' )
$str
««) L
{
««L M
	exception
««M V
.
««V W

StackTrace
««W a
}
««a b
"
««b c
)
««c d
;
««d e
throw
¬¬ 
;
¬¬ 
}
­­ 
}
®® 	
public
¯¯ 
bool
¯¯  
DisableAchievement
¯¯ &
(
¯¯& '
int
¯¯' *
AchievementId
¯¯+ 8
)
¯¯8 9
{
°° 	
if
±± 
(
±± 
AchievementId
±± 
<=
±±  
$num
±±! "
)
±±" #
throw
³³ 
new
³³ 
ArgumentException
³³ +
(
³³+ ,
$str
³³, S
,
³³S T
nameof
³³T Z
(
³³Z [
AchievementId
³³[ h
)
³³h i
)
³³i j
;
³³j k
try
µµ 
{
¶¶ 
var
·· 
achievement
·· 
=
··  !
_context
··" *
.
··* +
achievements
··+ 7
!
··7 8
.
··8 9
Find
··9 =
(
··= >
AchievementId
··> K
)
··K L
;
··L M
if
ºº 
(
ºº 
achievement
ºº 
==
ºº  "
null
ºº# '
)
ºº' (
throw
ºº) .
new
ºº/ 2#
ArgumentNullException
ºº3 H
(
ººH I
$"
ººI K
$str
ººK c
{
ººc d
AchievementId
ººd q
}
ººq r
"
ººr s
)
ººs t
;
ººt u
achievement
»» 
.
»» 
IsActive
»» $
=
»»% &
false
»»' ,
;
»», -
_context
¼¼ 
.
¼¼ 
achievements
¼¼ %
.
¼¼% &
Update
¼¼& ,
(
¼¼, -
achievement
¼¼- 8
)
¼¼8 9
;
¼¼9 :
_context
½½ 
.
½½ 
SaveChanges
½½ $
(
½½$ %
)
½½% &
;
½½& '
return
¾¾ 
true
¾¾ 
;
¾¾ 
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
	exception
ÃÃ &
)
ÃÃ& '
{
ÄÄ 
_logger
ÆÆ 
.
ÆÆ 
LogError
ÆÆ  
(
ÆÆ  !
$"
ÆÆ! #
$str
ÆÆ# E
{
ÆÆE F
	exception
ÆÆF O
.
ÆÆO P
Message
ÆÆP W
}
ÆÆW X
"
ÆÆX Y
)
ÆÆY Z
;
ÆÆZ [
_logger
ÇÇ 
.
ÇÇ 
LogInformation
ÇÇ &
(
ÇÇ& '
$"
ÇÇ' )
$str
ÇÇ) K
{
ÇÇK L
	exception
ÇÇL U
.
ÇÇU V

StackTrace
ÇÇV `
}
ÇÇ` a
"
ÇÇa b
)
ÇÇb c
;
ÇÇc d
return
ÈÈ 
false
ÈÈ 
;
ÈÈ 
}
ÉÉ 
}
ËË 	
public
ÌÌ 
List
ÌÌ 
<
ÌÌ 
Profile
ÌÌ 
>
ÌÌ 
GetallProfiles
ÌÌ +
(
ÌÌ+ ,
)
ÌÌ, -
{
ÍÍ 	
try
ÏÏ 
{
ÐÐ 
var
ÒÒ 
result
ÒÒ 
=
ÒÒ 
_context
ÒÒ %
.
ÒÒ% &
profile
ÒÒ& -
!
ÒÒ- .
.
ÒÒ. /
Include
ÒÒ/ 6
(
ÒÒ6 7
$str
ÒÒ7 H
)
ÒÒH I
.
ÒÒI J
Include
ÒÒJ Q
(
ÒÒQ R
$str
ÒÒR ]
)
ÒÒ] ^
.
ÒÒ^ _
Include
ÒÒ_ f
(
ÒÒf g
$str
ÒÒg q
)
ÒÒq r
.
ÒÒr s
Include
ÒÒs z
(
ÒÒz {
$strÒÒ{ 
)ÒÒ 
.ÒÒ 
IncludeÒÒ 
(ÒÒ 
$strÒÒ 
)ÒÒ 
.ÒÒ 
IncludeÒÒ ¤
(ÒÒ¤ ¥
eÒÒ¥ ¦
=>ÒÒ§ ©
eÒÒª «
.ÒÒ« ¬
profilestatusÒÒ¬ ¹
)ÒÒ¹ º
.ÒÒº »
ToListÒÒ» Á
(ÒÒÁ Â
)ÒÒÂ Ã
;ÒÒÃ Ä
return
ÓÓ 
result
ÓÓ 
;
ÓÓ 
}
ÔÔ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
	exception
ÖÖ &
)
ÖÖ& '
{
×× 
_logger
ÙÙ 
.
ÙÙ 
LogError
ÙÙ  
(
ÙÙ  !
$"
ÙÙ! #
$str
ÙÙ# B
{
ÙÙB C
	exception
ÙÙC L
.
ÙÙL M
Message
ÙÙM T
}
ÙÙT U
"
ÙÙU V
)
ÙÙV W
;
ÙÙW X
_logger
ÚÚ 
.
ÚÚ 
LogInformation
ÚÚ &
(
ÚÚ& '
$"
ÚÚ' )
$str
ÚÚ) H
{
ÚÚH I
	exception
ÚÚI R
.
ÚÚR S

StackTrace
ÚÚS ]
}
ÚÚ] ^
"
ÚÚ^ _
)
ÚÚ_ `
;
ÚÚ` a
throw
ÛÛ 
;
ÛÛ 
}
ÜÜ 
}
ÝÝ 	
public
ÞÞ 
ProfileStatus
ÞÞ )
GetProfileStatusByProfileId
ÞÞ 8
(
ÞÞ8 9
int
ÞÞ9 <
	Profileid
ÞÞ= F
)
ÞÞF G
{
ßß 	
if
àà 
(
àà 
	Profileid
àà 
<=
àà 
$num
àà 
)
àà 
throw
ââ 
new
ââ !
ValidationException
ââ -
(
ââ- .
$str
ââ. Q
)
ââQ R
;
ââR S
try
ãã 
{
ää 
return
ææ 
_context
ææ 
.
ææ  
profile
ææ  '
!
ææ' (
.
ææ( )
Where
ææ) .
(
ææ. /
x
ææ/ 0
=>
ææ1 3
x
ææ4 5
.
ææ5 6
	ProfileId
ææ6 ?
==
ææ@ B
	Profileid
ææC L
)
ææL M
.
ææM N
Include
ææN U
(
ææU V
p
ææV W
=>
ææX Z
p
ææ[ \
.
ææ\ ]
profilestatus
ææ] j
)
ææj k
.
ææk l
Select
ææl r
(
æær s
p
ææs t
=>
ææu w
p
ææx y
.
ææy z
profilestatusææz 
)ææ 
.ææ 
Firstææ 
(ææ 
)ææ 
!ææ 
;ææ 
}
çç 
catch
èè 
{
éé 
System
êê 
.
êê 
Console
êê 
.
êê 
	WriteLine
êê (
(
êê( )
$str
êê) 0
)
êê0 1
;
êê1 2
throw
ëë 
;
ëë 
}
ìì 
}
îî 	
public
ïï 
Profile
ïï 
GetProfileById
ïï %
(
ïï% &
int
ïï& )
	ProfileId
ïï* 3
)
ïï3 4
{
ðð 	
if
ññ 
(
ññ 
	ProfileId
ññ 
<=
ññ 
$num
ññ 
)
ññ 
throw
óó 
new
óó 
ArgumentException
óó +
(
óó+ ,
$str
óó, O
,
óóO P
nameof
óóP V
(
óóV W
	ProfileId
óóW `
)
óó` a
)
óóa b
;
óób c
try
õõ 
{
öö 
Profile
øø 
profile
øø 
=
øø  !
GetallProfiles
øø" 0
(
øø0 1
)
øø1 2
.
øø2 3
First
øø3 8
(
øø8 9
x
øø9 :
=>
øø; =
x
øø> ?
.
øø? @
	ProfileId
øø@ I
==
øøJ L
	ProfileId
øøM V
&&
øøW Y
x
øøZ [
.
øø[ \
IsActive
øø\ d
)
øød e
;
øøe f
if
ùù 
(
ùù 
profile
ùù 
==
ùù 
null
ùù #
)
ùù# $
throw
ùù% *
new
ùù+ .#
ArgumentNullException
ùù/ D
(
ùùD E
$"
ùùE G
$str
ùùG T
{
ùùT U
	ProfileId
ùùU ^
}
ùù^ _
"
ùù_ `
)
ùù` a
;
ùùa b
return
úú 
profile
úú 
;
úú 
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
	exception
üü &
)
üü& '
{
ýý 
_logger
þþ 
.
þþ 
LogError
þþ  
(
þþ  !
$"
þþ! #
$str
þþ# C
{
þþC D
	exception
þþD M
.
þþM N
Message
þþN U
}
þþU V
"
þþV W
)
þþW X
;
þþX Y
_logger
ÿÿ 
.
ÿÿ 
LogInformation
ÿÿ &
(
ÿÿ& '
$"
ÿÿ' )
$str
ÿÿ) G
{
ÿÿG H
	exception
ÿÿH Q
.
ÿÿQ R

StackTrace
ÿÿR \
}
ÿÿ\ ]
"
ÿÿ] ^
)
ÿÿ^ _
;
ÿÿ_ `
throw
 
;
 
}
 
}
 	
public
 
Profile
 "
GetProfileIdByUserId
 +
(
+ ,
int
, /
Userid
0 6
)
6 7
{
 	
if
 
(
 
Userid
 
<=
 
$num
 
)
 
throw
 
new
 
ArgumentException
 +
(
+ ,
$str
, L
,
L M
nameof
M S
(
S T
Userid
T Z
)
Z [
)
[ \
;
\ ]
try
 
{
 
Profile
 
profile
 
=
  !
GetallProfiles
" 0
(
0 1
)
1 2
.
2 3
Where
3 8
(
8 9
x
9 :
=>
; =
x
> ?
.
? @
UserId
@ F
==
G I
Userid
J P
)
P Q
!
Q R
.
R S
FirstOrDefault
S a
(
a b
)
b c
!
c d
;
d e
if
 
(
 
profile
 
==
 
null
 #
)
# $
return
 
new
 
Profile
 &
(
& '
)
' (
;
( )
return
 
profile
 
;
 
}
 
catch
 
(
 
	Exception
 
)
 
{
 
System
 
.
 
Console
 
.
 
	WriteLine
 (
(
( )
$str
) 0
)
0 1
;
1 2
throw
 
;
 
}
 
}
 	
public
 
List
 
<
 
User
 
>
 
GetFilterdProfile
 +
(
+ ,
string
, 2
userName
3 ;
,
; <
int
= @
designationId
A N
,
N O
int
P S
domainID
T \
,
\ ]
int
^ a
technologyId
b n
,
n o
int
p s
	collegeId
t }
,
} ~
int 
profileStatusId 
, 
int 
maxExperience ¥
,¥ ¦
int§ ª
minExperience« ¸
,¸ ¹
int¹ ¼"
currentdesignation½ Ï
)Ï Ð
{
 	
try
 
{
 
return
 
_context
 
.
  
users
  %
!
% &
.
 
Include
 
(
 
e
 
=>
  
e
! "
.
" #
designation
# .
)
. /
.
 
Include
 
(
 
e
 
=>
  
e
! "
.
" #
profile
# *
)
* +
.
 
Include
 
(
 
e
 
=>
  
e
! "
.
" #
profile
# *
!
* +
.
+ ,
personalDetails
, ;
)
; <
.
 
Include
 
(
 
e
 
=>
  
e
! "
.
" #
profile
# *
!
* +
.
+ ,
profilestatus
, 9
)
9 :
.
 
Where
 
(
 
user
 
=>
 !
user
" &
.
& '
profile
' .
!=
/ 1
null
2 6
&&
7 9
user
: >
.
> ?
personalDetails
? N
!=
O Q
null
R V
)
V W
.
   
WhereIf
   
(
   
String
   "
.
  " #
IsNullOrEmpty
  # 0
(
  0 1
userName
  1 9
)
  9 :
,
  : ;
users
  < A
=>
  B D
users
  E J
.
  J K
UserName
  K S
!
  S T
.
  T U
Contains
  U ]
(
  ] ^
userName
  ^ f
)
  f g
)
  g h
.
¡¡ 
WhereIf
¡¡ 
(
¡¡ 
designationId
¡¡ )
!=
¡¡* ,
$num
¡¡- .
,
¡¡. /
users
¡¡/ 4
=>
¡¡5 7
users
¡¡8 =
.
¡¡= >
DesignationId
¡¡> K
>
¡¡L M 
currentdesignation
¡¡N `
&&
¡¡a c
users
¡¡d i
.
¡¡i j
DesignationId
¡¡j w
==
¡¡x z
designationId¡¡{ 
)¡¡ 
.
¢¢ 
WhereIf
¢¢ 
(
¢¢ 
domainID
¢¢ $
!=
¢¢% '
$num
¢¢( )
,
¢¢) *
users
¢¢+ 0
=>
¢¢1 3
users
¢¢4 9
.
¢¢9 :
DesignationId
¢¢: G
>
¢¢H I 
currentdesignation
¢¢J \
&&
¢¢] _
users
¢¢` e
.
¢¢e f
profile
¢¢f m
!
¢¢m n
.
¢¢n o
skills
¢¢o u
!
¢¢u v
.
¢¢v w
Any
¢¢w z
(
¢¢z {
s
¢¢{ |
=>
¢¢} 
s¢¢ 
.¢¢ 
DomainId¢¢ 
==¢¢ 
domainID¢¢ 
)¢¢ 
)¢¢ 
.
££ 
WhereIf
££ 
(
££ 
technologyId
££ (
!=
££) +
$num
££, -
,
££- .
users
££/ 4
=>
££5 7
users
££8 =
.
££= >
DesignationId
££> K
>
££L M 
currentdesignation
££N `
&&
££a c
users
££d i
.
££i j
profile
££j q
!
££q r
.
££r s
skills
££s y
!
££y z
.
££z {
Any
££{ ~
(
££~ 
s££ 
=>££ 
s££ 
.££ 
TechnologyId££ 
==££ 
technologyId££ ¢
)££¢ £
)£££ ¤
.
¤¤ 
WhereIf
¤¤ 
(
¤¤ 
	collegeId
¤¤ %
!=
¤¤& (
$num
¤¤) *
,
¤¤* +
users
¤¤, 1
=>
¤¤2 4
users
¤¤5 :
.
¤¤: ;
DesignationId
¤¤; H
>
¤¤I J 
currentdesignation
¤¤K ]
&&
¤¤^ `
users
¤¤a f
.
¤¤f g
profile
¤¤g n
!
¤¤n o
.
¤¤o p
	education
¤¤p y
!
¤¤y z
.
¤¤z {
Any
¤¤{ ~
(
¤¤~ 
s¤¤ 
=>¤¤ 
s¤¤ 
.¤¤ 
	CollegeId¤¤ 
==¤¤ 
	collegeId¤¤ 
)¤¤ 
)¤¤ 
.
¥¥ 
WhereIf
¥¥ 
(
¥¥ 
profileStatusId
¥¥ +
!=
¥¥, .
$num
¥¥/ 0
,
¥¥0 1
users
¥¥2 7
=>
¥¥8 :
users
¥¥; @
.
¥¥@ A
DesignationId
¥¥A N
>
¥¥O P 
currentdesignation
¥¥Q c
&&
¥¥d f
users
¥¥g l
.
¥¥l m
profile
¥¥m t
!
¥¥t u
.
¥¥u v
ProfileStatusId¥¥v 
==¥¥ 
profileStatusId¥¥ 
)¥¥ 
.
¦¦ 
ToList
¦¦ 
(
¦¦ 
)
¦¦ 
;
¦¦ 
}
§§ 
catch
©© 
(
©© 
	Exception
©© 
	exception
©© &
)
©©& '
{
ªª 
_logger
«« 
.
«« 
LogError
««  
(
««  !
$"
««! #
$str
««# F
{
««F G
	exception
««G P
.
««P Q
Message
««Q X
}
««X Y
"
««Y Z
)
««Z [
;
««[ \
throw
¬¬ 
;
¬¬ 
}
­­ 
}
®® 	
public
¯¯ 
bool
¯¯ #
AcceptOrRejectProfile
¯¯ )
(
¯¯) *
int
¯¯* -
	profileId
¯¯. 7
,
¯¯7 8
int
¯¯9 <
response
¯¯= E
)
¯¯E F
{
°° 	
if
±± 
(
±± 
	profileId
±± 
<=
±± 
$num
±± 
)
±± 
throw
²² 
new
²² !
ValidationException
²² -
(
²²- .
$str
²². S
)
²²S T
;
²²T U
try
´´ 
{
µµ 
Profile
¶¶ 
status
¶¶ 
=
¶¶  
_context
¶¶! )
.
¶¶) *
profile
¶¶* 1
!
¶¶1 2
.
¶¶2 3
Find
¶¶3 7
(
¶¶7 8
	profileId
¶¶8 A
)
¶¶A B
!
¶¶B C
;
¶¶C D
if
·· 
(
·· 
response
·· 
==
·· 
$num
··  !
)
··! "
throw
¸¸ 
new
¸¸ !
ValidationException
¸¸ 1
(
¸¸1 2
$str
¸¸2 Y
)
¸¸Y Z
;
¸¸Z [
else
¹¹ 
if
¹¹ 
(
¹¹ 
status
¹¹ 
.
¹¹  
ProfileStatusId
¹¹  /
.
¹¹/ 0
Equals
¹¹0 6
(
¹¹6 7
$num
¹¹7 8
)
¹¹8 9
||
¹¹: <
status
¹¹= C
.
¹¹C D
ProfileStatusId
¹¹D S
.
¹¹S T
Equals
¹¹T Z
(
¹¹Z [
$num
¹¹[ \
)
¹¹\ ]
)
¹¹] ^
throw
ºº 
new
ºº !
ValidationException
ºº 1
(
ºº1 2
$str
ºº2 R
)
ººR S
;
ººS T
status
»» 
.
»» 
ProfileStatusId
»» &
=
»»' (
response
»») 1
;
»»1 2
_context
¼¼ 
.
¼¼ 
SaveChanges
¼¼ $
(
¼¼$ %
)
¼¼% &
;
¼¼& '
return
½½ 
true
½½ 
;
½½ 
}
¾¾ 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
	exception
¿¿ &
)
¿¿& '
{
ÀÀ 
_logger
ÁÁ 
.
ÁÁ 
LogError
ÁÁ  
(
ÁÁ  !
$"
ÁÁ! #
$str
ÁÁ# J
{
ÁÁJ K
	exception
ÁÁK T
.
ÁÁT U
Message
ÁÁU \
}
ÁÁ\ ]
"
ÁÁ] ^
)
ÁÁ^ _
;
ÁÁ_ `
_logger
ÂÂ 
.
ÂÂ 
LogInformation
ÂÂ &
(
ÂÂ& '
$"
ÂÂ' )
$str
ÂÂ) P
{
ÂÂP Q
	exception
ÂÂQ Z
.
ÂÂZ [

StackTrace
ÂÂ[ e
}
ÂÂe f
"
ÂÂf g
)
ÂÂg h
;
ÂÂh i
throw
ÃÃ 
;
ÃÃ 
}
ÄÄ 
}
ÆÆ 	
public
ÇÇ 
Profile
ÇÇ 

GetProfile
ÇÇ !
(
ÇÇ! "
int
ÇÇ" %
	ProfileId
ÇÇ& /
)
ÇÇ/ 0
{
ÈÈ 	
if
ÊÊ 
(
ÊÊ 
	ProfileId
ÊÊ 
<=
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
throw
ÌÌ 
new
ÌÌ 
ArgumentException
ÌÌ +
(
ÌÌ+ ,
$str
ÌÌ, O
,
ÌÌO P
nameof
ÌÌP V
(
ÌÌV W
	ProfileId
ÌÌW `
)
ÌÌ` a
)
ÌÌa b
;
ÌÌb c
try
ÎÎ 
{
ÏÏ 
return
ÐÐ 
_context
ÐÐ 
.
ÐÐ  
profile
ÐÐ  '
!
ÐÐ' (
.
ÐÐ( )
Find
ÐÐ) -
(
ÐÐ- .
	ProfileId
ÐÐ. 7
)
ÐÐ7 8
!
ÐÐ8 9
;
ÐÐ9 :
}
ÑÑ 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
	exception
ÒÒ &
)
ÒÒ& '
{
ÓÓ 
_logger
ÔÔ 
.
ÔÔ 
LogError
ÔÔ  
(
ÔÔ  !
$"
ÔÔ! #
$str
ÔÔ# C
{
ÔÔC D
	exception
ÔÔD M
.
ÔÔM N
Message
ÔÔN U
}
ÔÔU V
"
ÔÔV W
)
ÔÔW X
;
ÔÔX Y
_logger
ÕÕ 
.
ÕÕ 
LogInformation
ÕÕ &
(
ÕÕ& '
$"
ÕÕ' )
$str
ÕÕ) G
{
ÕÕG H
	exception
ÕÕH Q
.
ÕÕQ R

StackTrace
ÕÕR \
}
ÕÕ\ ]
"
ÕÕ] ^
)
ÕÕ^ _
;
ÕÕ_ `
throw
ÖÖ 
;
ÖÖ 
}
×× 
}
ØØ 	
public
ÙÙ 
bool
ÙÙ !
updateProfileStatus
ÙÙ '
(
ÙÙ' (
Profile
ÙÙ( /
profile
ÙÙ0 7
)
ÙÙ7 8
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
profile
ÛÛ 
==
ÛÛ 
null
ÛÛ 
||
ÛÛ  "
profile
ÛÛ# *
.
ÛÛ* +
	ProfileId
ÛÛ+ 4
<=
ÛÛ5 7
$num
ÛÛ8 9
||
ÛÛ: <
profile
ÛÛ= D
.
ÛÛD E
UserId
ÛÛE K
<=
ÛÛL N
$num
ÛÛO P
)
ÛÛP Q
throw
ÜÜ 
new
ÜÜ !
ValidationException
ÜÜ -
(
ÜÜ- .
$str
ÜÜ. I
)
ÜÜI J
;
ÜÜJ K
if
ÞÞ 
(
ÞÞ 
!
ÞÞ 
_context
ÞÞ 
.
ÞÞ 
profile
ÞÞ !
!
ÞÞ! "
.
ÞÞ" #
Any
ÞÞ# &
(
ÞÞ& '
e
ÞÞ' (
=>
ÞÞ) +
e
ÞÞ, -
.
ÞÞ- .
	ProfileId
ÞÞ. 7
.
ÞÞ7 8
Equals
ÞÞ8 >
(
ÞÞ> ?
profile
ÞÞ? F
.
ÞÞF G
	ProfileId
ÞÞG P
)
ÞÞP Q
)
ÞÞQ R
)
ÞÞR S
throw
ßß 
new
ßß !
ValidationException
ßß -
(
ßß- .
$str
ßß. F
)
ßßF G
;
ßßG H
try
àà 
{
áá 
_context
ââ 
.
ââ 
profile
ââ  
!
ââ  !
.
ââ! "
Update
ââ" (
(
ââ( )
profile
ââ) 0
)
ââ0 1
;
ââ1 2
_context
ãã 
.
ãã 
SaveChanges
ãã $
(
ãã$ %
)
ãã% &
;
ãã& '
return
ää 
true
ää 
;
ää 
}
åå 
catch
ææ 
(
ææ 
	Exception
ææ 
	exception
ææ &
)
ææ& '
{
çç 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
$"
èè! #
$str
èè# J
{
èèJ K
	exception
èèK T
.
èèT U
Message
èèU \
}
èè\ ]
"
èè] ^
)
èè^ _
;
èè_ `
_logger
éé 
.
éé 
LogInformation
éé &
(
éé& '
$"
éé' )
$str
éé) P
{
ééP Q
	exception
ééQ Z
.
ééZ [

StackTrace
éé[ e
}
éée f
"
ééf g
)
éég h
;
ééh i
throw
êê 
;
êê 
}
ëë 
}
ìì 	
}
îî 
}ññ 
sC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\ProfileStatusAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class (
ProfileStatusDataAccessLayer -
:- .)
IProfileStatusDataAccessLayer. K
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  (
ProfileStatusDataAccessLayer  <
>< =
_logger> E
=F G
defaultH O
!O P
;P Q
public

	 
List

 
<

 
ProfileStatus

 "
>

" #
GetProfileStatuss

$ 5
(

5 6
)

6 7
{ 	
try 
{ 
return 
_db 
. 
ProfileStatuss )
!) *
.* +
ToList+ 1
(1 2
)2 3
;3 4
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}!! 
}"" 	
}&& 
}'' ý
tC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\TechnologyDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class %
TechnologyDataAccessLayer *
:* +&
ITechnologyDataAccessLayer+ E
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  %
TechnologyDataAccessLayer  9
>9 :
_logger; B
=C D
defaultE L
!L M
;M N
public			 
List		 
<		 

Technology		 
>		  
GetTechnologies		! 0
(		0 1
)		1 2
{

 	
try 
{ 
return 
_db 
. 
Technologies '
!' (
.( )
ToList) /
(/ 0
)0 1
;1 2
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}   
}!! 	
}%% 
}&& ßÔ
cC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\DataAccessLayer\UserData.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
	IUserData 
{		 
bool

 
AddUser

 
(

 
User

 
item

 
)

 
;

  
bool 
Disable 
( 
int 
id 
) 
; 
List 
< 
User 
> 
GetallUsers 
( 
)  
;  !
User 
GetUser 
( 
int 
id 
) 
; 
bool 
save 
( 
) 
; 
bool 

UpdateUser 
( 
User 
item !
)! "
;" #
User 
LoginCrendentials 
( 
string %
UserName& .
,. /
string/ 5
Password6 >
)> ?
;? @
bool 
EditPassword 
( 
string  
OldPassword! ,
,, -
string- 3
NewPassword4 ?
,? @
string@ F
ConfirmPasswordG V
,V W
intW Z
currentUser[ f
)f g
;g h
} 
public 

class 
UserData 
: 
	IUserData %
{ 
private 
readonly 
Context  
_context! )
;) *
private 
readonly 
ILogger  
<  !
UserServices! -
>- .
_logger/ 6
;6 7
public 
UserData 
( 
Context 
context  '
,' (
ILogger) 0
<0 1
UserServices1 =
>= >
logger? E
)E F
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
private	 
readonly 
UserValidation (
_validation) 4
=4 5
UserDataFactory5 D
.D E
GetValidationObjectE X
(X Y
)Y Z
;Z [
public   
List   
<   
User   
>   
GetallForCard   '
(  ' (
int  ( +
profileStatusId  , ;
,  ; <
int  < ?
designationId  @ M
)  M N
{!! 	
try"" 
{## 
return$$ 
_context$$ 
.$$  
users$$  %
!$$% &
.$$& '
Include$$' .
($$. /
user$$/ 3
=>$$3 5
user$$5 9
.$$9 :
designation$$: E
)$$E F
.$$F G
Include$$G N
($$N O
user$$O S
=>$$S U
user$$U Y
.$$Y Z
profile$$Z a
)$$a b
.$$b c
Include$$c j
($$j k
user$$k o
=>$$o q
user$$q u
.$$u v
profile$$v }
!$$} ~
.$$~ 
profilestatus	$$ 
)
$$ 
.
$$ 
Include
$$ 
(
$$ 
user
$$ 
=>
$$ 
user
$$  
.
$$  ¡
personalDetails
$$¡ °
)
$$° ±
.
$$± ²
Where
$$² ·
(
$$· ¸
user
$$¸ ¼
=>
$$¼ ¾
user
$$¾ Â
.
$$Â Ã
profile
$$Ã Ê
!=
$$Ê Ì
null
$$Ì Ð
)
$$Ð Ñ
.
$$Ñ Ò
WhereIf
$$Ò Ù
(
$$Ù Ú
profileStatusId
$$Ú é
!=
$$é ë
$num
$$ë ì
,
$$ì í
user
$$í ñ
=>
$$ñ ó
user
$$ó ÷
.
$$÷ ø
profile
$$ø ÿ
!
$$ÿ 
.
$$ 
ProfileStatusId
$$ 
==
$$ 
profileStatusId
$$ ¡
)
$$¡ ¢
.
$$¢ £
WhereIf
$$£ ª
(
$$ª «
designationId
$$« ¸
!=
$$¸ º
$num
$$º »
,
$$» ¼
user
$$¼ À
=>
$$À Â
user
$$Â Æ
.
$$Æ Ç
DesignationId
$$Ç Ô
>
$$Õ Ö
designationId
$$× ä
)
$$ä å
.
$$å æ
ToList
$$æ ì
(
$$ì í
)
$$í î
;
$$î ï
}%% 
catch'' 
('' 
	Exception'' 
	exception'' %
)''% &
{''& '
_logger(( 
.(( 
LogError((  
(((  !
$"((! #
$str((# =
{((= >
	exception((> G
.((G H
Message((H O
}((O P
"((P Q
)((Q R
;((R S
_logger)) 
.)) 
LogInformation)) &
())& '
$"))' )
$str))) D
{))D E
	exception))E N
.))N O

StackTrace))O Y
}))Y Z
"))Z [
)))[ \
;))\ ]
throw** 
;** 
}++ 
},, 	
public-- 
List-- 
<-- 
User-- 
>-- 
GetallUsers-- %
(--% &
)--& '
{.. 	
try// 
{00 
return11 
_context11 
.11  
users11  %
!11% &
.11& '
Include11' .
(11. /
user11/ 3
=>113 5
user115 9
.119 :
gender11: @
)11@ A
.11A B
Include11B I
(11I J
user11J N
=>11N P
user11P T
.11T U
designation11U `
)11` a
.11a b
Include11b i
(11i j
user11j n
=>11n p
user11p t
.11t u
organisation	11u 
)
11 
.
11 
Include
11 
(
11 
user
11 
=>
11 
user
11 
.
11 
countrycode
11 ¡
)
11¡ ¢
.
11¢ £
ToList
11£ ©
(
11© ª
)
11ª «
;
11« ¬
}22 
catch44 
(44 
	Exception44 
	exception44 %
)44% &
{44& '
_logger55 
.55 
LogError55  
(55  !
$"55! #
$str55# =
{55= >
	exception55> G
.55G H
Message55H O
}55O P
"55P Q
)55Q R
;55R S
_logger66 
.66 
LogInformation66 &
(66& '
$"66' )
$str66) D
{66D E
	exception66E N
.66N O

StackTrace66O Y
}66Y Z
"66Z [
)66[ \
;66\ ]
throw77 
;77 
}88 
}99 	
public:: 
User:: 
GetUser:: 
(:: 
int:: 
id::  "
)::" #
{;; 	
if<< 
(<< 
id<< 
<=<< 
$num<< 
)<< 
throw>> 
new>> 
ValidationException>> -
(>>- .
$str>>. N
)>>N O
;>>O P
try@@ 
{@@ 
UserAA 
userAA 
=AA 
GetallUsersAA &
(AA& '
)AA' (
.AA( )
FirstAA) .
(AA. /
xAA/ 0
=>AA0 2
xAA2 3
.AA3 4
UserIdAA4 :
==AA: <
idAA< >
)AA> ?
;AA? @
ifBB 
(BB 
userBB 
==BB 
nullBB 
)BB 
throwBB #
newBB$ '!
ArgumentNullExceptionBB( =
(BB= >
$"BB> @
$strBB@ M
{BBM N
idBBN P
}BBP Q
"BBQ R
)BBR S
;BBS T
returnCC 
userCC 
;CC 
}DD 
catchEE 
(EE 
	ExceptionEE 
	exceptionEE %
)EE% &
{EE& '
_loggerFF 
.FF 
LogErrorFF  
(FF  !
$"FF! #
$strFF# 9
{FF9 :
	exceptionFF: C
.FFC D
MessageFFD K
}FFK L
"FFL M
)FFM N
;FFN O
_loggerGG 
.GG 
LogInformationGG &
(GG& '
$"GG' )
$strGG) ?
{GG? @
	exceptionGG@ I
.GGI J

StackTraceGGJ T
}GGT U
"GGU V
)GGV W
;GGW X
throwHH 
;HH 
}II 
}JJ 	
publicMM 
boolMM 
AddUserMM 
(MM 
UserMM  
itemMM! %
)MM% &
{NN 	
ifOO 
(OO 
itemOO 
==OO 
nullOO 
)OO 
throwPP 
newPP 
ArgumentExceptionPP +
(PP+ ,
$strPP, P
,PPP Q
nameofPPQ W
(PPW X
itemPPX \
)PP\ ]
)PP] ^
;PP^ _
_validationQQ 
.QQ 
userValidateQQ $
(QQ$ %
itemQQ% )
)QQ) *
;QQ* +
ifRR 
(RR 
stringRR 
.RR 
IsNullOrEmptyRR #
(RR# $
itemRR$ (
.RR( )
UserNameRR) 1
)RR1 2
)RR2 3
throwSS 
newSS 
ValidationExceptionSS -
(SS- .
$"SS. 0
$strSS0 c
{SSc d
itemSSd h
.SSh i
UserNameSSi q
}SSq r
"SSr s
)SSs t
;SSt u
tryTT 
{TT 
itemVV 
.VV 
PasswordVV 
=VV 
HashPasswordVV *
.VV* +
Sha256VV+ 1
(VV1 2
itemVV2 6
.VV6 7
PasswordVV7 ?
!VV? @
)VV@ A
;VVA B
_contextWW 
.WW 
usersWW 
!WW 
.WW 
AddWW 
(WW  
itemWW  $
)WW$ %
;WW% &
_contextXX 
.XX 
SaveChangesXX  
(XX  !
)XX! "
;XX" #
returnYY 
trueYY 
;YY 
}ZZ 
catch\\ 
(\\ 
	Exception\\ 
	exception\\ %
)\\% &
{\\& '
_logger^^ 
.^^ 
LogError^^ !
(^^! "
$"^^" $
$str^^$ :
{^^: ;
	exception^^; D
.^^D E
Message^^E L
}^^L M
"^^M N
)^^N O
;^^O P
_logger__ 
.__ 
LogInformation__ '
(__' (
$"__( *
$str__* @
{__@ A
	exception__A J
.__J K

StackTrace__K U
}__U V
"__V W
)__W X
;__X Y
return`` 
false`` 
;`` 
}aa 
}ee 	
publicgg 
boolgg 
Disablegg 
(gg 
intgg 
idgg  "
)gg" #
{hh 	
ifii 
(ii 
idii 
<=ii 
$numii 
)ii 
throwkk 
newkk 
ValidationExceptionkk -
(kk- .
$strkk. N
)kkN O
;kkO P
trymm 
{mm 
varnn 
usernn 
=nn 
_contextnn #
.nn# $
usersnn$ )
!nn) *
.nn* +
Findnn+ /
(nn/ 0
idnn0 2
)nn2 3
;nn3 4
ifqq 
(qq 
userqq 
==qq 
nullqq 
)qq 
throwqq 
newqq  #!
ArgumentNullExceptionqq$ 9
(qq9 :
$"qq: <
$strqq< M
{qqM N
idqqN P
}qqP Q
"qqQ R
)qqR S
;qqS T
userrr 
.rr 
IsActiverr 
=rr 
falserr #
;rr# $
_contextss 
.ss 
usersss 
.ss 
Updatess %
(ss% &
userss& *
)ss* +
;ss+ ,
_contexttt 
.tt 
SaveChangestt $
(tt$ %
)tt% &
;tt& '
returnuu 
trueuu 
;uu 
}ww 
catchzz 
(zz 
	Exceptionzz 
	exceptionzz %
)zz% &
{zz& '
_logger|| 
.|| 
LogError||  
(||  !
$"||! #
$str||# 9
{||9 :
	exception||: C
.||C D
Message||D K
}||K L
"||L M
)||M N
;||N O
_logger}} 
.}} 
LogInformation}} &
(}}& '
$"}}' )
$str}}) ?
{}}? @
	exception}}@ I
.}}I J

StackTrace}}J T
}}}T U
"}}U V
)}}V W
;}}W X
return~~ 
false~~ 
;~~ 
} 
}
 	
public
 
bool
 

UpdateUser
 
(
 
User
 #
item
$ (
)
( )
{
 	
if
 
(
 
item
 
==
 
null
 
)
 
throw
 
new
 !
ValidationException
 .
(
. /
$str
/ S
)
S T
;
T U
_validation
 
.
 
userValidate
 $
(
$ %
item
% )
)
) *
;
* +
try
 
{
 
var
 
user
 
=
 
_context
 #
.
# $
users
$ )
!
) *
.
* +
Find
+ /
(
/ 0
item
0 4
.
4 5
UserId
5 ;
)
; <
;
< =
if
 
(
 
user
 
==
 
null
 
)
 
throw
 #
new
$ '#
ArgumentNullException
( =
(
= >
$"
> @
$str
@ Q
{
Q R
item
R V
.
V W
UserId
W ]
}
] ^
"
^ _
)
_ `
;
` a
user
 
.
 
UserId
 
=
 
item
  
.
  !
UserId
! '
;
' (
user
 
.
 
Name
 
=
 
item
 
.
 
Name
 #
;
# $
user
 
.
 
Email
 
=
 
item
 
.
  
Email
  %
;
% &
user
 
.
 
UserName
 
=
 
item
 "
.
" #
UserName
# +
;
+ ,
user
 
.
 
Password
 
=
 
item
 "
.
" #
Password
# +
;
+ ,
user
 
.
 
GenderId
 
=
 
item
 "
.
" #
GenderId
# +
;
+ ,
user
 
.
 
CountryCodeId
 "
=
" #
item
# '
.
' (
CountryCodeId
( 5
;
5 6
user
 
.
 
MobileNumber
 !
=
! "
item
" &
.
& '
MobileNumber
' 3
;
3 4
user
 
.
 
OrganisationId
 #
=
# $
item
$ (
.
( )
OrganisationId
) 7
;
7 8
user
 
.
 
DesignationId
 "
=
" #
item
# '
.
' (
DesignationId
( 5
;
5 6
user
 
.
 %
ReportingPersonUsername
 ,
=
, -
item
- 1
.
1 2%
ReportingPersonUsername
2 I
;
I J
user
 
.
 
IsActive
 
=
 
true
 "
;
" #
user
 
.
 
	CreatedBy
 
=
 
item
 #
.
# $
	CreatedBy
$ -
;
- .
_context
 
.
 
users
 
.
 
Update
 !
(
! "
user
" &
)
& '
;
' (
_context
 
.
 
SaveChanges
  
(
  !
)
! "
;
" #
return
 
true
 
;
 
}
   
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
	exception
¡¡ %
)
¡¡% &
{
¡¡& '
_logger
££ 
.
££ 
LogError
££  
(
££  !
$"
££! #
$str
££# ;
{
££; <
	exception
££< E
.
££E F
Message
££F M
}
££M N
"
££N O
)
££O P
;
££P Q
_logger
¤¤ 
.
¤¤ 
LogInformation
¤¤ &
(
¤¤& '
$"
¤¤' )
$str
¤¤) B
{
¤¤B C
	exception
¤¤C L
.
¤¤L M

StackTrace
¤¤M W
}
¤¤W X
"
¤¤X Y
)
¤¤Y Z
;
¤¤Z [
return
¥¥ 
false
¥¥ 
;
¥¥ 
}
¦¦ 
}
ªª 	
public
«« 
bool
«« 
save
«« 
(
«« 
)
«« 
{
¬¬ 	
return
­­ 
_context
­­ 
.
­­ 
SaveChanges
­­ '
(
­­' (
)
­­( )
>=
­­* ,
$num
­­- .
;
­­. /
}
®® 	
public
¯¯ 
User
¯¯ 
LoginCrendentials
¯¯ %
(
¯¯% &
string
¯¯& ,
UserName
¯¯- 5
,
¯¯5 6
string
¯¯7 =
Password
¯¯> F
)
¯¯F G
{
°° 	
try
±± 
{
²² 
if
³³ 
(
³³ 
!
³³ 
_context
³³ 
.
³³ 
users
³³ "
!
³³" #
.
³³# $
Any
³³$ '
(
³³' (
x
³³( )
=>
³³* ,
x
³³- .
.
³³. /
UserName
³³/ 7
==
³³8 :
UserName
³³; C
)
³³C D
)
³³D E
throw
´´ 
new
´´ !
ValidationException
´´ 1
(
´´1 2
$"
´´2 4
$str
´´4 D
{
´´D E
UserName
´´E M
}
´´M N
"
´´N O
)
´´O P
;
´´P Q
if
¶¶ 
(
¶¶ 
!
¶¶ 
_context
¶¶ 
.
¶¶ 
users
¶¶ "
!
¶¶" #
.
¶¶# $
Any
¶¶$ '
(
¶¶' (
x
¶¶( )
=>
¶¶* ,
x
¶¶- .
.
¶¶. /
UserName
¶¶/ 7
==
¶¶7 9
UserName
¶¶: B
&&
¶¶C E
x
¶¶F G
.
¶¶G H
Password
¶¶H P
==
¶¶Q S
HashPassword
¶¶T `
.
¶¶` a
Sha256
¶¶a g
(
¶¶g h
Password
¶¶h p
)
¶¶p q
)
¶¶q r
)
¶¶r s
throw
·· 
new
·· !
ValidationException
·· 1
(
··1 2
$"
··2 4
$str
··4 C
"
··C D
)
··D E
;
··E F
var
¹¹ 
user
¹¹ 
=
¹¹ 
GetallUsers
¹¹ &
(
¹¹& '
)
¹¹' (
.
¹¹( )
First
¹¹) .
(
¹¹. /
user
¹¹/ 3
=>
¹¹4 6
user
¹¹7 ;
.
¹¹; <
UserName
¹¹< D
==
¹¹E G
UserName
¹¹H P
)
¹¹P Q
;
¹¹Q R
return
ºº 
user
ºº 
;
ºº 
}
»» 
catch
¼¼ 
(
¼¼ 
	Exception
¼¼ 
	exception
¼¼ &
)
¼¼& '
{
½½ 
_logger
¾¾ 
.
¾¾ 
LogInformation
¾¾ &
(
¾¾& '
$"
¾¾' )
$str
¾¾) w
{
¾¾w x
	exception¾¾x 
.¾¾ 
Message¾¾ 
}¾¾ 
"¾¾ 
)¾¾ 
;¾¾ 
throw
¿¿ 
;
¿¿ 
}
ÀÀ 
}
ÁÁ 	
public
ÂÂ 
bool
ÂÂ 
EditPassword
ÂÂ  
(
ÂÂ  !
string
ÂÂ! '
OldPassword
ÂÂ( 3
,
ÂÂ3 4
string
ÂÂ4 :
NewPassword
ÂÂ; F
,
ÂÂF G
string
ÂÂG M
ConfirmPassword
ÂÂN ]
,
ÂÂ] ^
int
ÂÂ^ a
currentUser
ÂÂb m
)
ÂÂm n
{
ÃÃ 	 
PasswordValidation
ÄÄ 
.
ÄÄ 
IsValidPassword
ÄÄ .
(
ÄÄ. /
NewPassword
ÄÄ/ :
,
ÄÄ: ;
ConfirmPassword
ÄÄ; J
)
ÄÄJ K
;
ÄÄK L
try
ÅÅ 
{
ÆÆ 
var
ÈÈ 
edit
ÈÈ 
=
ÈÈ 
_context
ÈÈ #
.
ÈÈ# $
users
ÈÈ$ )
!
ÈÈ) *
.
ÈÈ* +
Find
ÈÈ+ /
(
ÈÈ/ 0
currentUser
ÈÈ0 ;
)
ÈÈ; <
;
ÈÈ< =
var
ÉÉ 
pass
ÉÉ 
=
ÉÉ 
HashPassword
ÉÉ '
.
ÉÉ' (
Sha256
ÉÉ( .
(
ÉÉ. /
OldPassword
ÉÉ/ :
)
ÉÉ: ;
;
ÉÉ; <
if
ÊÊ 
(
ÊÊ 
edit
ÊÊ 
==
ÊÊ 
null
ÊÊ  
)
ÊÊ  !
throw
ËË 
new
ËË !
ValidationException
ËË 1
(
ËË1 2
$str
ËË2 [
)
ËË[ \
;
ËË\ ]
else
ÌÌ 
if
ÌÌ 
(
ÌÌ 
edit
ÌÌ 
.
ÌÌ 
IsActive
ÌÌ &
)
ÌÌ& '
throw
ÍÍ 
new
ÍÍ !
ValidationException
ÍÍ 1
(
ÍÍ1 2
$str
ÍÍ2 r
)
ÍÍr s
;
ÍÍs t
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
edit
ÎÎ 
.
ÎÎ 
Password
ÎÎ %
!=
ÎÎ% '
pass
ÎÎ( ,
)
ÎÎ, -
throw
ÏÏ 
new
ÏÏ !
ValidationException
ÏÏ 1
(
ÏÏ1 2
$str
ÏÏ2 W
)
ÏÏW X
;
ÏÏX Y
else
ÐÐ 
if
ÐÐ 
(
ÐÐ 
NewPassword
ÐÐ #
==
ÐÐ# %
edit
ÐÐ% )
.
ÐÐ) *
Password
ÐÐ* 2
)
ÐÐ2 3
throw
ÑÑ 
new
ÑÑ !
ValidationException
ÑÑ 1
(
ÑÑ1 2
$str
ÑÑ2 q
)
ÑÑq r
;
ÑÑr s
edit
ÒÒ 
.
ÒÒ 
Password
ÒÒ 
=
ÒÒ 
HashPassword
ÒÒ  ,
.
ÒÒ, -
Sha256
ÒÒ- 3
(
ÒÒ3 4
NewPassword
ÒÒ4 ?
)
ÒÒ? @
;
ÒÒ@ A
_context
ÓÓ 
.
ÓÓ 
users
ÓÓ 
.
ÓÓ 
Update
ÓÓ %
(
ÓÓ% &
edit
ÓÓ& *
)
ÓÓ* +
;
ÓÓ+ ,
_context
ÔÔ 
.
ÔÔ 
SaveChanges
ÔÔ $
(
ÔÔ$ %
)
ÔÔ% &
;
ÔÔ& '
return
ÕÕ 
true
ÕÕ 
;
ÕÕ 
}
×× 
catch
ØØ 
(
ØØ 
DbUpdateException
ØØ $
	exception
ØØ% .
)
ØØ. /
{
ÙÙ 
_logger
ÚÚ 
.
ÚÚ 
LogInformation
ÚÚ &
(
ÚÚ& '
$"
ÚÚ' )
$strÚÚ) 
{ÚÚ 
	exceptionÚÚ 
.ÚÚ 
MessageÚÚ £
}ÚÚ£ ¤
"ÚÚ¤ ¥
)ÚÚ¥ ¦
;ÚÚ¦ §
return
ÛÛ 
false
ÛÛ 
;
ÛÛ 
}
ÜÜ 
catch
ÝÝ 
(
ÝÝ (
OperationCanceledException
ÝÝ -
	exception
ÝÝ. 7
)
ÝÝ7 8
{
ÞÞ 
_logger
ßß 
.
ßß 
LogInformation
ßß &
(
ßß& '
$"
ßß' )
$strßß) 
{ßß 
	exceptionßß 
.ßß 
Messageßß £
}ßß£ ¤
"ßß¤ ¥
)ßß¥ ¦
;ßß¦ §
return
àà 
false
àà 
;
àà 
}
áá 
catch
ãã 
(
ãã 
	Exception
ãã 
	exception
ãã &
)
ãã& '
{
ää 
_logger
åå 
.
åå 
LogInformation
åå &
(
åå& '
$"
åå' )
$stråå) 
{åå 
	exceptionåå 
.åå 
Messageåå £
}åå£ ¤
"åå¤ ¥
)åå¥ ¦
;åå¦ §
return
çç 
false
çç 
;
çç 
}
èè 
}
ëë 	
public
ìì 
List
ìì 
<
ìì 
User
ìì 
>
ìì &
GetAllUsersByDesignation
ìì 2
(
ìì2 3
int
ìì3 6
designationId
ìì7 D
)
ììD E
{
íí 	
try
îî 
{
ïï 
return
ðð 
_context
ðð 
.
ðð  
users
ðð  %
!
ðð% &
.
ðð& '
Include
ðð' .
(
ðð. /
user
ðð/ 3
=>
ðð3 5
user
ðð5 9
.
ðð9 :
designation
ðð: E
)
ððE F
.
ððF G
Include
ððG N
(
ððN O
user
ððO S
=>
ððS U
user
ððU Y
.
ððY Z
profile
ððZ a
)
ðða b
.
ððb c
Include
ððc j
(
ððj k
user
ððk o
=>
ððo q
user
ððq u
.
ððu v
profile
ððv }
!
ðð} ~
.
ðð~ 
profilestatusðð 
)ðð 
.ðð 
Includeðð 
(ðð 
userðð 
=>ðð 
userðð  
.ðð  ¡
personalDetailsðð¡ °
)ðð° ±
.ðð± ²
Whereðð² ·
(ðð· ¸
userðð¸ ¼
=>ðð¼ ¾
userðð¾ Â
.ððÂ Ã
profileððÃ Ê
!=ððÊ Ì
nullððÌ Ð
)ððÐ Ñ
.ððÑ Ò
WhereIfððÒ Ù
(ððÙ Ú
designationIdððÚ ç
!=ððç é
$numððé ê
,ððê ë
userððë ï
=>ððï ñ
userððñ õ
.ððõ ö
DesignationIdððö 
>ðð 
designationIdðð 
)ðð 
.ðð 
ToListðð 
(ðð 
)ðð 
;ðð 
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
	exception
óó %
)
óó% &
{
óó& '
_logger
ôô 
.
ôô 
LogError
ôô  
(
ôô  !
$"
ôô! #
$str
ôô# =
{
ôô= >
	exception
ôô> G
.
ôôG H
Message
ôôH O
}
ôôO P
"
ôôP Q
)
ôôQ R
;
ôôR S
_logger
õõ 
.
õõ 
LogInformation
õõ &
(
õõ& '
$"
õõ' )
$str
õõ) D
{
õõD E
	exception
õõE N
.
õõN O

StackTrace
õõO Y
}
õõY Z
"
õõZ [
)
õõ[ \
;
õõ\ ]
throw
öö 
;
öö 
}
÷÷ 
}
øø 	
}
ùù 
}úú è
eC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\CollegeDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
CollegeDataFactory *
{ 
public 
static #
ICollegeDataAccessLayer -+
GetCollegeDataAccessLayerObject. M
(M N
)N O
{ 	
return 
new "
CollegeDataAccessLayer -
(- .
). /
;/ 0
}		 	
public 
static 
ICollegeServices %#
GetCollegeServiceObject& =
(= >
)> ?
{ 	
return 
new 
CollegeServices "
(" #
)# $
;$ %
} 	
} 
} ¨
gC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\DbContextDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class  
DbContextDataFactory ,
{, -
public 
static 
Context 
GetDbContextObject 0
(0 1
)1 2
{ 	
return 
new 
Context 
( 
)  
;  !
} 	
} 
} 	
iC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\DesignationDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class "
DesignationDataFactory .
{ 
public 
static '
IDesignationDataAccessLayer 1/
#GetDesignationDataAccessLayerObject2 U
(U V
)V W
{ 	
return 
new &
DesignationDataAccessLayer 1
(1 2
)2 3
;3 4
}		 	
public	 
static 
Designation " 
GetDesignationObject# 7
(7 8
)8 9
{ 	
return 
new 
Designation "
(" #
)# $
;$ %
} 	
public 
static  
IDesignationServices )'
GetDesignationServiceObject* E
(E F
)F G
{ 	
return 
new 
DesignationServices &
(& '
)' (
;( )
} 	
} 
} Û
dC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\DomainDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
DomainDataFactory )
{ 
public 
static "
IDomainDataAccessLayer ,*
GetDomainDataAccessLayerObject- K
(K L
)L M
{ 	
return		 
new		 !
DomainDataAccessLayer		 ,
(		, -
)		- .
;		. /
}

 	
public	 
static 
Domain 
GetDomainObject -
(- .
). /
{ 	
return 
new 
Domain 
( 
) 
;  
} 	
public 
static 
IDomainServices $"
GetDomainServiceObject% ;
(; <
)< =
{ 	
return 
new 
DomainServices !
(! "
)" #
;# $
} 	
} 
} ª
bC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\MailDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
MailDataFactory '
{ 
public 
static 
MailRequest ! 
GetMailRequestObject" 6
(6 7
)7 8
{ 	
return 
new 
MailRequest "
(" #
)# $
;$ %
}		 	
}

 
} 	
jC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\OrganisationDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class #
OrganisationDataFactory /
{ 
public 
static (
IOrganisationDataAccessLayer 20
$GetOrganisationDataAccessLayerObject3 W
(W X
)X Y
{ 	
return 
new '
OrganisationDataAccessLayer 2
(2 3
)3 4
;4 5
} 	
public			 
static		 
Organisation		 #!
GetOrganisationObject		$ 9
(		9 :
)		: ;
{

 	
return 
new 
Organisation #
(# $
)$ %
;% &
} 	
public 
static !
IOrganisationServices *(
GetOrganisationServiceObject+ G
(G H
)H I
{ 	
return 
new  
OrganisationServices '
(' (
)( )
;) *
} 	
} 
} 

eC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\ProfileDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
ProfileDataFactory *
{ 
public 
static 
Context 
GetProfileContext /
(/ 0
)0 1
{ 	
return 
new 
Context 
( 
)  
;  !
} 	
public		 
static		 
ProfileData		 !
GetProfileData		" 0
(		0 1
ILogger		1 8
<		8 9
ProfileService		9 G
>		G H
logger		I O
)		O P
{

 	
return 
new 
ProfileData "
(" #
GetProfileContext# 4
(4 5
)5 6
,6 7
logger7 =
)= >
;> ?
} 	
public 
static 
ProfileValidation '%
GetProfileVaidationObject( A
(A B
)B C
{ 	
return 
new 
ProfileValidation (
(( )
)) *
;* +
} 	
} 
} ¤	
gC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\ProfileStatusFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class $
ProfileStatusDataFactory 0
{ 
public 
static )
IProfileStatusDataAccessLayer 31
%GetProfileStatusDataAccessLayerObject4 Y
(Y Z
)Z [
{ 	
return 
new (
ProfileStatusDataAccessLayer 3
(3 4
)4 5
;5 6
}		 	
public	 
static 
ProfileStatus $"
GetProfileStatusObject% ;
(; <
)< =
{ 	
return 
new 
ProfileStatus $
($ %
)% &
;& '
} 	
public 
static "
IProfileStatusServices +)
GetProfileStatusServiceObject, I
(I J
)J K
{ 	
return 
new !
ProfileStatusServices (
(( )
)) *
;* +
} 	
} 
} 	
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\TechnologyDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class !
TechnologyDataFactory -
{ 
public 
static &
ITechnologyDataAccessLayer 0.
"GetTechnologyDataAccessLayerObject1 S
(S T
)T U
{ 	
return 
new %
TechnologyDataAccessLayer 0
(0 1
)1 2
;2 3
} 	
public			 
static		 

Technology		 !
GetTechnologyObject		" 5
(		5 6
)		6 7
{

 	
return 
new 

Technology !
(! "
)" #
;# $
} 	
public 
static 
ITechnologyServices (&
GetTechnologyServiceObject) C
(C D
)D E
{ 	
return 
new 
TechnologyServices %
(% &
)& '
;' (
} 	
} 
} Þ
bC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Factory\UserDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
UserDataFactory '
{' (
public 
static 
Context 
Getusercontext ,
(, -
)- .
{. /
return 
new 
Context 
( 
)  
;  !
} 	
public 
static 
UserData 
GetUserObject ,
(, -
ILogger- 4
<4 5
UserServices5 A
>A B
loggerC I
)I J
{J K
return 
new 
UserData 
(  
Getusercontext  .
(. /
)/ 0
,0 1
logger1 7
)7 8
;8 9
}		 	
public

 
static

 
User

 
GetUserModelObject

 -
(

- .
)

. /
{

/ 0
return 
new 
User 
( 
) 
; 
} 	
public 
static 
UserValidation $
GetValidationObject% 8
(8 9
)9 :
{: ;
return 
new 
UserValidation %
(% &
)& '
;' (
} 	
} 
} ÂÒ	
vC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Migrations\20220712184044_chitrarasu_July13.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class 
chitrarasu_July13 *
:+ ,
	Migration- 6
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str '
,' (
columns 
: 
table 
=> !
new" %
{ 
AchievementTypeId %
=& '
table( -
.- .
Column. 4
<4 5
int5 8
>8 9
(9 :
type: >
:> ?
$str@ E
,E F
nullableG O
:O P
falseQ V
)V W
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
AchievementTypeName '
=( )
table* /
./ 0
Column0 6
<6 7
string7 =
>= >
(> ?
type? C
:C D
$strE T
,T U
nullableV ^
:^ _
false` e
)e f
,f g
IsActive 
= 
table $
.$ %
Column% +
<+ ,
bool, 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 9
,9 :
x; <
=>= ?
x@ A
.A B
AchievementTypeIdB S
)S T
;T U
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str '
,' (
columns 
: 
table 
=> !
new" %
{ 
ChangePasswordId $
=% &
table' ,
., -
Column- 3
<3 4
int4 7
>7 8
(8 9
type9 =
:= >
$str? D
,D E
nullableF N
:N O
falseP U
)U V
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
NewPassword   
=    !
table  " '
.  ' (
Column  ( .
<  . /
string  / 5
>  5 6
(  6 7
type  7 ;
:  ; <
$str  = L
,  L M
nullable  N V
:  V W
false  X ]
)  ] ^
,  ^ _
ConfirmPassword!! #
=!!$ %
table!!& +
.!!+ ,
Column!!, 2
<!!2 3
string!!3 9
>!!9 :
(!!: ;
type!!; ?
:!!? @
$str!!A P
,!!P Q
nullable!!R Z
:!!Z [
false!!\ a
)!!a b
,!!b c
IsActive"" 
="" 
table"" $
.""$ %
Column""% +
<""+ ,
bool"", 0
>""0 1
(""1 2
type""2 6
:""6 7
$str""8 =
,""= >
nullable""? G
:""G H
false""I N
)""N O
}## 
,## 
constraints$$ 
:$$ 
table$$ "
=>$$# %
{%% 
table&& 
.&& 

PrimaryKey&& $
(&&$ %
$str&&% 9
,&&9 :
x&&; <
=>&&= ?
x&&@ A
.&&A B
ChangePasswordId&&B R
)&&R S
;&&S T
}'' 
)'' 
;'' 
migrationBuilder)) 
.)) 
CreateTable)) (
())( )
name** 
:** 
$str**  
,**  !
columns++ 
:++ 
table++ 
=>++ !
new++" %
{,, 
	CollegeId-- 
=-- 
table--  %
.--% &
Column--& ,
<--, -
int--- 0
>--0 1
(--1 2
type--2 6
:--6 7
$str--8 =
,--= >
nullable--? G
:--G H
false--I N
)--N O
... 

Annotation.. #
(..# $
$str..$ 8
,..8 9
$str..: @
)..@ A
,..A B
CollegeName// 
=//  !
table//" '
.//' (
Column//( .
<//. /
string/// 5
>//5 6
(//6 7
type//7 ;
://; <
$str//= K
,//K L
	maxLength//M V
://V W
$num//X Z
,//Z [
nullable//\ d
://d e
false//f k
)//k l
,//l m
IsActive00 
=00 
table00 $
.00$ %
Column00% +
<00+ ,
bool00, 0
>000 1
(001 2
type002 6
:006 7
$str008 =
,00= >
nullable00? G
:00G H
false00I N
)00N O
}11 
,11 
constraints22 
:22 
table22 "
=>22# %
{33 
table44 
.44 

PrimaryKey44 $
(44$ %
$str44% 2
,442 3
x444 5
=>446 8
x449 :
.44: ;
	CollegeId44; D
)44D E
;44E F
}55 
)55 
;55 
migrationBuilder77 
.77 
CreateTable77 (
(77( )
name88 
:88 
$str88 $
,88$ %
columns99 
:99 
table99 
=>99 !
new99" %
{:: 
CountryCodeId;; !
=;;" #
table;;$ )
.;;) *
Column;;* 0
<;;0 1
int;;1 4
>;;4 5
(;;5 6
type;;6 :
:;;: ;
$str;;< A
,;;A B
nullable;;C K
:;;K L
false;;M R
);;R S
.<< 

Annotation<< #
(<<# $
$str<<$ 8
,<<8 9
$str<<: @
)<<@ A
,<<A B
CountryCodeName== #
===$ %
table==& +
.==+ ,
Column==, 2
<==2 3
string==3 9
>==9 :
(==: ;
type==; ?
:==? @
$str==A P
,==P Q
nullable==R Z
:==Z [
false==\ a
)==a b
,==b c
IsActive>> 
=>> 
table>> $
.>>$ %
Column>>% +
<>>+ ,
bool>>, 0
>>>0 1
(>>1 2
type>>2 6
:>>6 7
$str>>8 =
,>>= >
nullable>>? G
:>>G H
false>>I N
)>>N O
}?? 
,?? 
constraints@@ 
:@@ 
table@@ "
=>@@# %
{AA 
tableBB 
.BB 

PrimaryKeyBB $
(BB$ %
$strBB% 6
,BB6 7
xBB8 9
=>BB: <
xBB= >
.BB> ?
CountryCodeIdBB? L
)BBL M
;BBM N
}CC 
)CC 
;CC 
migrationBuilderEE 
.EE 
CreateTableEE (
(EE( )
nameFF 
:FF 
$strFF $
,FF$ %
columnsGG 
:GG 
tableGG 
=>GG !
newGG" %
{HH 
DesignationIdII !
=II" #
tableII$ )
.II) *
ColumnII* 0
<II0 1
intII1 4
>II4 5
(II5 6
typeII6 :
:II: ;
$strII< A
,IIA B
nullableIIC K
:IIK L
falseIIM R
)IIR S
.JJ 

AnnotationJJ #
(JJ# $
$strJJ$ 8
,JJ8 9
$strJJ: @
)JJ@ A
,JJA B
DesignationNameKK #
=KK$ %
tableKK& +
.KK+ ,
ColumnKK, 2
<KK2 3
stringKK3 9
>KK9 :
(KK: ;
typeKK; ?
:KK? @
$strKKA O
,KKO P
	maxLengthKKQ Z
:KKZ [
$numKK\ ^
,KK^ _
nullableKK` h
:KKh i
falseKKj o
)KKo p
,KKp q
IsActiveLL 
=LL 
tableLL $
.LL$ %
ColumnLL% +
<LL+ ,
boolLL, 0
>LL0 1
(LL1 2
typeLL2 6
:LL6 7
$strLL8 =
,LL= >
nullableLL? G
:LLG H
falseLLI N
)LLN O
}MM 
,MM 
constraintsNN 
:NN 
tableNN "
=>NN# %
{OO 
tablePP 
.PP 

PrimaryKeyPP $
(PP$ %
$strPP% 6
,PP6 7
xPP8 9
=>PP: <
xPP= >
.PP> ?
DesignationIdPP? L
)PPL M
;PPM N
}QQ 
)QQ 
;QQ 
migrationBuilderSS 
.SS 
CreateTableSS (
(SS( )
nameTT 
:TT 
$strTT 
,TT  
columnsUU 
:UU 
tableUU 
=>UU !
newUU" %
{VV 
DomainIdWW 
=WW 
tableWW $
.WW$ %
ColumnWW% +
<WW+ ,
intWW, /
>WW/ 0
(WW0 1
typeWW1 5
:WW5 6
$strWW7 <
,WW< =
nullableWW> F
:WWF G
falseWWH M
)WWM N
.XX 

AnnotationXX #
(XX# $
$strXX$ 8
,XX8 9
$strXX: @
)XX@ A
,XXA B

DomainNameYY 
=YY  
tableYY! &
.YY& '
ColumnYY' -
<YY- .
stringYY. 4
>YY4 5
(YY5 6
typeYY6 :
:YY: ;
$strYY< J
,YYJ K
	maxLengthYYL U
:YYU V
$numYYW Y
,YYY Z
nullableYY[ c
:YYc d
falseYYe j
)YYj k
,YYk l
IsActiveZZ 
=ZZ 
tableZZ $
.ZZ$ %
ColumnZZ% +
<ZZ+ ,
boolZZ, 0
>ZZ0 1
(ZZ1 2
typeZZ2 6
:ZZ6 7
$strZZ8 =
,ZZ= >
nullableZZ? G
:ZZG H
falseZZI N
)ZZN O
}[[ 
,[[ 
constraints\\ 
:\\ 
table\\ "
=>\\# %
{]] 
table^^ 
.^^ 

PrimaryKey^^ $
(^^$ %
$str^^% 1
,^^1 2
x^^3 4
=>^^5 7
x^^8 9
.^^9 :
DomainId^^: B
)^^B C
;^^C D
}__ 
)__ 
;__ 
migrationBuilderaa 
.aa 
CreateTableaa (
(aa( )
namebb 
:bb 
$strbb 
,bb 
columnscc 
:cc 
tablecc 
=>cc !
newcc" %
{dd 
GenderIdee 
=ee 
tableee $
.ee$ %
Columnee% +
<ee+ ,
intee, /
>ee/ 0
(ee0 1
typeee1 5
:ee5 6
$stree7 <
,ee< =
nullableee> F
:eeF G
falseeeH M
)eeM N
.ff 

Annotationff #
(ff# $
$strff$ 8
,ff8 9
$strff: @
)ff@ A
,ffA B

GenderNamegg 
=gg  
tablegg! &
.gg& '
Columngg' -
<gg- .
stringgg. 4
>gg4 5
(gg5 6
typegg6 :
:gg: ;
$strgg< K
,ggK L
nullableggM U
:ggU V
falseggW \
)gg\ ]
,gg] ^
IsActivehh 
=hh 
tablehh $
.hh$ %
Columnhh% +
<hh+ ,
boolhh, 0
>hh0 1
(hh1 2
typehh2 6
:hh6 7
$strhh8 =
,hh= >
nullablehh? G
:hhG H
falsehhI N
)hhN O
}ii 
,ii 
constraintsjj 
:jj 
tablejj "
=>jj# %
{kk 
tablell 
.ll 

PrimaryKeyll $
(ll$ %
$strll% 0
,ll0 1
xll2 3
=>ll4 6
xll7 8
.ll8 9
GenderIdll9 A
)llA B
;llB C
}mm 
)mm 
;mm 
migrationBuilderoo 
.oo 
CreateTableoo (
(oo( )
namepp 
:pp 
$strpp %
,pp% &
columnsqq 
:qq 
tableqq 
=>qq !
newqq" %
{rr 
OrganisationIdss "
=ss# $
tabless% *
.ss* +
Columnss+ 1
<ss1 2
intss2 5
>ss5 6
(ss6 7
typess7 ;
:ss; <
$strss= B
,ssB C
nullablessD L
:ssL M
falsessN S
)ssS T
.tt 

Annotationtt #
(tt# $
$strtt$ 8
,tt8 9
$strtt: @
)tt@ A
,ttA B
OrganisationNameuu $
=uu% &
tableuu' ,
.uu, -
Columnuu- 3
<uu3 4
stringuu4 :
>uu: ;
(uu; <
typeuu< @
:uu@ A
$struuB Q
,uuQ R
nullableuuS [
:uu[ \
falseuu] b
)uub c
,uuc d
IsActivevv 
=vv 
tablevv $
.vv$ %
Columnvv% +
<vv+ ,
boolvv, 0
>vv0 1
(vv1 2
typevv2 6
:vv6 7
$strvv8 =
,vv= >
nullablevv? G
:vvG H
falsevvI N
)vvN O
}ww 
,ww 
constraintsxx 
:xx 
tablexx "
=>xx# %
{yy 
tablezz 
.zz 

PrimaryKeyzz $
(zz$ %
$strzz% 7
,zz7 8
xzz9 :
=>zz; =
xzz> ?
.zz? @
OrganisationIdzz@ N
)zzN O
;zzO P
}{{ 
){{ 
;{{ 
migrationBuilder}} 
.}} 
CreateTable}} (
(}}( )
name~~ 
:~~ 
$str~~ &
,~~& '
columns 
: 
table 
=> !
new" %
{
 
ProfileStatusId
 #
=
$ %
table
& +
.
+ ,
Column
, 2
<
2 3
int
3 6
>
6 7
(
7 8
type
8 <
:
< =
$str
> C
,
C D
nullable
E M
:
M N
false
O T
)
T U
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
ProfileStatusName
 %
=
& '
table
( -
.
- .
Column
. 4
<
4 5
string
5 ;
>
; <
(
< =
type
= A
:
A B
$str
C R
,
R S
nullable
T \
:
\ ]
false
^ c
)
c d
,
d e
IsActive
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
bool
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 8
,
8 9
x
: ;
=>
< >
x
? @
.
@ A
ProfileStatusId
A P
)
P Q
;
Q R
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 $
,
$ %
columns
 
:
 
table
 
=>
 !
new
" %
{
 
TechnologyId
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
int
0 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; @
,
@ A
nullable
B J
:
J K
false
L Q
)
Q R
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
TechnologyName
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
string
2 8
>
8 9
(
9 :
type
: >
:
> ?
$str
@ O
,
O P
nullable
Q Y
:
Y Z
false
[ `
)
` a
,
a b
IsActive
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
bool
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 6
,
6 7
x
8 9
=>
: <
x
= >
.
> ?
TechnologyId
? K
)
K L
;
L M
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
 
columns
 
:
 
table
 
=>
 !
new
" %
{
 
UserId
 
=
 
table
 "
.
" #
Column
# )
<
) *
int
* -
>
- .
(
. /
type
/ 3
:
3 4
$str
5 :
,
: ;
nullable
< D
:
D E
false
F K
)
K L
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
Name
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 E
,
E F
nullable
G O
:
O P
false
Q V
)
V W
,
W X
Email
   
=
   
table
   !
.
  ! "
Column
  " (
<
  ( )
string
  ) /
>
  / 0
(
  0 1
type
  1 5
:
  5 6
$str
  7 F
,
  F G
nullable
  H P
:
  P Q
false
  R W
)
  W X
,
  X Y
UserName
¡¡ 
=
¡¡ 
table
¡¡ $
.
¡¡$ %
Column
¡¡% +
<
¡¡+ ,
string
¡¡, 2
>
¡¡2 3
(
¡¡3 4
type
¡¡4 8
:
¡¡8 9
$str
¡¡: I
,
¡¡I J
nullable
¡¡K S
:
¡¡S T
false
¡¡U Z
)
¡¡Z [
,
¡¡[ \
Password
¢¢ 
=
¢¢ 
table
¢¢ $
.
¢¢$ %
Column
¢¢% +
<
¢¢+ ,
string
¢¢, 2
>
¢¢2 3
(
¢¢3 4
type
¢¢4 8
:
¢¢8 9
$str
¢¢: I
,
¢¢I J
nullable
¢¢K S
:
¢¢S T
false
¢¢U Z
)
¢¢Z [
,
¢¢[ \
CountryCodeId
££ !
=
££" #
table
££$ )
.
££) *
Column
££* 0
<
££0 1
int
££1 4
>
££4 5
(
££5 6
type
££6 :
:
££: ;
$str
££< A
,
££A B
nullable
££C K
:
££K L
true
££M Q
)
££Q R
,
££R S
MobileNumber
¤¤  
=
¤¤! "
table
¤¤# (
.
¤¤( )
Column
¤¤) /
<
¤¤/ 0
string
¤¤0 6
>
¤¤6 7
(
¤¤7 8
type
¤¤8 <
:
¤¤< =
$str
¤¤> M
,
¤¤M N
nullable
¤¤O W
:
¤¤W X
false
¤¤Y ^
)
¤¤^ _
,
¤¤_ `
DesignationId
¥¥ !
=
¥¥" #
table
¥¥$ )
.
¥¥) *
Column
¥¥* 0
<
¥¥0 1
int
¥¥1 4
>
¥¥4 5
(
¥¥5 6
type
¥¥6 :
:
¥¥: ;
$str
¥¥< A
,
¥¥A B
nullable
¥¥C K
:
¥¥K L
false
¥¥M R
)
¥¥R S
,
¥¥S T%
ReportingPersonUsername
¦¦ +
=
¦¦, -
table
¦¦. 3
.
¦¦3 4
Column
¦¦4 :
<
¦¦: ;
string
¦¦; A
>
¦¦A B
(
¦¦B C
type
¦¦C G
:
¦¦G H
$str
¦¦I X
,
¦¦X Y
nullable
¦¦Z b
:
¦¦b c
true
¦¦d h
)
¦¦h i
,
¦¦i j
OrganisationId
§§ "
=
§§# $
table
§§% *
.
§§* +
Column
§§+ 1
<
§§1 2
int
§§2 5
>
§§5 6
(
§§6 7
type
§§7 ;
:
§§; <
$str
§§= B
,
§§B C
nullable
§§D L
:
§§L M
false
§§N S
)
§§S T
,
§§T U
GenderId
¨¨ 
=
¨¨ 
table
¨¨ $
.
¨¨$ %
Column
¨¨% +
<
¨¨+ ,
int
¨¨, /
>
¨¨/ 0
(
¨¨0 1
type
¨¨1 5
:
¨¨5 6
$str
¨¨7 <
,
¨¨< =
nullable
¨¨> F
:
¨¨F G
false
¨¨H M
)
¨¨M N
,
¨¨N O
	CreatedBy
©© 
=
©© 
table
©©  %
.
©©% &
Column
©©& ,
<
©©, -
int
©©- 0
>
©©0 1
(
©©1 2
type
©©2 6
:
©©6 7
$str
©©8 =
,
©©= >
nullable
©©? G
:
©©G H
true
©©I M
)
©©M N
,
©©N O
	CreatedOn
ªª 
=
ªª 
table
ªª  %
.
ªª% &
Column
ªª& ,
<
ªª, -
DateTime
ªª- 5
>
ªª5 6
(
ªª6 7
type
ªª7 ;
:
ªª; <
$str
ªª= H
,
ªªH I
nullable
ªªJ R
:
ªªR S
true
ªªT X
)
ªªX Y
,
ªªY Z
	UpdatedBy
«« 
=
«« 
table
««  %
.
««% &
Column
««& ,
<
««, -
int
««- 0
>
««0 1
(
««1 2
type
««2 6
:
««6 7
$str
««8 =
,
««= >
nullable
««? G
:
««G H
true
««I M
)
««M N
,
««N O
	UpdatedOn
¬¬ 
=
¬¬ 
table
¬¬  %
.
¬¬% &
Column
¬¬& ,
<
¬¬, -
DateTime
¬¬- 5
>
¬¬5 6
(
¬¬6 7
type
¬¬7 ;
:
¬¬; <
$str
¬¬= H
,
¬¬H I
nullable
¬¬J R
:
¬¬R S
true
¬¬T X
)
¬¬X Y
,
¬¬Y Z
IsActive
­­ 
=
­­ 
table
­­ $
.
­­$ %
Column
­­% +
<
­­+ ,
bool
­­, 0
>
­­0 1
(
­­1 2
type
­­2 6
:
­­6 7
$str
­­8 =
,
­­= >
nullable
­­? G
:
­­G H
false
­­I N
)
­­N O
}
®® 
,
®® 
constraints
¯¯ 
:
¯¯ 
table
¯¯ "
=>
¯¯# %
{
°° 
table
±± 
.
±± 

PrimaryKey
±± $
(
±±$ %
$str
±±% /
,
±±/ 0
x
±±1 2
=>
±±3 5
x
±±6 7
.
±±7 8
UserId
±±8 >
)
±±> ?
;
±±? @
table
²² 
.
²² 

ForeignKey
²² $
(
²²$ %
name
³³ 
:
³³ 
$str
³³ C
,
³³C D
column
´´ 
:
´´ 
x
´´  !
=>
´´" $
x
´´% &
.
´´& '
CountryCodeId
´´' 4
,
´´4 5
principalTable
µµ &
:
µµ& '
$str
µµ( 6
,
µµ6 7
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) 8
)
¶¶8 9
;
¶¶9 :
table
·· 
.
·· 

ForeignKey
·· $
(
··$ %
name
¸¸ 
:
¸¸ 
$str
¸¸ C
,
¸¸C D
column
¹¹ 
:
¹¹ 
x
¹¹  !
=>
¹¹" $
x
¹¹% &
.
¹¹& '
DesignationId
¹¹' 4
,
¹¹4 5
principalTable
ºº &
:
ºº& '
$str
ºº( 6
,
ºº6 7
principalColumn
»» '
:
»»' (
$str
»») 8
,
»»8 9
onDelete
¼¼  
:
¼¼  !
ReferentialAction
¼¼" 3
.
¼¼3 4
NoAction
¼¼4 <
)
¼¼< =
;
¼¼= >
table
½½ 
.
½½ 

ForeignKey
½½ $
(
½½$ %
name
¾¾ 
:
¾¾ 
$str
¾¾ 8
,
¾¾8 9
column
¿¿ 
:
¿¿ 
x
¿¿  !
=>
¿¿" $
x
¿¿% &
.
¿¿& '
GenderId
¿¿' /
,
¿¿/ 0
principalTable
ÀÀ &
:
ÀÀ& '
$str
ÀÀ( 0
,
ÀÀ0 1
principalColumn
ÁÁ '
:
ÁÁ' (
$str
ÁÁ) 3
,
ÁÁ3 4
onDelete
ÂÂ  
:
ÂÂ  !
ReferentialAction
ÂÂ" 3
.
ÂÂ3 4
NoAction
ÂÂ4 <
)
ÂÂ< =
;
ÂÂ= >
table
ÃÃ 
.
ÃÃ 

ForeignKey
ÃÃ $
(
ÃÃ$ %
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ E
,
ÄÄE F
column
ÅÅ 
:
ÅÅ 
x
ÅÅ  !
=>
ÅÅ" $
x
ÅÅ% &
.
ÅÅ& '
OrganisationId
ÅÅ' 5
,
ÅÅ5 6
principalTable
ÆÆ &
:
ÆÆ& '
$str
ÆÆ( 7
,
ÆÆ7 8
principalColumn
ÇÇ '
:
ÇÇ' (
$str
ÇÇ) 9
,
ÇÇ9 :
onDelete
ÈÈ  
:
ÈÈ  !
ReferentialAction
ÈÈ" 3
.
ÈÈ3 4
NoAction
ÈÈ4 <
)
ÈÈ< =
;
ÈÈ= >
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
migrationBuilder
ËË 
.
ËË 
CreateTable
ËË (
(
ËË( )
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ 
,
ÌÌ  
columns
ÍÍ 
:
ÍÍ 
table
ÍÍ 
=>
ÍÍ !
new
ÍÍ" %
{
ÎÎ 
	ProfileId
ÏÏ 
=
ÏÏ 
table
ÏÏ  %
.
ÏÏ% &
Column
ÏÏ& ,
<
ÏÏ, -
int
ÏÏ- 0
>
ÏÏ0 1
(
ÏÏ1 2
type
ÏÏ2 6
:
ÏÏ6 7
$str
ÏÏ8 =
,
ÏÏ= >
nullable
ÏÏ? G
:
ÏÏG H
false
ÏÏI N
)
ÏÏN O
.
ÐÐ 

Annotation
ÐÐ #
(
ÐÐ# $
$str
ÐÐ$ 8
,
ÐÐ8 9
$str
ÐÐ: @
)
ÐÐ@ A
,
ÐÐA B
ProfileStatusId
ÑÑ #
=
ÑÑ$ %
table
ÑÑ& +
.
ÑÑ+ ,
Column
ÑÑ, 2
<
ÑÑ2 3
int
ÑÑ3 6
>
ÑÑ6 7
(
ÑÑ7 8
type
ÑÑ8 <
:
ÑÑ< =
$str
ÑÑ> C
,
ÑÑC D
nullable
ÑÑE M
:
ÑÑM N
false
ÑÑO T
)
ÑÑT U
,
ÑÑU V
	CreatedOn
ÒÒ 
=
ÒÒ 
table
ÒÒ  %
.
ÒÒ% &
Column
ÒÒ& ,
<
ÒÒ, -
DateTime
ÒÒ- 5
>
ÒÒ5 6
(
ÒÒ6 7
type
ÒÒ7 ;
:
ÒÒ; <
$str
ÒÒ= H
,
ÒÒH I
nullable
ÒÒJ R
:
ÒÒR S
true
ÒÒT X
)
ÒÒX Y
,
ÒÒY Z
	CreatedBy
ÓÓ 
=
ÓÓ 
table
ÓÓ  %
.
ÓÓ% &
Column
ÓÓ& ,
<
ÓÓ, -
int
ÓÓ- 0
>
ÓÓ0 1
(
ÓÓ1 2
type
ÓÓ2 6
:
ÓÓ6 7
$str
ÓÓ8 =
,
ÓÓ= >
nullable
ÓÓ? G
:
ÓÓG H
true
ÓÓI M
)
ÓÓM N
,
ÓÓN O
	UpdatedOn
ÔÔ 
=
ÔÔ 
table
ÔÔ  %
.
ÔÔ% &
Column
ÔÔ& ,
<
ÔÔ, -
DateTime
ÔÔ- 5
>
ÔÔ5 6
(
ÔÔ6 7
type
ÔÔ7 ;
:
ÔÔ; <
$str
ÔÔ= H
,
ÔÔH I
nullable
ÔÔJ R
:
ÔÔR S
true
ÔÔT X
)
ÔÔX Y
,
ÔÔY Z
UserId
ÕÕ 
=
ÕÕ 
table
ÕÕ "
.
ÕÕ" #
Column
ÕÕ# )
<
ÕÕ) *
int
ÕÕ* -
>
ÕÕ- .
(
ÕÕ. /
type
ÕÕ/ 3
:
ÕÕ3 4
$str
ÕÕ5 :
,
ÕÕ: ;
nullable
ÕÕ< D
:
ÕÕD E
false
ÕÕF K
)
ÕÕK L
,
ÕÕL M
IsActive
ÖÖ 
=
ÖÖ 
table
ÖÖ $
.
ÖÖ$ %
Column
ÖÖ% +
<
ÖÖ+ ,
bool
ÖÖ, 0
>
ÖÖ0 1
(
ÖÖ1 2
type
ÖÖ2 6
:
ÖÖ6 7
$str
ÖÖ8 =
,
ÖÖ= >
nullable
ÖÖ? G
:
ÖÖG H
false
ÖÖI N
)
ÖÖN O
}
×× 
,
×× 
constraints
ØØ 
:
ØØ 
table
ØØ "
=>
ØØ# %
{
ÙÙ 
table
ÚÚ 
.
ÚÚ 

PrimaryKey
ÚÚ $
(
ÚÚ$ %
$str
ÚÚ% 1
,
ÚÚ1 2
x
ÚÚ3 4
=>
ÚÚ5 7
x
ÚÚ8 9
.
ÚÚ9 :
	ProfileId
ÚÚ: C
)
ÚÚC D
;
ÚÚD E
table
ÛÛ 
.
ÛÛ 

ForeignKey
ÛÛ $
(
ÛÛ$ %
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ I
,
ÜÜI J
column
ÝÝ 
:
ÝÝ 
x
ÝÝ  !
=>
ÝÝ" $
x
ÝÝ% &
.
ÝÝ& '
ProfileStatusId
ÝÝ' 6
,
ÝÝ6 7
principalTable
ÞÞ &
:
ÞÞ& '
$str
ÞÞ( 8
,
ÞÞ8 9
principalColumn
ßß '
:
ßß' (
$str
ßß) :
,
ßß: ;
onDelete
àà  
:
àà  !
ReferentialAction
àà" 3
.
àà3 4
NoAction
àà4 <
)
àà< =
;
àà= >
table
áá 
.
áá 

ForeignKey
áá $
(
áá$ %
name
ââ 
:
ââ 
$str
ââ 7
,
ââ7 8
column
ãã 
:
ãã 
x
ãã  !
=>
ãã" $
x
ãã% &
.
ãã& '
UserId
ãã' -
,
ãã- .
principalTable
ää &
:
ää& '
$str
ää( /
,
ää/ 0
principalColumn
åå '
:
åå' (
$str
åå) 1
,
åå1 2
onDelete
ææ  
:
ææ  !
ReferentialAction
ææ" 3
.
ææ3 4
NoAction
ææ4 <
)
ææ< =
;
ææ= >
}
çç 
)
çç 
;
çç 
migrationBuilder
éé 
.
éé 
CreateTable
éé (
(
éé( )
name
êê 
:
êê 
$str
êê $
,
êê$ %
columns
ëë 
:
ëë 
table
ëë 
=>
ëë !
new
ëë" %
{
ìì 
AchievementId
íí !
=
íí" #
table
íí$ )
.
íí) *
Column
íí* 0
<
íí0 1
int
íí1 4
>
íí4 5
(
íí5 6
type
íí6 :
:
íí: ;
$str
íí< A
,
ííA B
nullable
ííC K
:
ííK L
false
ííM R
)
ííR S
.
îî 

Annotation
îî #
(
îî# $
$str
îî$ 8
,
îî8 9
$str
îî: @
)
îî@ A
,
îîA B
	ProfileId
ïï 
=
ïï 
table
ïï  %
.
ïï% &
Column
ïï& ,
<
ïï, -
int
ïï- 0
>
ïï0 1
(
ïï1 2
type
ïï2 6
:
ïï6 7
$str
ïï8 =
,
ïï= >
nullable
ïï? G
:
ïïG H
false
ïïI N
)
ïïN O
,
ïïO P
AchievementTypeId
ðð %
=
ðð& '
table
ðð( -
.
ðð- .
Column
ðð. 4
<
ðð4 5
int
ðð5 8
>
ðð8 9
(
ðð9 :
type
ðð: >
:
ðð> ?
$str
ðð@ E
,
ððE F
nullable
ððG O
:
ððO P
false
ððQ V
)
ððV W
,
ððW X
base64header
ññ  
=
ññ! "
table
ññ# (
.
ññ( )
Column
ññ) /
<
ññ/ 0
string
ññ0 6
>
ññ6 7
(
ññ7 8
type
ññ8 <
:
ññ< =
$str
ññ> M
,
ññM N
nullable
ññO W
:
ññW X
false
ññY ^
)
ññ^ _
,
ññ_ `
AchievementImage
òò $
=
òò% &
table
òò' ,
.
òò, -
Column
òò- 3
<
òò3 4
byte
òò4 8
[
òò8 9
]
òò9 :
>
òò: ;
(
òò; <
type
òò< @
:
òò@ A
$str
òòB R
,
òòR S
nullable
òòT \
:
òò\ ]
true
òò^ b
)
òòb c
,
òòc d
	CreatedOn
óó 
=
óó 
table
óó  %
.
óó% &
Column
óó& ,
<
óó, -
DateTime
óó- 5
>
óó5 6
(
óó6 7
type
óó7 ;
:
óó; <
$str
óó= H
,
óóH I
nullable
óóJ R
:
óóR S
true
óóT X
)
óóX Y
,
óóY Z
	CreatedBy
ôô 
=
ôô 
table
ôô  %
.
ôô% &
Column
ôô& ,
<
ôô, -
int
ôô- 0
>
ôô0 1
(
ôô1 2
type
ôô2 6
:
ôô6 7
$str
ôô8 =
,
ôô= >
nullable
ôô? G
:
ôôG H
true
ôôI M
)
ôôM N
,
ôôN O
	UpdatedOn
õõ 
=
õõ 
table
õõ  %
.
õõ% &
Column
õõ& ,
<
õõ, -
DateTime
õõ- 5
>
õõ5 6
(
õõ6 7
type
õõ7 ;
:
õõ; <
$str
õõ= H
,
õõH I
nullable
õõJ R
:
õõR S
true
õõT X
)
õõX Y
,
õõY Z
	UpdatedBy
öö 
=
öö 
table
öö  %
.
öö% &
Column
öö& ,
<
öö, -
int
öö- 0
>
öö0 1
(
öö1 2
type
öö2 6
:
öö6 7
$str
öö8 =
,
öö= >
nullable
öö? G
:
ööG H
true
ööI M
)
ööM N
,
ööN O
IsActive
÷÷ 
=
÷÷ 
table
÷÷ $
.
÷÷$ %
Column
÷÷% +
<
÷÷+ ,
bool
÷÷, 0
>
÷÷0 1
(
÷÷1 2
type
÷÷2 6
:
÷÷6 7
$str
÷÷8 =
,
÷÷= >
nullable
÷÷? G
:
÷÷G H
false
÷÷I N
)
÷÷N O
}
øø 
,
øø 
constraints
ùù 
:
ùù 
table
ùù "
=>
ùù# %
{
úú 
table
ûû 
.
ûû 

PrimaryKey
ûû $
(
ûû$ %
$str
ûû% 6
,
ûû6 7
x
ûû8 9
=>
ûû: <
x
ûû= >
.
ûû> ?
AchievementId
ûû? L
)
ûûL M
;
ûûM N
table
üü 
.
üü 

ForeignKey
üü $
(
üü$ %
name
ýý 
:
ýý 
$str
ýý Q
,
ýýQ R
column
þþ 
:
þþ 
x
þþ  !
=>
þþ" $
x
þþ% &
.
þþ& '
AchievementTypeId
þþ' 8
,
þþ8 9
principalTable
ÿÿ &
:
ÿÿ& '
$str
ÿÿ( 9
,
ÿÿ9 :
principalColumn
 '
:
' (
$str
) <
,
< =
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 A
,
A B
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	ProfileId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) 4
,
4 5
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 "
,
" #
columns
 
:
 
table
 
=>
 !
new
" %
{
 
EducationId
 
=
  !
table
" '
.
' (
Column
( .
<
. /
int
/ 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: ?
,
? @
nullable
A I
:
I J
false
K P
)
P Q
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
	ProfileId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
Degree
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 G
,
G H
nullable
I Q
:
Q R
false
S X
)
X Y
,
Y Z
Course
 
=
 
table
 "
.
" #
Column
# )
<
) *
string
* 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 G
,
G H
nullable
I Q
:
Q R
false
S X
)
X Y
,
Y Z
	CollegeId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
Starting
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
int
, /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 <
,
< =
nullable
> F
:
F G
true
H L
)
L M
,
M N
Ending
 
=
 
table
 "
.
" #
Column
# )
<
) *
int
* -
>
- .
(
. /
type
/ 3
:
3 4
$str
5 :
,
: ;
nullable
< D
:
D E
true
F J
)
J K
,
K L

Percentage
 
=
  
table
! &
.
& '
Column
' -
<
- .
float
. 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; A
,
A B
nullable
C K
:
K L
false
M R
)
R S
,
S T
	CreatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	CreatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
,
N O
	UpdatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	UpdatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
,
N O
IsActive
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
bool
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 4
,
4 5
x
6 7
=>
8 :
x
; <
.
< =
EducationId
= H
)
H I
;
I J
table
   
.
   

ForeignKey
   $
(
  $ %
name
¡¡ 
:
¡¡ 
$str
¡¡ @
,
¡¡@ A
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
	CollegeId
¢¢' 0
,
¢¢0 1
principalTable
££ &
:
££& '
$str
££( 2
,
££2 3
principalColumn
¤¤ '
:
¤¤' (
$str
¤¤) 4
,
¤¤4 5
onDelete
¥¥  
:
¥¥  !
ReferentialAction
¥¥" 3
.
¥¥3 4
NoAction
¥¥4 <
)
¥¥< =
;
¥¥= >
table
¦¦ 
.
¦¦ 

ForeignKey
¦¦ $
(
¦¦$ %
name
§§ 
:
§§ 
$str
§§ ?
,
§§? @
column
¨¨ 
:
¨¨ 
x
¨¨  !
=>
¨¨" $
x
¨¨% &
.
¨¨& '
	ProfileId
¨¨' 0
,
¨¨0 1
principalTable
©© &
:
©©& '
$str
©©( 1
,
©©1 2
principalColumn
ªª '
:
ªª' (
$str
ªª) 4
,
ªª4 5
onDelete
««  
:
««  !
ReferentialAction
««" 3
.
««3 4
NoAction
««4 <
)
««< =
;
««= >
}
¬¬ 
)
¬¬ 
;
¬¬ 
migrationBuilder
®® 
.
®® 
CreateTable
®® (
(
®®( )
name
¯¯ 
:
¯¯ 
$str
¯¯ '
,
¯¯' (
columns
°° 
:
°° 
table
°° 
=>
°° !
new
°°" %
{
±± 
PersonalDetailsId
²² %
=
²²& '
table
²²( -
.
²²- .
Column
²². 4
<
²²4 5
int
²²5 8
>
²²8 9
(
²²9 :
type
²²: >
:
²²> ?
$str
²²@ E
,
²²E F
nullable
²²G O
:
²²O P
false
²²Q V
)
²²V W
.
³³ 

Annotation
³³ #
(
³³# $
$str
³³$ 8
,
³³8 9
$str
³³: @
)
³³@ A
,
³³A B
	ProfileId
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
int
´´- 0
>
´´0 1
(
´´1 2
type
´´2 6
:
´´6 7
$str
´´8 =
,
´´= >
nullable
´´? G
:
´´G H
false
´´I N
)
´´N O
,
´´O P
	Objective
µµ 
=
µµ 
table
µµ  %
.
µµ% &
Column
µµ& ,
<
µµ, -
string
µµ- 3
>
µµ3 4
(
µµ4 5
type
µµ5 9
:
µµ9 :
$str
µµ; J
,
µµJ K
nullable
µµL T
:
µµT U
false
µµV [
)
µµ[ \
,
µµ\ ]
DateOfBirth
¶¶ 
=
¶¶  !
table
¶¶" '
.
¶¶' (
Column
¶¶( .
<
¶¶. /
DateTime
¶¶/ 7
>
¶¶7 8
(
¶¶8 9
type
¶¶9 =
:
¶¶= >
$str
¶¶? J
,
¶¶J K
nullable
¶¶L T
:
¶¶T U
false
¶¶V [
)
¶¶[ \
,
¶¶\ ]
Nationality
·· 
=
··  !
table
··" '
.
··' (
Column
··( .
<
··. /
string
··/ 5
>
··5 6
(
··6 7
type
··7 ;
:
··; <
$str
··= L
,
··L M
nullable
··N V
:
··V W
false
··X ]
)
··] ^
,
··^ _
DateOfJoining
¸¸ !
=
¸¸" #
table
¸¸$ )
.
¸¸) *
Column
¸¸* 0
<
¸¸0 1
DateTime
¸¸1 9
>
¸¸9 :
(
¸¸: ;
type
¸¸; ?
:
¸¸? @
$str
¸¸A L
,
¸¸L M
nullable
¸¸N V
:
¸¸V W
false
¸¸X ]
)
¸¸] ^
,
¸¸^ _
base64header
¹¹  
=
¹¹! "
table
¹¹# (
.
¹¹( )
Column
¹¹) /
<
¹¹/ 0
string
¹¹0 6
>
¹¹6 7
(
¹¹7 8
type
¹¹8 <
:
¹¹< =
$str
¹¹> M
,
¹¹M N
nullable
¹¹O W
:
¹¹W X
false
¹¹Y ^
)
¹¹^ _
,
¹¹_ `
Image
ºº 
=
ºº 
table
ºº !
.
ºº! "
Column
ºº" (
<
ºº( )
byte
ºº) -
[
ºº- .
]
ºº. /
>
ºº/ 0
(
ºº0 1
type
ºº1 5
:
ºº5 6
$str
ºº7 G
,
ººG H
nullable
ººI Q
:
ººQ R
true
ººS W
)
ººW X
,
ººX Y
	CreatedOn
»» 
=
»» 
table
»»  %
.
»»% &
Column
»»& ,
<
»», -
DateTime
»»- 5
>
»»5 6
(
»»6 7
type
»»7 ;
:
»»; <
$str
»»= H
,
»»H I
nullable
»»J R
:
»»R S
true
»»T X
)
»»X Y
,
»»Y Z
	CreatedBy
¼¼ 
=
¼¼ 
table
¼¼  %
.
¼¼% &
Column
¼¼& ,
<
¼¼, -
int
¼¼- 0
>
¼¼0 1
(
¼¼1 2
type
¼¼2 6
:
¼¼6 7
$str
¼¼8 =
,
¼¼= >
nullable
¼¼? G
:
¼¼G H
true
¼¼I M
)
¼¼M N
,
¼¼N O
	UpdatedOn
½½ 
=
½½ 
table
½½  %
.
½½% &
Column
½½& ,
<
½½, -
DateTime
½½- 5
>
½½5 6
(
½½6 7
type
½½7 ;
:
½½; <
$str
½½= H
,
½½H I
nullable
½½J R
:
½½R S
true
½½T X
)
½½X Y
,
½½Y Z
	UpdatedBy
¾¾ 
=
¾¾ 
table
¾¾  %
.
¾¾% &
Column
¾¾& ,
<
¾¾, -
int
¾¾- 0
>
¾¾0 1
(
¾¾1 2
type
¾¾2 6
:
¾¾6 7
$str
¾¾8 =
,
¾¾= >
nullable
¾¾? G
:
¾¾G H
true
¾¾I M
)
¾¾M N
,
¾¾N O
UserId
¿¿ 
=
¿¿ 
table
¿¿ "
.
¿¿" #
Column
¿¿# )
<
¿¿) *
int
¿¿* -
>
¿¿- .
(
¿¿. /
type
¿¿/ 3
:
¿¿3 4
$str
¿¿5 :
,
¿¿: ;
nullable
¿¿< D
:
¿¿D E
false
¿¿F K
)
¿¿K L
,
¿¿L M
IsActive
ÀÀ 
=
ÀÀ 
table
ÀÀ $
.
ÀÀ$ %
Column
ÀÀ% +
<
ÀÀ+ ,
bool
ÀÀ, 0
>
ÀÀ0 1
(
ÀÀ1 2
type
ÀÀ2 6
:
ÀÀ6 7
$str
ÀÀ8 =
,
ÀÀ= >
nullable
ÀÀ? G
:
ÀÀG H
false
ÀÀI N
)
ÀÀN O
}
ÁÁ 
,
ÁÁ 
constraints
ÂÂ 
:
ÂÂ 
table
ÂÂ "
=>
ÂÂ# %
{
ÃÃ 
table
ÄÄ 
.
ÄÄ 

PrimaryKey
ÄÄ $
(
ÄÄ$ %
$str
ÄÄ% 9
,
ÄÄ9 :
x
ÄÄ; <
=>
ÄÄ= ?
x
ÄÄ@ A
.
ÄÄA B
PersonalDetailsId
ÄÄB S
)
ÄÄS T
;
ÄÄT U
table
ÅÅ 
.
ÅÅ 

ForeignKey
ÅÅ $
(
ÅÅ$ %
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ D
,
ÆÆD E
column
ÇÇ 
:
ÇÇ 
x
ÇÇ  !
=>
ÇÇ" $
x
ÇÇ% &
.
ÇÇ& '
	ProfileId
ÇÇ' 0
,
ÇÇ0 1
principalTable
ÈÈ &
:
ÈÈ& '
$str
ÈÈ( 1
,
ÈÈ1 2
principalColumn
ÉÉ '
:
ÉÉ' (
$str
ÉÉ) 4
,
ÉÉ4 5
onDelete
ÊÊ  
:
ÊÊ  !
ReferentialAction
ÊÊ" 3
.
ÊÊ3 4
NoAction
ÊÊ4 <
)
ÊÊ< =
;
ÊÊ= >
table
ËË 
.
ËË 

ForeignKey
ËË $
(
ËË$ %
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ ?
,
ÌÌ? @
column
ÍÍ 
:
ÍÍ 
x
ÍÍ  !
=>
ÍÍ" $
x
ÍÍ% &
.
ÍÍ& '
UserId
ÍÍ' -
,
ÍÍ- .
principalTable
ÎÎ &
:
ÎÎ& '
$str
ÎÎ( /
,
ÎÎ/ 0
principalColumn
ÏÏ '
:
ÏÏ' (
$str
ÏÏ) 1
,
ÏÏ1 2
onDelete
ÐÐ  
:
ÐÐ  !
ReferentialAction
ÐÐ" 3
.
ÐÐ3 4
NoAction
ÐÐ4 <
)
ÐÐ< =
;
ÐÐ= >
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
migrationBuilder
ÓÓ 
.
ÓÓ 
CreateTable
ÓÓ (
(
ÓÓ( )
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ &
,
ÔÔ& '
columns
ÕÕ 
:
ÕÕ 
table
ÕÕ 
=>
ÕÕ !
new
ÕÕ" %
{
ÖÖ 
ProfileHistoryId
×× $
=
××% &
table
××' ,
.
××, -
Column
××- 3
<
××3 4
int
××4 7
>
××7 8
(
××8 9
type
××9 =
:
××= >
$str
××? D
,
××D E
nullable
××F N
:
××N O
false
××P U
)
××U V
.
ØØ 

Annotation
ØØ #
(
ØØ# $
$str
ØØ$ 8
,
ØØ8 9
$str
ØØ: @
)
ØØ@ A
,
ØØA B
	ProfileId
ÙÙ 
=
ÙÙ 
table
ÙÙ  %
.
ÙÙ% &
Column
ÙÙ& ,
<
ÙÙ, -
int
ÙÙ- 0
>
ÙÙ0 1
(
ÙÙ1 2
type
ÙÙ2 6
:
ÙÙ6 7
$str
ÙÙ8 =
,
ÙÙ= >
nullable
ÙÙ? G
:
ÙÙG H
false
ÙÙI N
)
ÙÙN O
,
ÙÙO P
ApprovedDate
ÚÚ  
=
ÚÚ! "
table
ÚÚ# (
.
ÚÚ( )
Column
ÚÚ) /
<
ÚÚ/ 0
DateTime
ÚÚ0 8
>
ÚÚ8 9
(
ÚÚ9 :
type
ÚÚ: >
:
ÚÚ> ?
$str
ÚÚ@ K
,
ÚÚK L
nullable
ÚÚM U
:
ÚÚU V
false
ÚÚW \
)
ÚÚ\ ]
,
ÚÚ] ^
IsActive
ÛÛ 
=
ÛÛ 
table
ÛÛ $
.
ÛÛ$ %
Column
ÛÛ% +
<
ÛÛ+ ,
bool
ÛÛ, 0
>
ÛÛ0 1
(
ÛÛ1 2
type
ÛÛ2 6
:
ÛÛ6 7
$str
ÛÛ8 =
,
ÛÛ= >
nullable
ÛÛ? G
:
ÛÛG H
false
ÛÛI N
)
ÛÛN O
}
ÜÜ 
,
ÜÜ 
constraints
ÝÝ 
:
ÝÝ 
table
ÝÝ "
=>
ÝÝ# %
{
ÞÞ 
table
ßß 
.
ßß 

PrimaryKey
ßß $
(
ßß$ %
$str
ßß% 8
,
ßß8 9
x
ßß: ;
=>
ßß< >
x
ßß? @
.
ßß@ A
ProfileHistoryId
ßßA Q
)
ßßQ R
;
ßßR S
table
àà 
.
àà 

ForeignKey
àà $
(
àà$ %
name
áá 
:
áá 
$str
áá C
,
ááC D
column
ââ 
:
ââ 
x
ââ  !
=>
ââ" $
x
ââ% &
.
ââ& '
	ProfileId
ââ' 0
,
ââ0 1
principalTable
ãã &
:
ãã& '
$str
ãã( 1
,
ãã1 2
principalColumn
ää '
:
ää' (
$str
ää) 4
,
ää4 5
onDelete
åå  
:
åå  !
ReferentialAction
åå" 3
.
åå3 4
NoAction
åå4 <
)
åå< =
;
åå= >
}
ææ 
)
ææ 
;
ææ 
migrationBuilder
èè 
.
èè 
CreateTable
èè (
(
èè( )
name
éé 
:
éé 
$str
éé  
,
éé  !
columns
êê 
:
êê 
table
êê 
=>
êê !
new
êê" %
{
ëë 
	ProjectId
ìì 
=
ìì 
table
ìì  %
.
ìì% &
Column
ìì& ,
<
ìì, -
int
ìì- 0
>
ìì0 1
(
ìì1 2
type
ìì2 6
:
ìì6 7
$str
ìì8 =
,
ìì= >
nullable
ìì? G
:
ììG H
false
ììI N
)
ììN O
.
íí 

Annotation
íí #
(
íí# $
$str
íí$ 8
,
íí8 9
$str
íí: @
)
íí@ A
,
ííA B
	ProfileId
îî 
=
îî 
table
îî  %
.
îî% &
Column
îî& ,
<
îî, -
int
îî- 0
>
îî0 1
(
îî1 2
type
îî2 6
:
îî6 7
$str
îî8 =
,
îî= >
nullable
îî? G
:
îîG H
false
îîI N
)
îîN O
,
îîO P
ProjectName
ïï 
=
ïï  !
table
ïï" '
.
ïï' (
Column
ïï( .
<
ïï. /
string
ïï/ 5
>
ïï5 6
(
ïï6 7
type
ïï7 ;
:
ïï; <
$str
ïï= L
,
ïïL M
nullable
ïïN V
:
ïïV W
false
ïïX ]
)
ïï] ^
,
ïï^ _ 
ProjectDescription
ðð &
=
ðð' (
table
ðð) .
.
ðð. /
Column
ðð/ 5
<
ðð5 6
string
ðð6 <
>
ðð< =
(
ðð= >
type
ðð> B
:
ððB C
$str
ððD S
,
ððS T
nullable
ððU ]
:
ðð] ^
false
ðð_ d
)
ððd e
,
ððe f
StartingMonth
ññ !
=
ññ" #
table
ññ$ )
.
ññ) *
Column
ññ* 0
<
ññ0 1
string
ññ1 7
>
ññ7 8
(
ññ8 9
type
ññ9 =
:
ññ= >
$str
ññ? N
,
ññN O
nullable
ññP X
:
ññX Y
true
ññZ ^
)
ññ^ _
,
ññ_ `
StartingYear
òò  
=
òò! "
table
òò# (
.
òò( )
Column
òò) /
<
òò/ 0
int
òò0 3
>
òò3 4
(
òò4 5
type
òò5 9
:
òò9 :
$str
òò; @
,
òò@ A
nullable
òòB J
:
òòJ K
true
òòL P
)
òòP Q
,
òòQ R
EndingMonth
óó 
=
óó  !
table
óó" '
.
óó' (
Column
óó( .
<
óó. /
string
óó/ 5
>
óó5 6
(
óó6 7
type
óó7 ;
:
óó; <
$str
óó= L
,
óóL M
nullable
óóN V
:
óóV W
true
óóX \
)
óó\ ]
,
óó] ^

EndingYear
ôô 
=
ôô  
table
ôô! &
.
ôô& '
Column
ôô' -
<
ôô- .
int
ôô. 1
>
ôô1 2
(
ôô2 3
type
ôô3 7
:
ôô7 8
$str
ôô9 >
,
ôô> ?
nullable
ôô@ H
:
ôôH I
true
ôôJ N
)
ôôN O
,
ôôO P
Designation
õõ 
=
õõ  !
table
õõ" '
.
õõ' (
Column
õõ( .
<
õõ. /
string
õõ/ 5
>
õõ5 6
(
õõ6 7
type
õõ7 ;
:
õõ; <
$str
õõ= L
,
õõL M
nullable
õõN V
:
õõV W
false
õõX ]
)
õõ] ^
,
õõ^ _
	ToolsUsed
öö 
=
öö 
table
öö  %
.
öö% &
Column
öö& ,
<
öö, -
string
öö- 3
>
öö3 4
(
öö4 5
type
öö5 9
:
öö9 :
$str
öö; J
,
ööJ K
nullable
ööL T
:
ööT U
false
ööV [
)
öö[ \
,
öö\ ]
	CreatedOn
÷÷ 
=
÷÷ 
table
÷÷  %
.
÷÷% &
Column
÷÷& ,
<
÷÷, -
DateTime
÷÷- 5
>
÷÷5 6
(
÷÷6 7
type
÷÷7 ;
:
÷÷; <
$str
÷÷= H
,
÷÷H I
nullable
÷÷J R
:
÷÷R S
true
÷÷T X
)
÷÷X Y
,
÷÷Y Z
	CreatedBy
øø 
=
øø 
table
øø  %
.
øø% &
Column
øø& ,
<
øø, -
int
øø- 0
>
øø0 1
(
øø1 2
type
øø2 6
:
øø6 7
$str
øø8 =
,
øø= >
nullable
øø? G
:
øøG H
true
øøI M
)
øøM N
,
øøN O
	UpdatedOn
ùù 
=
ùù 
table
ùù  %
.
ùù% &
Column
ùù& ,
<
ùù, -
DateTime
ùù- 5
>
ùù5 6
(
ùù6 7
type
ùù7 ;
:
ùù; <
$str
ùù= H
,
ùùH I
nullable
ùùJ R
:
ùùR S
true
ùùT X
)
ùùX Y
,
ùùY Z
	UpdatedBy
úú 
=
úú 
table
úú  %
.
úú% &
Column
úú& ,
<
úú, -
int
úú- 0
>
úú0 1
(
úú1 2
type
úú2 6
:
úú6 7
$str
úú8 =
,
úú= >
nullable
úú? G
:
úúG H
true
úúI M
)
úúM N
,
úúN O
IsActive
ûû 
=
ûû 
table
ûû $
.
ûû$ %
Column
ûû% +
<
ûû+ ,
bool
ûû, 0
>
ûû0 1
(
ûû1 2
type
ûû2 6
:
ûû6 7
$str
ûû8 =
,
ûû= >
nullable
ûû? G
:
ûûG H
false
ûûI N
)
ûûN O
}
üü 
,
üü 
constraints
ýý 
:
ýý 
table
ýý "
=>
ýý# %
{
þþ 
table
ÿÿ 
.
ÿÿ 

PrimaryKey
ÿÿ $
(
ÿÿ$ %
$str
ÿÿ% 2
,
ÿÿ2 3
x
ÿÿ4 5
=>
ÿÿ6 8
x
ÿÿ9 :
.
ÿÿ: ;
	ProjectId
ÿÿ; D
)
ÿÿD E
;
ÿÿE F
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 =
,
= >
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	ProfileId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) 4
,
4 5
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
 
columns
 
:
 
table
 
=>
 !
new
" %
{
 
SkillId
 
=
 
table
 #
.
# $
Column
$ *
<
* +
int
+ .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 ;
,
; <
nullable
= E
:
E F
false
G L
)
L M
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
	ProfileId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
TechnologyId
  
=
! "
table
# (
.
( )
Column
) /
<
/ 0
int
0 3
>
3 4
(
4 5
type
5 9
:
9 :
$str
; @
,
@ A
nullable
B J
:
J K
false
L Q
)
Q R
,
R S
DomainId
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
int
, /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 <
,
< =
nullable
> F
:
F G
false
H M
)
M N
,
N O
	CreatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	CreatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
,
N O
	UpdatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	UpdatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
,
N O
IsActive
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
bool
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 0
,
0 1
x
2 3
=>
4 6
x
7 8
.
8 9
SkillId
9 @
)
@ A
;
A B
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 :
,
: ;
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
DomainId
' /
,
/ 0
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) 3
,
3 4
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
table
   
.
   

ForeignKey
   $
(
  $ %
name
¡¡ 
:
¡¡ 
$str
¡¡ ;
,
¡¡; <
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
	ProfileId
¢¢' 0
,
¢¢0 1
principalTable
££ &
:
££& '
$str
££( 1
,
££1 2
principalColumn
¤¤ '
:
¤¤' (
$str
¤¤) 4
,
¤¤4 5
onDelete
¥¥  
:
¥¥  !
ReferentialAction
¥¥" 3
.
¥¥3 4
NoAction
¥¥4 <
)
¥¥< =
;
¥¥= >
table
¦¦ 
.
¦¦ 

ForeignKey
¦¦ $
(
¦¦$ %
name
§§ 
:
§§ 
$str
§§ C
,
§§C D
column
¨¨ 
:
¨¨ 
x
¨¨  !
=>
¨¨" $
x
¨¨% &
.
¨¨& '
TechnologyId
¨¨' 3
,
¨¨3 4
principalTable
©© &
:
©©& '
$str
©©( 6
,
©©6 7
principalColumn
ªª '
:
ªª' (
$str
ªª) 7
,
ªª7 8
onDelete
««  
:
««  !
ReferentialAction
««" 3
.
««3 4
NoAction
««4 <
)
««< =
;
««= >
}
¬¬ 
)
¬¬ 
;
¬¬ 
migrationBuilder
®® 
.
®® 
CreateTable
®® (
(
®®( )
name
¯¯ 
:
¯¯ 
$str
¯¯ &
,
¯¯& '
columns
°° 
:
°° 
table
°° 
=>
°° !
new
°°" %
{
±± 
BreakDuration_Id
²² $
=
²²% &
table
²²' ,
.
²², -
Column
²²- 3
<
²²3 4
int
²²4 7
>
²²7 8
(
²²8 9
type
²²9 =
:
²²= >
$str
²²? D
,
²²D E
nullable
²²F N
:
²²N O
false
²²P U
)
²²U V
.
³³ 

Annotation
³³ #
(
³³# $
$str
³³$ 8
,
³³8 9
$str
³³: @
)
³³@ A
,
³³A B
StartingDuration
´´ $
=
´´% &
table
´´' ,
.
´´, -
Column
´´- 3
<
´´3 4
DateTime
´´4 <
>
´´< =
(
´´= >
type
´´> B
:
´´B C
$str
´´D O
,
´´O P
nullable
´´Q Y
:
´´Y Z
false
´´[ `
)
´´` a
,
´´a b
EndingDuration
µµ "
=
µµ# $
table
µµ% *
.
µµ* +
Column
µµ+ 1
<
µµ1 2
DateTime
µµ2 :
>
µµ: ;
(
µµ; <
type
µµ< @
:
µµ@ A
$str
µµB M
,
µµM N
nullable
µµO W
:
µµW X
false
µµY ^
)
µµ^ _
,
µµ_ `
PersonalDetailsId
¶¶ %
=
¶¶& '
table
¶¶( -
.
¶¶- .
Column
¶¶. 4
<
¶¶4 5
int
¶¶5 8
>
¶¶8 9
(
¶¶9 :
type
¶¶: >
:
¶¶> ?
$str
¶¶@ E
,
¶¶E F
nullable
¶¶G O
:
¶¶O P
false
¶¶Q V
)
¶¶V W
,
¶¶W X
	CreatedOn
·· 
=
·· 
table
··  %
.
··% &
Column
··& ,
<
··, -
DateTime
··- 5
>
··5 6
(
··6 7
type
··7 ;
:
··; <
$str
··= H
,
··H I
nullable
··J R
:
··R S
true
··T X
)
··X Y
,
··Y Z
	CreatedBy
¸¸ 
=
¸¸ 
table
¸¸  %
.
¸¸% &
Column
¸¸& ,
<
¸¸, -
int
¸¸- 0
>
¸¸0 1
(
¸¸1 2
type
¸¸2 6
:
¸¸6 7
$str
¸¸8 =
,
¸¸= >
nullable
¸¸? G
:
¸¸G H
true
¸¸I M
)
¸¸M N
,
¸¸N O
	UpdatedOn
¹¹ 
=
¹¹ 
table
¹¹  %
.
¹¹% &
Column
¹¹& ,
<
¹¹, -
DateTime
¹¹- 5
>
¹¹5 6
(
¹¹6 7
type
¹¹7 ;
:
¹¹; <
$str
¹¹= H
,
¹¹H I
nullable
¹¹J R
:
¹¹R S
true
¹¹T X
)
¹¹X Y
,
¹¹Y Z
	UpdatedBy
ºº 
=
ºº 
table
ºº  %
.
ºº% &
Column
ºº& ,
<
ºº, -
int
ºº- 0
>
ºº0 1
(
ºº1 2
type
ºº2 6
:
ºº6 7
$str
ºº8 =
,
ºº= >
nullable
ºº? G
:
ººG H
true
ººI M
)
ººM N
,
ººN O
IsActive
»» 
=
»» 
table
»» $
.
»»$ %
Column
»»% +
<
»»+ ,
bool
»», 0
>
»»0 1
(
»»1 2
type
»»2 6
:
»»6 7
$str
»»8 =
,
»»= >
nullable
»»? G
:
»»G H
false
»»I N
)
»»N O
}
¼¼ 
,
¼¼ 
constraints
½½ 
:
½½ 
table
½½ "
=>
½½# %
{
¾¾ 
table
¿¿ 
.
¿¿ 

PrimaryKey
¿¿ $
(
¿¿$ %
$str
¿¿% 8
,
¿¿8 9
x
¿¿: ;
=>
¿¿< >
x
¿¿? @
.
¿¿@ A
BreakDuration_Id
¿¿A Q
)
¿¿Q R
;
¿¿R S
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ S
,
ÁÁS T
column
ÂÂ 
:
ÂÂ 
x
ÂÂ  !
=>
ÂÂ" $
x
ÂÂ% &
.
ÂÂ& '
PersonalDetailsId
ÂÂ' 8
,
ÂÂ8 9
principalTable
ÃÃ &
:
ÃÃ& '
$str
ÃÃ( 9
,
ÃÃ9 :
principalColumn
ÄÄ '
:
ÄÄ' (
$str
ÄÄ) <
,
ÄÄ< =
onDelete
ÅÅ  
:
ÅÅ  !
ReferentialAction
ÅÅ" 3
.
ÅÅ3 4
NoAction
ÅÅ4 <
)
ÅÅ< =
;
ÅÅ= >
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateTable
ÈÈ (
(
ÈÈ( )
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ !
,
ÉÉ! "
columns
ÊÊ 
:
ÊÊ 
table
ÊÊ 
=>
ÊÊ !
new
ÊÊ" %
{
ËË 

LanguageId
ÌÌ 
=
ÌÌ  
table
ÌÌ! &
.
ÌÌ& '
Column
ÌÌ' -
<
ÌÌ- .
int
ÌÌ. 1
>
ÌÌ1 2
(
ÌÌ2 3
type
ÌÌ3 7
:
ÌÌ7 8
$str
ÌÌ9 >
,
ÌÌ> ?
nullable
ÌÌ@ H
:
ÌÌH I
false
ÌÌJ O
)
ÌÌO P
.
ÍÍ 

Annotation
ÍÍ #
(
ÍÍ# $
$str
ÍÍ$ 8
,
ÍÍ8 9
$str
ÍÍ: @
)
ÍÍ@ A
,
ÍÍA B
LanguageName
ÎÎ  
=
ÎÎ! "
table
ÎÎ# (
.
ÎÎ( )
Column
ÎÎ) /
<
ÎÎ/ 0
string
ÎÎ0 6
>
ÎÎ6 7
(
ÎÎ7 8
type
ÎÎ8 <
:
ÎÎ< =
$str
ÎÎ> M
,
ÎÎM N
nullable
ÎÎO W
:
ÎÎW X
false
ÎÎY ^
)
ÎÎ^ _
,
ÎÎ_ `
Read
ÏÏ 
=
ÏÏ 
table
ÏÏ  
.
ÏÏ  !
Column
ÏÏ! '
<
ÏÏ' (
bool
ÏÏ( ,
>
ÏÏ, -
(
ÏÏ- .
type
ÏÏ. 2
:
ÏÏ2 3
$str
ÏÏ4 9
,
ÏÏ9 :
nullable
ÏÏ; C
:
ÏÏC D
false
ÏÏE J
)
ÏÏJ K
,
ÏÏK L
Write
ÐÐ 
=
ÐÐ 
table
ÐÐ !
.
ÐÐ! "
Column
ÐÐ" (
<
ÐÐ( )
bool
ÐÐ) -
>
ÐÐ- .
(
ÐÐ. /
type
ÐÐ/ 3
:
ÐÐ3 4
$str
ÐÐ5 :
,
ÐÐ: ;
nullable
ÐÐ< D
:
ÐÐD E
false
ÐÐF K
)
ÐÐK L
,
ÐÐL M
Speak
ÑÑ 
=
ÑÑ 
table
ÑÑ !
.
ÑÑ! "
Column
ÑÑ" (
<
ÑÑ( )
bool
ÑÑ) -
>
ÑÑ- .
(
ÑÑ. /
type
ÑÑ/ 3
:
ÑÑ3 4
$str
ÑÑ5 :
,
ÑÑ: ;
nullable
ÑÑ< D
:
ÑÑD E
false
ÑÑF K
)
ÑÑK L
,
ÑÑL M
PersonalDetailsId
ÒÒ %
=
ÒÒ& '
table
ÒÒ( -
.
ÒÒ- .
Column
ÒÒ. 4
<
ÒÒ4 5
int
ÒÒ5 8
>
ÒÒ8 9
(
ÒÒ9 :
type
ÒÒ: >
:
ÒÒ> ?
$str
ÒÒ@ E
,
ÒÒE F
nullable
ÒÒG O
:
ÒÒO P
false
ÒÒQ V
)
ÒÒV W
,
ÒÒW X
	CreatedOn
ÓÓ 
=
ÓÓ 
table
ÓÓ  %
.
ÓÓ% &
Column
ÓÓ& ,
<
ÓÓ, -
DateTime
ÓÓ- 5
>
ÓÓ5 6
(
ÓÓ6 7
type
ÓÓ7 ;
:
ÓÓ; <
$str
ÓÓ= H
,
ÓÓH I
nullable
ÓÓJ R
:
ÓÓR S
true
ÓÓT X
)
ÓÓX Y
,
ÓÓY Z
	CreatedBy
ÔÔ 
=
ÔÔ 
table
ÔÔ  %
.
ÔÔ% &
Column
ÔÔ& ,
<
ÔÔ, -
int
ÔÔ- 0
>
ÔÔ0 1
(
ÔÔ1 2
type
ÔÔ2 6
:
ÔÔ6 7
$str
ÔÔ8 =
,
ÔÔ= >
nullable
ÔÔ? G
:
ÔÔG H
true
ÔÔI M
)
ÔÔM N
,
ÔÔN O
	UpdatedOn
ÕÕ 
=
ÕÕ 
table
ÕÕ  %
.
ÕÕ% &
Column
ÕÕ& ,
<
ÕÕ, -
DateTime
ÕÕ- 5
>
ÕÕ5 6
(
ÕÕ6 7
type
ÕÕ7 ;
:
ÕÕ; <
$str
ÕÕ= H
,
ÕÕH I
nullable
ÕÕJ R
:
ÕÕR S
true
ÕÕT X
)
ÕÕX Y
,
ÕÕY Z
	UpdatedBy
ÖÖ 
=
ÖÖ 
table
ÖÖ  %
.
ÖÖ% &
Column
ÖÖ& ,
<
ÖÖ, -
int
ÖÖ- 0
>
ÖÖ0 1
(
ÖÖ1 2
type
ÖÖ2 6
:
ÖÖ6 7
$str
ÖÖ8 =
,
ÖÖ= >
nullable
ÖÖ? G
:
ÖÖG H
true
ÖÖI M
)
ÖÖM N
,
ÖÖN O
IsActive
×× 
=
×× 
table
×× $
.
××$ %
Column
××% +
<
××+ ,
bool
××, 0
>
××0 1
(
××1 2
type
××2 6
:
××6 7
$str
××8 =
,
××= >
nullable
××? G
:
××G H
false
××I N
)
××N O
}
ØØ 
,
ØØ 
constraints
ÙÙ 
:
ÙÙ 
table
ÙÙ "
=>
ÙÙ# %
{
ÚÚ 
table
ÛÛ 
.
ÛÛ 

PrimaryKey
ÛÛ $
(
ÛÛ$ %
$str
ÛÛ% 3
,
ÛÛ3 4
x
ÛÛ5 6
=>
ÛÛ7 9
x
ÛÛ: ;
.
ÛÛ; <

LanguageId
ÛÛ< F
)
ÛÛF G
;
ÛÛG H
table
ÜÜ 
.
ÜÜ 

ForeignKey
ÜÜ $
(
ÜÜ$ %
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ N
,
ÝÝN O
column
ÞÞ 
:
ÞÞ 
x
ÞÞ  !
=>
ÞÞ" $
x
ÞÞ% &
.
ÞÞ& '
PersonalDetailsId
ÞÞ' 8
,
ÞÞ8 9
principalTable
ßß &
:
ßß& '
$str
ßß( 9
,
ßß9 :
principalColumn
àà '
:
àà' (
$str
àà) <
,
àà< =
onDelete
áá  
:
áá  !
ReferentialAction
áá" 3
.
áá3 4
NoAction
áá4 <
)
áá< =
;
áá= >
}
ââ 
)
ââ 
;
ââ 
migrationBuilder
ää 
.
ää 
CreateTable
ää (
(
ää( )
name
åå 
:
åå 
$str
åå $
,
åå$ %
columns
ææ 
:
ææ 
table
ææ 
=>
ææ !
new
ææ" %
{
çç 
SocialMedia_Id
èè "
=
èè# $
table
èè% *
.
èè* +
Column
èè+ 1
<
èè1 2
int
èè2 5
>
èè5 6
(
èè6 7
type
èè7 ;
:
èè; <
$str
èè= B
,
èèB C
nullable
èèD L
:
èèL M
false
èèN S
)
èèS T
.
éé 

Annotation
éé #
(
éé# $
$str
éé$ 8
,
éé8 9
$str
éé: @
)
éé@ A
,
ééA B
SocialMedia_Name
êê $
=
êê% &
table
êê' ,
.
êê, -
Column
êê- 3
<
êê3 4
string
êê4 :
>
êê: ;
(
êê; <
type
êê< @
:
êê@ A
$str
êêB Q
,
êêQ R
nullable
êêS [
:
êê[ \
false
êê] b
)
êêb c
,
êêc d
SocialMedia_Link
ëë $
=
ëë% &
table
ëë' ,
.
ëë, -
Column
ëë- 3
<
ëë3 4
string
ëë4 :
>
ëë: ;
(
ëë; <
type
ëë< @
:
ëë@ A
$str
ëëB Q
,
ëëQ R
nullable
ëëS [
:
ëë[ \
false
ëë] b
)
ëëb c
,
ëëc d
PersonalDetailsId
ìì %
=
ìì& '
table
ìì( -
.
ìì- .
Column
ìì. 4
<
ìì4 5
int
ìì5 8
>
ìì8 9
(
ìì9 :
type
ìì: >
:
ìì> ?
$str
ìì@ E
,
ììE F
nullable
ììG O
:
ììO P
false
ììQ V
)
ììV W
,
ììW X
	CreatedOn
íí 
=
íí 
table
íí  %
.
íí% &
Column
íí& ,
<
íí, -
DateTime
íí- 5
>
íí5 6
(
íí6 7
type
íí7 ;
:
íí; <
$str
íí= H
,
ííH I
nullable
ííJ R
:
ííR S
true
ííT X
)
ííX Y
,
ííY Z
	CreatedBy
îî 
=
îî 
table
îî  %
.
îî% &
Column
îî& ,
<
îî, -
int
îî- 0
>
îî0 1
(
îî1 2
type
îî2 6
:
îî6 7
$str
îî8 =
,
îî= >
nullable
îî? G
:
îîG H
true
îîI M
)
îîM N
,
îîN O
	UpdatedOn
ïï 
=
ïï 
table
ïï  %
.
ïï% &
Column
ïï& ,
<
ïï, -
DateTime
ïï- 5
>
ïï5 6
(
ïï6 7
type
ïï7 ;
:
ïï; <
$str
ïï= H
,
ïïH I
nullable
ïïJ R
:
ïïR S
true
ïïT X
)
ïïX Y
,
ïïY Z
	UpdatedBy
ðð 
=
ðð 
table
ðð  %
.
ðð% &
Column
ðð& ,
<
ðð, -
int
ðð- 0
>
ðð0 1
(
ðð1 2
type
ðð2 6
:
ðð6 7
$str
ðð8 =
,
ðð= >
nullable
ðð? G
:
ððG H
true
ððI M
)
ððM N
,
ððN O
IsActive
ññ 
=
ññ 
table
ññ $
.
ññ$ %
Column
ññ% +
<
ññ+ ,
bool
ññ, 0
>
ññ0 1
(
ññ1 2
type
ññ2 6
:
ññ6 7
$str
ññ8 =
,
ññ= >
nullable
ññ? G
:
ññG H
false
ññI N
)
ññN O
}
òò 
,
òò 
constraints
óó 
:
óó 
table
óó "
=>
óó# %
{
ôô 
table
õõ 
.
õõ 

PrimaryKey
õõ $
(
õõ$ %
$str
õõ% 6
,
õõ6 7
x
õõ8 9
=>
õõ: <
x
õõ= >
.
õõ> ?
SocialMedia_Id
õõ? M
)
õõM N
;
õõN O
table
öö 
.
öö 

ForeignKey
öö $
(
öö$ %
name
÷÷ 
:
÷÷ 
$str
÷÷ Q
,
÷÷Q R
column
øø 
:
øø 
x
øø  !
=>
øø" $
x
øø% &
.
øø& '
PersonalDetailsId
øø' 8
,
øø8 9
principalTable
ùù &
:
ùù& '
$str
ùù( 9
,
ùù9 :
principalColumn
úú '
:
úú' (
$str
úú) <
,
úú< =
onDelete
ûû  
:
ûû  !
ReferentialAction
ûû" 3
.
ûû3 4
NoAction
ûû4 <
)
ûû< =
;
ûû= >
}
üü 
)
üü 
;
üü 
migrationBuilder
þþ 
.
þþ 

InsertData
þþ '
(
þþ' (
table
ÿÿ 
:
ÿÿ 
$str
ÿÿ !
,
ÿÿ! "
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! ,
,
, -
$str
. ;
,
; <
$str
= G
}
H I
,
I J
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
$str
  
,
  !
true
" &
}
' (
,
( )
{
 
$num
 
,
 
$str
 
,
  
true
! %
}
& '
,
' (
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
 
true
 #
}
$ %
,
% &
{
 
$num
 
,
 
$str
 
,
  
true
! %
}
& '
,
' (
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 %
,
% &
true
' +
}
, -
,
- .
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
  
true
! %
}
& '
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 %
,
% &
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! 0
,
0 1
$str
2 C
,
C D
$str
E O
}
P Q
,
Q R
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
 
true
 #
}
$ %
,
% &
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
  
true
! %
}
& '
,
' (
{
 
$num
 
,
 
$str
 
,
  
true
! %
}
& '
,
' (
{
 
$num
 
,
 
$str
 
,
 
true
  $
}
% &
,
& '
{
 
$num
 
,
 
$str
 
,
  
true
! %
}
& '
}
 
)
 
;
 
migrationBuilder
   
.
   

InsertData
   '
(
  ' (
table
¡¡ 
:
¡¡ 
$str
¡¡ %
,
¡¡% &
columns
¢¢ 
:
¢¢ 
new
¢¢ 
[
¢¢ 
]
¢¢ 
{
¢¢  
$str
¢¢! 0
,
¢¢0 1
$str
¢¢2 C
,
¢¢C D
$str
¢¢E O
}
¢¢P Q
,
¢¢Q R
values
££ 
:
££ 
new
££ 
object
££ "
[
££" #
,
££# $
]
££$ %
{
¤¤ 
{
¥¥ 
$num
¥¥ 
,
¥¥ 
$str
¥¥ 
,
¥¥ 
true
¥¥ #
}
¥¥$ %
,
¥¥% &
{
¦¦ 
$num
¦¦ 
,
¦¦ 
$str
¦¦  
,
¦¦  !
true
¦¦" &
}
¦¦' (
,
¦¦( )
{
§§ 
$num
§§ 
,
§§ 
$str
§§ 
,
§§ 
true
§§  $
}
§§% &
,
§§& '
{
¨¨ 
$num
¨¨ 
,
¨¨ 
$str
¨¨ 
,
¨¨ 
true
¨¨ #
}
¨¨$ %
,
¨¨% &
{
©© 
$num
©© 
,
©© 
$str
©© 
,
©© 
true
©©  $
}
©©% &
,
©©& '
{
ªª 
$num
ªª 
,
ªª 
$str
ªª 
,
ªª 
true
ªª #
}
ªª$ %
,
ªª% &
{
«« 
$num
«« 
,
«« 
$str
«« 
,
«« 
true
«« #
}
««$ %
,
««% &
{
¬¬ 
$num
¬¬ 
,
¬¬ 
$str
¬¬ 
,
¬¬ 
true
¬¬ #
}
¬¬$ %
,
¬¬% &
{
­­ 
$num
­­ 
,
­­ 
$str
­­ 
,
­­ 
true
­­ #
}
­­$ %
,
­­% &
{
®® 
$num
®® 
,
®® 
$str
®® 
,
®® 
true
®®  $
}
®®% &
,
®®& '
{
¯¯ 
$num
¯¯ 
,
¯¯ 
$str
¯¯ 
,
¯¯  
true
¯¯! %
}
¯¯& '
,
¯¯' (
{
°° 
$num
°° 
,
°° 
$str
°° 
,
°° 
true
°°  $
}
°°% &
}
±± 
)
±± 
;
±± 
migrationBuilder
³³ 
.
³³ 

InsertData
³³ '
(
³³' (
table
´´ 
:
´´ 
$str
´´  
,
´´  !
columns
µµ 
:
µµ 
new
µµ 
[
µµ 
]
µµ 
{
µµ  
$str
µµ! +
,
µµ+ ,
$str
µµ- 9
,
µµ9 :
$str
µµ; E
}
µµF G
,
µµG H
values
¶¶ 
:
¶¶ 
new
¶¶ 
object
¶¶ "
[
¶¶" #
,
¶¶# $
]
¶¶$ %
{
·· 
{
¸¸ 
$num
¸¸ 
,
¸¸ 
$str
¸¸ 
,
¸¸ 
true
¸¸ #
}
¸¸$ %
,
¸¸% &
{
¹¹ 
$num
¹¹ 
,
¹¹ 
$str
¹¹ $
,
¹¹$ %
true
¹¹& *
}
¹¹+ ,
,
¹¹, -
{
ºº 
$num
ºº 
,
ºº 
$str
ºº 
,
ºº 
true
ºº  $
}
ºº% &
,
ºº& '
{
»» 
$num
»» 
,
»» 
$str
»» !
,
»»! "
true
»»# '
}
»»( )
,
»») *
{
¼¼ 
$num
¼¼ 
,
¼¼ 
$str
¼¼ 
,
¼¼ 
true
¼¼ #
}
¼¼$ %
,
¼¼% &
{
½½ 
$num
½½ 
,
½½ 
$str
½½ $
,
½½$ %
true
½½& *
}
½½+ ,
,
½½, -
{
¾¾ 
$num
¾¾ 
,
¾¾ 
$str
¾¾ &
,
¾¾& '
true
¾¾( ,
}
¾¾- .
,
¾¾. /
{
¿¿ 
$num
¿¿ 
,
¿¿ 
$str
¿¿ "
,
¿¿" #
true
¿¿$ (
}
¿¿) *
,
¿¿* +
{
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
$str
ÀÀ 
,
ÀÀ  
true
ÀÀ! %
}
ÀÀ& '
,
ÀÀ' (
{
ÁÁ 
$num
ÁÁ 
,
ÁÁ 
$str
ÁÁ "
,
ÁÁ" #
true
ÁÁ$ (
}
ÁÁ) *
}
ÂÂ 
)
ÂÂ 
;
ÂÂ 
migrationBuilder
ÄÄ 
.
ÄÄ 

InsertData
ÄÄ '
(
ÄÄ' (
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ  
columns
ÆÆ 
:
ÆÆ 
new
ÆÆ 
[
ÆÆ 
]
ÆÆ 
{
ÆÆ  
$str
ÆÆ! +
,
ÆÆ+ ,
$str
ÆÆ- 9
,
ÆÆ9 :
$str
ÆÆ; E
}
ÆÆF G
,
ÆÆG H
values
ÇÇ 
:
ÇÇ 
new
ÇÇ 
object
ÇÇ "
[
ÇÇ" #
,
ÇÇ# $
]
ÇÇ$ %
{
ÈÈ 
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
true
ÉÉ! %
}
ÉÉ& '
,
ÉÉ' (
{
ÊÊ 
$num
ÊÊ 
,
ÊÊ 
$str
ÊÊ !
,
ÊÊ! "
true
ÊÊ# '
}
ÊÊ( )
,
ÊÊ) *
{
ËË 
$num
ËË 
,
ËË 
$str
ËË !
,
ËË! "
true
ËË# '
}
ËË( )
}
ÌÌ 
)
ÌÌ 
;
ÌÌ 
migrationBuilder
ÎÎ 
.
ÎÎ 

InsertData
ÎÎ '
(
ÎÎ' (
table
ÏÏ 
:
ÏÏ 
$str
ÏÏ &
,
ÏÏ& '
columns
ÐÐ 
:
ÐÐ 
new
ÐÐ 
[
ÐÐ 
]
ÐÐ 
{
ÐÐ  
$str
ÐÐ! 1
,
ÐÐ1 2
$str
ÐÐ3 =
,
ÐÐ= >
$str
ÐÐ? Q
}
ÐÐR S
,
ÐÐS T
values
ÑÑ 
:
ÑÑ 
new
ÑÑ 
object
ÑÑ "
[
ÑÑ" #
,
ÑÑ# $
]
ÑÑ$ %
{
ÒÒ 
{
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
true
ÓÓ 
,
ÓÓ 
$str
ÓÓ ,
}
ÓÓ- .
,
ÓÓ. /
{
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
true
ÔÔ 
,
ÔÔ 
$str
ÔÔ (
}
ÔÔ) *
,
ÔÔ* +
{
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
true
ÕÕ 
,
ÕÕ 
$str
ÕÕ (
}
ÕÕ) *
,
ÕÕ* +
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
true
ÖÖ 
,
ÖÖ 
$str
ÖÖ &
}
ÖÖ' (
,
ÖÖ( )
{
×× 
$num
×× 
,
×× 
true
×× 
,
×× 
$str
×× '
}
××( )
,
××) *
{
ØØ 
$num
ØØ 
,
ØØ 
true
ØØ 
,
ØØ 
$str
ØØ #
}
ØØ$ %
,
ØØ% &
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
true
ÙÙ 
,
ÙÙ 
$str
ÙÙ &
}
ÙÙ' (
,
ÙÙ( )
{
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
true
ÚÚ 
,
ÚÚ 
$str
ÚÚ $
}
ÚÚ% &
,
ÚÚ& '
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
true
ÛÛ 
,
ÛÛ 
$str
ÛÛ #
}
ÛÛ$ %
,
ÛÛ% &
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
true
ÜÜ 
,
ÜÜ 
$str
ÜÜ  &
}
ÜÜ' (
}
ÝÝ 
)
ÝÝ 
;
ÝÝ 
migrationBuilder
ßß 
.
ßß 

InsertData
ßß '
(
ßß' (
table
àà 
:
àà 
$str
àà '
,
àà' (
columns
áá 
:
áá 
new
áá 
[
áá 
]
áá 
{
áá  
$str
áá! 2
,
áá2 3
$str
áá4 >
,
áá> ?
$str
áá@ S
}
ááT U
,
ááU V
values
ââ 
:
ââ 
new
ââ 
object
ââ "
[
ââ" #
,
ââ# $
]
ââ$ %
{
ãã 
{
ää 
$num
ää 
,
ää 
true
ää 
,
ää 
$str
ää )
}
ää* +
,
ää+ ,
{
åå 
$num
åå 
,
åå 
true
åå 
,
åå 
$str
åå (
}
åå) *
,
åå* +
{
ææ 
$num
ææ 
,
ææ 
true
ææ 
,
ææ 
$str
ææ )
}
ææ* +
}
çç 
)
çç 
;
çç 
migrationBuilder
éé 
.
éé 

InsertData
éé '
(
éé' (
table
êê 
:
êê 
$str
êê %
,
êê% &
columns
ëë 
:
ëë 
new
ëë 
[
ëë 
]
ëë 
{
ëë  
$str
ëë! /
,
ëë/ 0
$str
ëë1 ;
,
ëë; <
$str
ëë= M
}
ëëN O
,
ëëO P
values
ìì 
:
ìì 
new
ìì 
object
ìì "
[
ìì" #
,
ìì# $
]
ìì$ %
{
íí 
{
îî 
$num
îî 
,
îî 
true
îî 
,
îî 
$str
îî %
}
îî& '
,
îî' (
{
ïï 
$num
ïï 
,
ïï 
true
ïï 
,
ïï 
$str
ïï '
}
ïï( )
,
ïï) *
{
ðð 
$num
ðð 
,
ðð 
true
ðð 
,
ðð 
$str
ðð %
}
ðð& '
,
ðð' (
{
ññ 
$num
ññ 
,
ññ 
true
ññ 
,
ññ 
$str
ññ $
}
ññ% &
,
ññ& '
{
òò 
$num
òò 
,
òò 
true
òò 
,
òò 
$str
òò $
}
òò% &
,
òò& '
{
óó 
$num
óó 
,
óó 
true
óó 
,
óó 
$str
óó '
}
óó( )
,
óó) *
{
ôô 
$num
ôô 
,
ôô 
true
ôô 
,
ôô 
$str
ôô $
}
ôô% &
,
ôô& '
{
õõ 
$num
õõ 
,
õõ 
true
õõ 
,
õõ 
$str
õõ (
}
õõ) *
,
õõ* +
{
öö 
$num
öö 
,
öö 
true
öö 
,
öö 
$str
öö "
}
öö# $
,
öö$ %
{
÷÷ 
$num
÷÷ 
,
÷÷ 
true
÷÷ 
,
÷÷ 
$str
÷÷  '
}
÷÷( )
}
øø 
)
øø 
;
øø 
migrationBuilder
úú 
.
úú 

InsertData
úú '
(
úú' (
table
ûû 
:
ûû 
$str
ûû (
,
ûû( )
columns
üü 
:
üü 
new
üü 
[
üü 
]
üü 
{
üü  
$str
üü! 4
,
üü4 5
$str
üü6 K
,
üüK L
$str
üüM W
}
üüX Y
,
üüY Z
values
ýý 
:
ýý 
new
ýý 
object
ýý "
[
ýý" #
,
ýý# $
]
ýý$ %
{
þþ 
{
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
$str
ÿÿ !
,
ÿÿ! "
true
ÿÿ# '
}
ÿÿ( )
,
ÿÿ) *
{
 
$num
 
,
 
$str
 '
,
' (
true
) -
}
. /
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 
,
 
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! )
,
) *
$str
+ :
,
: ;
$str
< G
,
G H
$str
I T
,
T U
$str
V e
,
e f
$str
g n
,
n o
$str
p z
,
z {
$str| 
, 
$str 
, 
$str 
, 
$str  °
,° ±
$str² ¼
,¼ ½
$str¾ ×
,× Ø
$strÙ ä
,ä å
$stræ ñ
,ñ ò
$stró ý
}þ ÿ
,ÿ 
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
$num
 
,
 
null
  
,
  !
null
" &
,
& '
$num
( )
,
) *
$str
+ @
,
@ A
$num
B C
,
C D
true
E I
,
I J
$str
K W
,
W X
$str
Y e
,
e f
$num
g h
,
h i
$str
j w
,
w x
$stry 
, 
null 
, 
null 
, 
$str 
} 
, 
{
 
$num
 
,
 
$num
 
,
 
null
  
,
  !
null
" &
,
& '
$num
( )
,
) *
$str
+ >
,
> ?
$num
@ A
,
A B
true
C G
,
G H
$str
I U
,
U V
$str
W ^
,
^ _
$num
` a
,
a b
$str
c q
,
q r
$str
s ~
,
~ 
null 
, 
null 
, 
$str 
} 
, 
{
 
$num
 
,
 
$num
 
,
 
null
  
,
  !
null
" &
,
& '
$num
( )
,
) *
$str
+ >
,
> ?
$num
@ A
,
A B
true
C G
,
G H
$str
I U
,
U V
$str
W _
,
_ `
$num
a b
,
b c
$str
d q
,
q r
$str
s ~
,
~ 
null 
, 
null 
, 
$str 
} 
, 
{
 
$num
 
,
 
$num
 
,
 
null
  
,
  !
null
" &
,
& '
$num
( )
,
) *
$str
+ @
,
@ A
$num
B C
,
C D
true
E I
,
I J
$str
K W
,
W X
$str
Y b
,
b c
$num
d e
,
e f
$str
g u
,
u v
$str
w 
, 
null 
, 
null 
, 
$str 
} 
, 
{
 
$num
 
,
 
$num
 
,
 
null
  
,
  !
null
" &
,
& '
$num
( )
,
) *
$str
+ ?
,
? @
$num
A B
,
B C
true
D H
,
H I
$str
J V
,
V W
$str
X a
,
a b
$num
c d
,
d e
$str
f t
,
t u
$strv 
, 
null 
, 
null 
, 
$str 
} 
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
  
,
  !
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! ,
,
, -
$str
. 9
,
9 :
$str
; F
,
F G
$str
H R
,
R S
$str
T e
,
e f
$str
g r
,
r s
$str
t |
}
} ~
,
~ 
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
null
 
,
 
null
 #
,
# $
true
% )
,
) *
$num
+ ,
,
, -
null
. 2
,
2 3
$num
4 5
}
6 7
,
7 8
{
 
$num
 
,
 
null
 
,
 
null
 #
,
# $
true
% )
,
) *
$num
+ ,
,
, -
null
. 2
,
2 3
$num
4 5
}
6 7
,
7 8
{
 
$num
 
,
 
null
 
,
 
null
 #
,
# $
true
% )
,
) *
$num
+ ,
,
, -
null
. 2
,
2 3
$num
4 5
}
6 7
,
7 8
{
 
$num
 
,
 
null
 
,
 
null
 #
,
# $
true
% )
,
) *
$num
+ ,
,
, -
null
. 2
,
2 3
$num
4 5
}
6 7
,
7 8
{
 
$num
 
,
 
null
 
,
 
null
 #
,
# $
true
% )
,
) *
$num
+ ,
,
, -
null
. 2
,
2 3
$num
4 5
}
6 7
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 %
,
% &
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! 0
,
0 1
$str
2 D
,
D E
$str
F Y
,
Y Z
$str
[ f
,
f g
$str
h s
,
s t
$str
u 
, 
$str 
, 
$str 
, 
$str ¦
,¦ §
$str¨ ¶
}· ¸
,¸ ¹
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
   
$num
   
,
   
null
   
,
   
$num
    
,
    !
null
  " &
,
  & '
null
  ( ,
,
  , -
true
  . 2
,
  2 3
$num
  4 5
,
  5 6
null
  7 ;
,
  ; <
null
  = A
,
  A B
$str
  C H
}
  I J
,
  J K
{
¡¡ 
$num
¡¡ 
,
¡¡ 
null
¡¡ 
,
¡¡ 
$num
¡¡  
,
¡¡  !
null
¡¡" &
,
¡¡& '
null
¡¡( ,
,
¡¡, -
true
¡¡. 2
,
¡¡2 3
$num
¡¡4 5
,
¡¡5 6
null
¡¡7 ;
,
¡¡; <
null
¡¡= A
,
¡¡A B
$str
¡¡C H
}
¡¡I J
,
¡¡J K
{
¢¢ 
$num
¢¢ 
,
¢¢ 
null
¢¢ 
,
¢¢ 
$num
¢¢  
,
¢¢  !
null
¢¢" &
,
¢¢& '
null
¢¢( ,
,
¢¢, -
true
¢¢. 2
,
¢¢2 3
$num
¢¢4 5
,
¢¢5 6
null
¢¢7 ;
,
¢¢; <
null
¢¢= A
,
¢¢A B
$str
¢¢C H
}
¢¢I J
,
¢¢J K
{
££ 
$num
££ 
,
££ 
null
££ 
,
££ 
$num
££  
,
££  !
null
££" &
,
££& '
null
££( ,
,
££, -
true
££. 2
,
££2 3
$num
££4 5
,
££5 6
null
££7 ;
,
££; <
null
££= A
,
££A B
$str
££C H
}
££I J
,
££J K
{
¤¤ 
$num
¤¤ 
,
¤¤ 
null
¤¤ 
,
¤¤ 
$num
¤¤  
,
¤¤  !
null
¤¤" &
,
¤¤& '
null
¤¤( ,
,
¤¤, -
true
¤¤. 2
,
¤¤2 3
$num
¤¤4 5
,
¤¤5 6
null
¤¤7 ;
,
¤¤; <
null
¤¤= A
,
¤¤A B
$str
¤¤C H
}
¤¤I J
}
¥¥ 
)
¥¥ 
;
¥¥ 
migrationBuilder
§§ 
.
§§ 

InsertData
§§ '
(
§§' (
table
¨¨ 
:
¨¨ 
$str
¨¨ #
,
¨¨# $
columns
©© 
:
©© 
new
©© 
[
©© 
]
©© 
{
©©  
$str
©©! .
,
©©. /
$str
©©0 ;
,
©©; <
$str
©©= E
,
©©E F
$str
©©G R
,
©©R S
$str
©©T _
,
©©_ `
$str
©©a i
,
©©i j
$str
©©k s
,
©©s t
$str
©©u 
,©© 
$str©© 
,©© 
$str©© 
,©© 
$str©© ¦
,©©¦ §
$str©©¨ ³
,©©³ ´
$str©©µ À
}©©Á Â
,©©Â Ã
values
ªª 
:
ªª 
new
ªª 
object
ªª "
[
ªª" #
,
ªª# $
]
ªª$ %
{
«« 
{
¬¬ 
$num
¬¬ 
,
¬¬ 
$num
¬¬ 
,
¬¬ 
$str
¬¬ !
,
¬¬! "
null
¬¬# '
,
¬¬' (
null
¬¬) -
,
¬¬- .
$str
¬¬/ 3
,
¬¬3 4
$num
¬¬5 9
,
¬¬9 :
true
¬¬; ?
,
¬¬? @
$num
¬¬A F
,
¬¬F G
$num
¬¬H I
,
¬¬I J
$num
¬¬K O
,
¬¬O P
null
¬¬Q U
,
¬¬U V
null
¬¬W [
}
¬¬\ ]
,
¬¬] ^
{
­­ 
$num
­­ 
,
­­ 
$num
­­ 
,
­­ 
$str
­­  
,
­­  !
null
­­" &
,
­­& '
null
­­( ,
,
­­, -
$str
­­. 5
,
­­5 6
$num
­­7 ;
,
­­; <
true
­­= A
,
­­A B
$num
­­C H
,
­­H I
$num
­­J K
,
­­K L
$num
­­M Q
,
­­Q R
null
­­S W
,
­­W X
null
­­Y ]
}
­­^ _
,
­­_ `
{
®® 
$num
®® 
,
®® 
$num
®® 
,
®® 
$str
®® !
,
®®! "
null
®®# '
,
®®' (
null
®®) -
,
®®- .
$str
®®/ 4
,
®®4 5
$num
®®6 :
,
®®: ;
true
®®< @
,
®®@ A
$num
®®B E
,
®®E F
$num
®®G H
,
®®H I
$num
®®J N
,
®®N O
null
®®P T
,
®®T U
null
®®V Z
}
®®[ \
,
®®\ ]
{
¯¯ 
$num
¯¯ 
,
¯¯ 
$num
¯¯ 
,
¯¯ 
$str
¯¯ "
,
¯¯" #
null
¯¯$ (
,
¯¯( )
null
¯¯* .
,
¯¯. /
$str
¯¯0 4
,
¯¯4 5
$num
¯¯6 :
,
¯¯: ;
true
¯¯< @
,
¯¯@ A
$num
¯¯B G
,
¯¯G H
$num
¯¯I J
,
¯¯J K
$num
¯¯L P
,
¯¯P Q
null
¯¯R V
,
¯¯V W
null
¯¯X \
}
¯¯] ^
,
¯¯^ _
{
°° 
$num
°° 
,
°° 
$num
°° 
,
°° 
$str
°°  
,
°°  !
null
°°" &
,
°°& '
null
°°( ,
,
°°, -
$str
°°. 5
,
°°5 6
$num
°°7 ;
,
°°; <
true
°°= A
,
°°A B
$num
°°C H
,
°°H I
$num
°°J K
,
°°K L
$num
°°M Q
,
°°Q R
null
°°S W
,
°°W X
null
°°Y ]
}
°°^ _
}
±± 
)
±± 
;
±± 
migrationBuilder
³³ 
.
³³ 

InsertData
³³ '
(
³³' (
table
´´ 
:
´´ 
$str
´´ (
,
´´( )
columns
µµ 
:
µµ 
new
µµ 
[
µµ 
]
µµ 
{
µµ  
$str
µµ! 4
,
µµ4 5
$str
µµ6 A
,
µµA B
$str
µµC N
,
µµN O
$str
µµP ]
,
µµ] ^
$str
µµ_ n
,
µµn o
$str
µµp w
,
µµw x
$strµµy 
,µµ 
$strµµ 
,µµ 
$strµµ 
,µµ  
$strµµ¡ ¬
,µµ¬ ­
$strµµ® ¹
,µµ¹ º
$strµµ» Æ
,µµÆ Ç
$strµµÈ Ð
,µµÐ Ñ
$strµµÒ à
}µµá â
,µµâ ã
values
¶¶ 
:
¶¶ 
new
¶¶ 
object
¶¶ "
[
¶¶" #
,
¶¶# $
]
¶¶$ %
{
·· 
{
¸¸ 
$num
¸¸ 
,
¸¸ 
null
¸¸ 
,
¸¸ 
null
¸¸ #
,
¸¸# $
new
¸¸% (
DateTime
¸¸) 1
(
¸¸1 2
$num
¸¸2 6
,
¸¸6 7
$num
¸¸8 :
,
¸¸: ;
$num
¸¸< >
,
¸¸> ?
$num
¸¸@ A
,
¸¸A B
$num
¸¸C D
,
¸¸D E
$num
¸¸F G
,
¸¸G H
$num
¸¸I J
,
¸¸J K
DateTimeKind
¸¸L X
.
¸¸X Y
Unspecified
¸¸Y d
)
¸¸d e
,
¸¸e f
new
¸¸g j
DateTime
¸¸k s
(
¸¸s t
$num
¸¸t x
,
¸¸x y
$num
¸¸z {
,
¸¸{ |
$num
¸¸} 
,¸¸ 
$num¸¸ 
,¸¸ 
$num¸¸ 
,¸¸ 
$num¸¸ 
,¸¸ 
$num¸¸ 
,¸¸ 
DateTimeKind¸¸ 
.¸¸ 
Unspecified¸¸ ¥
)¸¸¥ ¦
,¸¸¦ §
null¸¸¨ ¬
,¸¸¬ ­
true¸¸® ²
,¸¸² ³
$str¸¸´ ¼
,¸¸¼ ½
$str¸¸¾ Î
,¸¸Î Ï
$num¸¸Ð Ñ
,¸¸Ñ Ò
null¸¸Ó ×
,¸¸× Ø
null¸¸Ù Ý
,¸¸Ý Þ
$num¸¸ß à
,¸¸à á
$str¸¸â ç
}¸¸è é
,¸¸é ê
{
¹¹ 
$num
¹¹ 
,
¹¹ 
null
¹¹ 
,
¹¹ 
null
¹¹ #
,
¹¹# $
new
¹¹% (
DateTime
¹¹) 1
(
¹¹1 2
$num
¹¹2 6
,
¹¹6 7
$num
¹¹8 9
,
¹¹9 :
$num
¹¹; =
,
¹¹= >
$num
¹¹? @
,
¹¹@ A
$num
¹¹B C
,
¹¹C D
$num
¹¹E F
,
¹¹F G
$num
¹¹H I
,
¹¹I J
DateTimeKind
¹¹K W
.
¹¹W X
Unspecified
¹¹X c
)
¹¹c d
,
¹¹d e
new
¹¹f i
DateTime
¹¹j r
(
¹¹r s
$num
¹¹s w
,
¹¹w x
$num
¹¹y z
,
¹¹z {
$num
¹¹| ~
,
¹¹~ 
$num¹¹ 
,¹¹ 
$num¹¹ 
,¹¹ 
$num¹¹ 
,¹¹ 
$num¹¹ 
,¹¹ 
DateTimeKind¹¹ 
.¹¹ 
Unspecified¹¹ ¤
)¹¹¤ ¥
,¹¹¥ ¦
null¹¹§ «
,¹¹« ¬
true¹¹­ ±
,¹¹± ²
$str¹¹³ »
,¹¹» ¼
$str¹¹½ Í
,¹¹Í Î
$num¹¹Ï Ð
,¹¹Ð Ñ
null¹¹Ò Ö
,¹¹Ö ×
null¹¹Ø Ü
,¹¹Ü Ý
$num¹¹Þ ß
,¹¹ß à
$str¹¹á æ
}¹¹ç è
,¹¹è é
{
ºº 
$num
ºº 
,
ºº 
null
ºº 
,
ºº 
null
ºº #
,
ºº# $
new
ºº% (
DateTime
ºº) 1
(
ºº1 2
$num
ºº2 6
,
ºº6 7
$num
ºº8 :
,
ºº: ;
$num
ºº< >
,
ºº> ?
$num
ºº@ A
,
ººA B
$num
ººC D
,
ººD E
$num
ººF G
,
ººG H
$num
ººI J
,
ººJ K
DateTimeKind
ººL X
.
ººX Y
Unspecified
ººY d
)
ººd e
,
ººe f
new
ººg j
DateTime
ººk s
(
ººs t
$num
ººt x
,
ººx y
$num
ººz {
,
ºº{ |
$num
ºº} 
,ºº 
$numºº 
,ºº 
$numºº 
,ºº 
$numºº 
,ºº 
$numºº 
,ºº 
DateTimeKindºº 
.ºº 
Unspecifiedºº ¥
)ºº¥ ¦
,ºº¦ §
nullºº¨ ¬
,ºº¬ ­
trueºº® ²
,ºº² ³
$strºº´ ¼
,ºº¼ ½
$strºº¾ Î
,ººÎ Ï
$numººÐ Ñ
,ººÑ Ò
nullººÓ ×
,ºº× Ø
nullººÙ Ý
,ººÝ Þ
$numººß à
,ººà á
$strººâ ç
}ººè é
,ººé ê
{
»» 
$num
»» 
,
»» 
null
»» 
,
»» 
null
»» #
,
»»# $
new
»»% (
DateTime
»») 1
(
»»1 2
$num
»»2 6
,
»»6 7
$num
»»8 :
,
»»: ;
$num
»»< =
,
»»= >
$num
»»? @
,
»»@ A
$num
»»B C
,
»»C D
$num
»»E F
,
»»F G
$num
»»H I
,
»»I J
DateTimeKind
»»K W
.
»»W X
Unspecified
»»X c
)
»»c d
,
»»d e
new
»»f i
DateTime
»»j r
(
»»r s
$num
»»s w
,
»»w x
$num
»»y z
,
»»z {
$num
»»| ~
,
»»~ 
$num»» 
,»» 
$num»» 
,»» 
$num»» 
,»» 
$num»» 
,»» 
DateTimeKind»» 
.»» 
Unspecified»» ¤
)»»¤ ¥
,»»¥ ¦
null»»§ «
,»»« ¬
true»»­ ±
,»»± ²
$str»»³ »
,»»» ¼
$str»»½ Í
,»»Í Î
$num»»Ï Ð
,»»Ð Ñ
null»»Ò Ö
,»»Ö ×
null»»Ø Ü
,»»Ü Ý
$num»»Þ ß
,»»ß à
$str»»á æ
}»»ç è
,»»è é
{
¼¼ 
$num
¼¼ 
,
¼¼ 
null
¼¼ 
,
¼¼ 
null
¼¼ #
,
¼¼# $
new
¼¼% (
DateTime
¼¼) 1
(
¼¼1 2
$num
¼¼2 6
,
¼¼6 7
$num
¼¼8 9
,
¼¼9 :
$num
¼¼; =
,
¼¼= >
$num
¼¼? @
,
¼¼@ A
$num
¼¼B C
,
¼¼C D
$num
¼¼E F
,
¼¼F G
$num
¼¼H I
,
¼¼I J
DateTimeKind
¼¼K W
.
¼¼W X
Unspecified
¼¼X c
)
¼¼c d
,
¼¼d e
new
¼¼f i
DateTime
¼¼j r
(
¼¼r s
$num
¼¼s w
,
¼¼w x
$num
¼¼y z
,
¼¼z {
$num
¼¼| ~
,
¼¼~ 
$num¼¼ 
,¼¼ 
$num¼¼ 
,¼¼ 
$num¼¼ 
,¼¼ 
$num¼¼ 
,¼¼ 
DateTimeKind¼¼ 
.¼¼ 
Unspecified¼¼ ¤
)¼¼¤ ¥
,¼¼¥ ¦
null¼¼§ «
,¼¼« ¬
true¼¼­ ±
,¼¼± ²
$str¼¼³ »
,¼¼» ¼
$str¼¼½ Í
,¼¼Í Î
$num¼¼Ï Ð
,¼¼Ð Ñ
null¼¼Ò Ö
,¼¼Ö ×
null¼¼Ø Ü
,¼¼Ü Ý
$num¼¼Þ ß
,¼¼ß à
$str¼¼á æ
}¼¼ç è
}
½½ 
)
½½ 
;
½½ 
migrationBuilder
¿¿ 
.
¿¿ 

InsertData
¿¿ '
(
¿¿' (
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ '
,
ÀÀ' (
columns
ÁÁ 
:
ÁÁ 
new
ÁÁ 
[
ÁÁ 
]
ÁÁ 
{
ÁÁ  
$str
ÁÁ! 3
,
ÁÁ3 4
$str
ÁÁ5 C
,
ÁÁC D
$str
ÁÁE O
,
ÁÁO P
$str
ÁÁQ \
}
ÁÁ] ^
,
ÁÁ^ _
values
ÂÂ 
:
ÂÂ 
new
ÂÂ 
object
ÂÂ "
[
ÂÂ" #
,
ÂÂ# $
]
ÂÂ$ %
{
ÃÃ 
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
new
ÄÄ 
DateTime
ÄÄ %
(
ÄÄ% &
$num
ÄÄ& *
,
ÄÄ* +
$num
ÄÄ, .
,
ÄÄ. /
$num
ÄÄ0 2
,
ÄÄ2 3
$num
ÄÄ4 5
,
ÄÄ5 6
$num
ÄÄ7 8
,
ÄÄ8 9
$num
ÄÄ: ;
,
ÄÄ; <
$num
ÄÄ= >
,
ÄÄ> ?
DateTimeKind
ÄÄ@ L
.
ÄÄL M
Unspecified
ÄÄM X
)
ÄÄX Y
,
ÄÄY Z
true
ÄÄ[ _
,
ÄÄ_ `
$num
ÄÄa b
}
ÄÄc d
,
ÄÄd e
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
new
ÅÅ 
DateTime
ÅÅ %
(
ÅÅ% &
$num
ÅÅ& *
,
ÅÅ* +
$num
ÅÅ, -
,
ÅÅ- .
$num
ÅÅ/ 1
,
ÅÅ1 2
$num
ÅÅ3 4
,
ÅÅ4 5
$num
ÅÅ6 7
,
ÅÅ7 8
$num
ÅÅ9 :
,
ÅÅ: ;
$num
ÅÅ< =
,
ÅÅ= >
DateTimeKind
ÅÅ? K
.
ÅÅK L
Unspecified
ÅÅL W
)
ÅÅW X
,
ÅÅX Y
true
ÅÅZ ^
,
ÅÅ^ _
$num
ÅÅ` a
}
ÅÅb c
,
ÅÅc d
{
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
new
ÆÆ 
DateTime
ÆÆ %
(
ÆÆ% &
$num
ÆÆ& *
,
ÆÆ* +
$num
ÆÆ, .
,
ÆÆ. /
$num
ÆÆ0 2
,
ÆÆ2 3
$num
ÆÆ4 5
,
ÆÆ5 6
$num
ÆÆ7 8
,
ÆÆ8 9
$num
ÆÆ: ;
,
ÆÆ; <
$num
ÆÆ= >
,
ÆÆ> ?
DateTimeKind
ÆÆ@ L
.
ÆÆL M
Unspecified
ÆÆM X
)
ÆÆX Y
,
ÆÆY Z
true
ÆÆ[ _
,
ÆÆ_ `
$num
ÆÆa b
}
ÆÆc d
,
ÆÆd e
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
new
ÇÇ 
DateTime
ÇÇ %
(
ÇÇ% &
$num
ÇÇ& *
,
ÇÇ* +
$num
ÇÇ, .
,
ÇÇ. /
$num
ÇÇ0 2
,
ÇÇ2 3
$num
ÇÇ4 5
,
ÇÇ5 6
$num
ÇÇ7 8
,
ÇÇ8 9
$num
ÇÇ: ;
,
ÇÇ; <
$num
ÇÇ= >
,
ÇÇ> ?
DateTimeKind
ÇÇ@ L
.
ÇÇL M
Unspecified
ÇÇM X
)
ÇÇX Y
,
ÇÇY Z
true
ÇÇ[ _
,
ÇÇ_ `
$num
ÇÇa b
}
ÇÇc d
}
ÈÈ 
)
ÈÈ 
;
ÈÈ 
migrationBuilder
ÊÊ 
.
ÊÊ 

InsertData
ÊÊ '
(
ÊÊ' (
table
ËË 
:
ËË 
$str
ËË !
,
ËË! "
columns
ÌÌ 
:
ÌÌ 
new
ÌÌ 
[
ÌÌ 
]
ÌÌ 
{
ÌÌ  
$str
ÌÌ! ,
,
ÌÌ, -
$str
ÌÌ. 9
,
ÌÌ9 :
$str
ÌÌ; F
,
ÌÌF G
$str
ÌÌH U
,
ÌÌU V
$str
ÌÌW d
,
ÌÌd e
$str
ÌÌf r
,
ÌÌr s
$str
ÌÌt ~
,
ÌÌ~ 
$strÌÌ 
,ÌÌ 
$strÌÌ ¡
,ÌÌ¡ ¢
$strÌÌ£ °
,ÌÌ° ±
$strÌÌ² Á
,ÌÌÁ Â
$strÌÌÃ Ñ
,ÌÌÑ Ò
$strÌÌÓ Þ
,ÌÌÞ ß
$strÌÌà ë
,ÌÌë ì
$strÌÌí ø
}ÌÌù ú
,ÌÌú û
values
ÍÍ 
:
ÍÍ 
new
ÍÍ 
object
ÍÍ "
[
ÍÍ" #
,
ÍÍ# $
]
ÍÍ$ %
{
ÎÎ 
{
ÏÏ 
$num
ÏÏ 
,
ÏÏ 
null
ÏÏ 
,
ÏÏ 
null
ÏÏ #
,
ÏÏ# $
$str
ÏÏ% )
,
ÏÏ) *
$str
ÏÏ+ 4
,
ÏÏ4 5
$num
ÏÏ6 :
,
ÏÏ: ;
true
ÏÏ< @
,
ÏÏ@ A
$num
ÏÏB C
,
ÏÏC D
$str
ÏÏE W
,
ÏÏW X
$str
ÏÏY ^
,
ÏÏ^ _
$str
ÏÏ` i
,
ÏÏi j
$num
ÏÏk o
,
ÏÏo p
$str
ÏÏq x
,
ÏÏx y
null
ÏÏz ~
,
ÏÏ~ 
nullÏÏ 
}ÏÏ 
,ÏÏ 
{
ÐÐ 
$num
ÐÐ 
,
ÐÐ 
null
ÐÐ 
,
ÐÐ 
null
ÐÐ #
,
ÐÐ# $
$str
ÐÐ% *
,
ÐÐ* +
$str
ÐÐ, 2
,
ÐÐ2 3
$num
ÐÐ4 8
,
ÐÐ8 9
true
ÐÐ: >
,
ÐÐ> ?
$num
ÐÐ@ A
,
ÐÐA B
$str
ÐÐC X
,
ÐÐX Y
$str
ÐÐZ _
,
ÐÐ_ `
$str
ÐÐa h
,
ÐÐh i
$num
ÐÐj n
,
ÐÐn o
$str
ÐÐp z
,
ÐÐz {
nullÐÐ| 
,ÐÐ 
nullÐÐ 
}ÐÐ 
,ÐÐ 
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
null
ÑÑ 
,
ÑÑ 
null
ÑÑ #
,
ÑÑ# $
$str
ÑÑ% )
,
ÑÑ) *
$str
ÑÑ+ 1
,
ÑÑ1 2
$num
ÑÑ3 7
,
ÑÑ7 8
true
ÑÑ9 =
,
ÑÑ= >
$num
ÑÑ? @
,
ÑÑ@ A
$str
ÑÑB U
,
ÑÑU V
$str
ÑÑW \
,
ÑÑ\ ]
$str
ÑÑ^ g
,
ÑÑg h
$num
ÑÑi m
,
ÑÑm n
$str
ÑÑo u
,
ÑÑu v
null
ÑÑw {
,
ÑÑ{ |
nullÑÑ} 
}ÑÑ 
,ÑÑ 
{
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
null
ÒÒ 
,
ÒÒ 
null
ÒÒ #
,
ÒÒ# $
$str
ÒÒ% )
,
ÒÒ) *
$str
ÒÒ+ 5
,
ÒÒ5 6
$num
ÒÒ7 ;
,
ÒÒ; <
true
ÒÒ= A
,
ÒÒA B
$num
ÒÒC D
,
ÒÒD E
$str
ÒÒF Z
,
ÒÒZ [
$str
ÒÒ\ a
,
ÒÒa b
$str
ÒÒc m
,
ÒÒm n
$num
ÒÒo s
,
ÒÒs t
$str
ÒÒu |
,
ÒÒ| }
nullÒÒ~ 
,ÒÒ 
nullÒÒ 
}ÒÒ 
,ÒÒ 
{
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
null
ÓÓ 
,
ÓÓ 
null
ÓÓ #
,
ÓÓ# $
$str
ÓÓ% )
,
ÓÓ) *
$str
ÓÓ+ 6
,
ÓÓ6 7
$num
ÓÓ8 <
,
ÓÓ< =
true
ÓÓ> B
,
ÓÓB C
$num
ÓÓD E
,
ÓÓE F
$str
ÓÓG Y
,
ÓÓY Z
$str
ÓÓ[ `
,
ÓÓ` a
$str
ÓÓb l
,
ÓÓl m
$num
ÓÓn r
,
ÓÓr s
$str
ÓÓt z
,
ÓÓz {
nullÓÓ| 
,ÓÓ 
nullÓÓ 
}ÓÓ 
}
ÔÔ 
)
ÔÔ 
;
ÔÔ 
migrationBuilder
ÖÖ 
.
ÖÖ 

InsertData
ÖÖ '
(
ÖÖ' (
table
×× 
:
×× 
$str
×× 
,
××  
columns
ØØ 
:
ØØ 
new
ØØ 
[
ØØ 
]
ØØ 
{
ØØ  
$str
ØØ! *
,
ØØ* +
$str
ØØ, 7
,
ØØ7 8
$str
ØØ9 D
,
ØØD E
$str
ØØF P
,
ØØP Q
$str
ØØR \
,
ØØ\ ]
$str
ØØ^ i
,
ØØi j
$str
ØØk y
,
ØØy z
$strØØ{ 
,ØØ 
$strØØ 
}ØØ 
,ØØ 
values
ÙÙ 
:
ÙÙ 
new
ÙÙ 
object
ÙÙ "
[
ÙÙ" #
,
ÙÙ# $
]
ÙÙ$ %
{
ÚÚ 
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
null
ÛÛ 
,
ÛÛ 
null
ÛÛ #
,
ÛÛ# $
$num
ÛÛ% &
,
ÛÛ& '
true
ÛÛ( ,
,
ÛÛ, -
$num
ÛÛ. /
,
ÛÛ/ 0
$num
ÛÛ1 2
,
ÛÛ2 3
null
ÛÛ4 8
,
ÛÛ8 9
null
ÛÛ: >
}
ÛÛ? @
,
ÛÛ@ A
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
null
ÜÜ 
,
ÜÜ 
null
ÜÜ #
,
ÜÜ# $
$num
ÜÜ% &
,
ÜÜ& '
true
ÜÜ( ,
,
ÜÜ, -
$num
ÜÜ. /
,
ÜÜ/ 0
$num
ÜÜ1 2
,
ÜÜ2 3
null
ÜÜ4 8
,
ÜÜ8 9
null
ÜÜ: >
}
ÜÜ? @
,
ÜÜ@ A
{
ÝÝ 
$num
ÝÝ 
,
ÝÝ 
null
ÝÝ 
,
ÝÝ 
null
ÝÝ #
,
ÝÝ# $
$num
ÝÝ% &
,
ÝÝ& '
true
ÝÝ( ,
,
ÝÝ, -
$num
ÝÝ. /
,
ÝÝ/ 0
$num
ÝÝ1 2
,
ÝÝ2 3
null
ÝÝ4 8
,
ÝÝ8 9
null
ÝÝ: >
}
ÝÝ? @
,
ÝÝ@ A
{
ÞÞ 
$num
ÞÞ 
,
ÞÞ 
null
ÞÞ 
,
ÞÞ 
null
ÞÞ #
,
ÞÞ# $
$num
ÞÞ% &
,
ÞÞ& '
true
ÞÞ( ,
,
ÞÞ, -
$num
ÞÞ. /
,
ÞÞ/ 0
$num
ÞÞ1 2
,
ÞÞ2 3
null
ÞÞ4 8
,
ÞÞ8 9
null
ÞÞ: >
}
ÞÞ? @
,
ÞÞ@ A
{
ßß 
$num
ßß 
,
ßß 
null
ßß 
,
ßß 
null
ßß #
,
ßß# $
$num
ßß% &
,
ßß& '
true
ßß( ,
,
ßß, -
$num
ßß. /
,
ßß/ 0
$num
ßß1 2
,
ßß2 3
null
ßß4 8
,
ßß8 9
null
ßß: >
}
ßß? @
}
àà 
)
àà 
;
àà 
migrationBuilder
ââ 
.
ââ 

InsertData
ââ '
(
ââ' (
table
ãã 
:
ãã 
$str
ãã %
,
ãã% &
columns
ää 
:
ää 
new
ää 
[
ää 
]
ää 
{
ää  
$str
ää! 1
,
ää1 2
$str
ää3 >
,
ää> ?
$str
ää@ K
,
ääK L
$str
ääM W
,
ääW X
$str
ääY l
,
ääl m
$strään 
,ää 
$strää 
,ää 
$strää ¡
,ää¡ ¢
$strää£ ®
}ää¯ °
,ää° ±
values
åå 
:
åå 
new
åå 
object
åå "
[
åå" #
,
åå# $
]
åå$ %
{
ææ 
{
çç 
$num
çç 
,
çç 
null
çç 
,
çç 
null
çç #
,
çç# $
true
çç% )
,
çç) *
$num
çç+ ,
,
çç, -
$str
çç. @
,
çç@ A
$str
ççB L
,
ççL M
null
ççN R
,
ççR S
null
ççT X
}
ççY Z
,
ççZ [
{
èè 
$num
èè 
,
èè 
null
èè 
,
èè 
null
èè #
,
èè# $
true
èè% )
,
èè) *
$num
èè+ ,
,
èè, -
$str
èè. @
,
èè@ A
$str
èèB L
,
èèL M
null
èèN R
,
èèR S
null
èèT X
}
èèY Z
,
èèZ [
{
éé 
$num
éé 
,
éé 
null
éé 
,
éé 
null
éé #
,
éé# $
true
éé% )
,
éé) *
$num
éé+ ,
,
éé, -
$str
éé. @
,
éé@ A
$str
ééB L
,
ééL M
null
ééN R
,
ééR S
null
ééT X
}
ééY Z
,
ééZ [
{
êê 
$num
êê 
,
êê 
null
êê 
,
êê 
null
êê #
,
êê# $
true
êê% )
,
êê) *
$num
êê+ ,
,
êê, -
$str
êê. ?
,
êê? @
$str
êêA J
,
êêJ K
null
êêL P
,
êêP Q
null
êêR V
}
êêW X
,
êêX Y
{
ëë 
$num
ëë 
,
ëë 
null
ëë 
,
ëë 
null
ëë #
,
ëë# $
true
ëë% )
,
ëë) *
$num
ëë+ ,
,
ëë, -
$str
ëë. A
,
ëëA B
$str
ëëC N
,
ëëN O
null
ëëP T
,
ëëT U
null
ëëV Z
}
ëë[ \
}
ìì 
)
ìì 
;
ìì 
migrationBuilder
îî 
.
îî 

InsertData
îî '
(
îî' (
table
ïï 
:
ïï 
$str
ïï '
,
ïï' (
columns
ðð 
:
ðð 
new
ðð 
[
ðð 
]
ðð 
{
ðð  
$str
ðð! 3
,
ðð3 4
$str
ðð5 @
,
ðð@ A
$str
ððB M
,
ððM N
$str
ððO _
,
ðð_ `
$str
ðða k
,
ððk l
$strððm 
,ðð 
$strðð 
,ðð 
$strðð ¡
,ðð¡ ¢
$strðð£ ®
}ðð¯ °
,ðð° ±
values
ññ 
:
ññ 
new
ññ 
object
ññ "
[
ññ" #
,
ññ# $
]
ññ$ %
{
òò 
{
óó 
$num
óó 
,
óó 
null
óó 
,
óó 
null
óó #
,
óó# $
new
óó% (
DateTime
óó) 1
(
óó1 2
$num
óó2 6
,
óó6 7
$num
óó8 9
,
óó9 :
$num
óó; =
,
óó= >
$num
óó? @
,
óó@ A
$num
óóB C
,
óóC D
$num
óóE F
,
óóF G
$num
óóH I
,
óóI J
DateTimeKind
óóK W
.
óóW X
Unspecified
óóX c
)
óóc d
,
óód e
true
óóf j
,
óój k
$num
óól m
,
óóm n
new
óóo r
DateTime
óós {
(
óó{ |
$numóó| 
,óó 
$numóó 
,óó 
$numóó 
,óó 
$numóó 
,óó 
$numóó 
,óó 
$numóó 
,óó 
$numóó 
,óó 
DateTimeKindóó  
.óó  ¡
Unspecifiedóó¡ ¬
)óó¬ ­
,óó­ ®
nullóó¯ ³
,óó³ ´
nullóóµ ¹
}óóº »
,óó» ¼
{
ôô 
$num
ôô 
,
ôô 
null
ôô 
,
ôô 
null
ôô #
,
ôô# $
new
ôô% (
DateTime
ôô) 1
(
ôô1 2
$num
ôô2 6
,
ôô6 7
$num
ôô8 9
,
ôô9 :
$num
ôô; =
,
ôô= >
$num
ôô? @
,
ôô@ A
$num
ôôB C
,
ôôC D
$num
ôôE F
,
ôôF G
$num
ôôH I
,
ôôI J
DateTimeKind
ôôK W
.
ôôW X
Unspecified
ôôX c
)
ôôc d
,
ôôd e
true
ôôf j
,
ôôj k
$num
ôôl m
,
ôôm n
new
ôôo r
DateTime
ôôs {
(
ôô{ |
$numôô| 
,ôô 
$numôô 
,ôô 
$numôô 
,ôô 
$numôô 
,ôô 
$numôô 
,ôô 
$numôô 
,ôô 
$numôô 
,ôô 
DateTimeKindôô ¡
.ôô¡ ¢
Unspecifiedôô¢ ­
)ôô­ ®
,ôô® ¯
nullôô° ´
,ôô´ µ
nullôô¶ º
}ôô» ¼
,ôô¼ ½
{
õõ 
$num
õõ 
,
õõ 
null
õõ 
,
õõ 
null
õõ #
,
õõ# $
new
õõ% (
DateTime
õõ) 1
(
õõ1 2
$num
õõ2 6
,
õõ6 7
$num
õõ8 :
,
õõ: ;
$num
õõ< >
,
õõ> ?
$num
õõ@ A
,
õõA B
$num
õõC D
,
õõD E
$num
õõF G
,
õõG H
$num
õõI J
,
õõJ K
DateTimeKind
õõL X
.
õõX Y
Unspecified
õõY d
)
õõd e
,
õõe f
true
õõg k
,
õõk l
$num
õõm n
,
õõn o
new
õõp s
DateTime
õõt |
(
õõ| }
$numõõ} 
,õõ 
$numõõ 
,õõ 
$numõõ 
,õõ 
$numõõ 
,õõ 
$numõõ 
,õõ 
$numõõ 
,õõ 
$numõõ 
,õõ 
DateTimeKindõõ ¢
.õõ¢ £
Unspecifiedõõ£ ®
)õõ® ¯
,õõ¯ °
nullõõ± µ
,õõµ ¶
nullõõ· »
}õõ¼ ½
,õõ½ ¾
{
öö 
$num
öö 
,
öö 
null
öö 
,
öö 
null
öö #
,
öö# $
new
öö% (
DateTime
öö) 1
(
öö1 2
$num
öö2 6
,
öö6 7
$num
öö8 9
,
öö9 :
$num
öö; =
,
öö= >
$num
öö? @
,
öö@ A
$num
ööB C
,
ööC D
$num
ööE F
,
ööF G
$num
ööH I
,
ööI J
DateTimeKind
ööK W
.
ööW X
Unspecified
ööX c
)
ööc d
,
ööd e
true
ööf j
,
ööj k
$num
ööl m
,
ööm n
new
ööo r
DateTime
öös {
(
öö{ |
$numöö| 
,öö 
$numöö 
,öö 
$numöö 
,öö 
$numöö 
,öö 
$numöö 
,öö 
$numöö 
,öö 
$numöö 
,öö 
DateTimeKindöö ¡
.öö¡ ¢
Unspecifiedöö¢ ­
)öö­ ®
,öö® ¯
nullöö° ´
,öö´ µ
nullöö¶ º
}öö» ¼
,öö¼ ½
{
÷÷ 
$num
÷÷ 
,
÷÷ 
null
÷÷ 
,
÷÷ 
null
÷÷ #
,
÷÷# $
new
÷÷% (
DateTime
÷÷) 1
(
÷÷1 2
$num
÷÷2 6
,
÷÷6 7
$num
÷÷8 9
,
÷÷9 :
$num
÷÷; =
,
÷÷= >
$num
÷÷? @
,
÷÷@ A
$num
÷÷B C
,
÷÷C D
$num
÷÷E F
,
÷÷F G
$num
÷÷H I
,
÷÷I J
DateTimeKind
÷÷K W
.
÷÷W X
Unspecified
÷÷X c
)
÷÷c d
,
÷÷d e
true
÷÷f j
,
÷÷j k
$num
÷÷l m
,
÷÷m n
new
÷÷o r
DateTime
÷÷s {
(
÷÷{ |
$num÷÷| 
,÷÷ 
$num÷÷ 
,÷÷ 
$num÷÷ 
,÷÷ 
$num÷÷ 
,÷÷ 
$num÷÷ 
,÷÷ 
$num÷÷ 
,÷÷ 
$num÷÷ 
,÷÷ 
DateTimeKind÷÷ ¢
.÷÷¢ £
Unspecified÷÷£ ®
)÷÷® ¯
,÷÷¯ °
null÷÷± µ
,÷÷µ ¶
null÷÷· »
}÷÷¼ ½
,÷÷½ ¾
{
øø 
$num
øø 
,
øø 
null
øø 
,
øø 
null
øø #
,
øø# $
new
øø% (
DateTime
øø) 1
(
øø1 2
$num
øø2 6
,
øø6 7
$num
øø8 9
,
øø9 :
$num
øø; =
,
øø= >
$num
øø? @
,
øø@ A
$num
øøB C
,
øøC D
$num
øøE F
,
øøF G
$num
øøH I
,
øøI J
DateTimeKind
øøK W
.
øøW X
Unspecified
øøX c
)
øøc d
,
øød e
true
øøf j
,
øøj k
$num
øøl m
,
øøm n
new
øøo r
DateTime
øøs {
(
øø{ |
$numøø| 
,øø 
$numøø 
,øø 
$numøø 
,øø 
$numøø 
,øø 
$numøø 
,øø 
$numøø 
,øø 
$numøø 
,øø 
DateTimeKindøø ¢
.øø¢ £
Unspecifiedøø£ ®
)øø® ¯
,øø¯ °
nulløø± µ
,øøµ ¶
nulløø· »
}øø¼ ½
}
ùù 
)
ùù 
;
ùù 
migrationBuilder
ûû 
.
ûû 

InsertData
ûû '
(
ûû' (
table
üü 
:
üü 
$str
üü "
,
üü" #
columns
ýý 
:
ýý 
new
ýý 
[
ýý 
]
ýý 
{
ýý  
$str
ýý! -
,
ýý- .
$str
ýý/ :
,
ýý: ;
$str
ýý< G
,
ýýG H
$str
ýýI S
,
ýýS T
$str
ýýU c
,
ýýc d
$str
ýýe x
,
ýýx y
$strýýz 
,ýý 
$strýý 
,ýý 
$strýý 
,ýý 
$strýý £
,ýý£ ¤
$strýý¥ ¬
}ýý­ ®
,ýý® ¯
values
þþ 
:
þþ 
new
þþ 
object
þþ "
[
þþ" #
,
þþ# $
]
þþ$ %
{
ÿÿ 
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s |
,
| }
$num
~ 
, 
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
,  
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s z
,
z {
$num
| }
,
} ~
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
, 
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s z
,
z {
$num
| }
,
} ~
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
, 
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s {
,
{ |
$num
} ~
,
~ 
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
, 
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s ~
,
~ 
$num 
, 
true 
, 
true 
, 
null 
, 
null 
, 
true 
}  ¡
,¡ ¢
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s |
,
| }
$num
~ 
, 
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
,  
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s |
,
| }
$num
~ 
, 
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
,  
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s |
,
| }
$num
~ 
, 
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
,  
{
 
$num
 
,
 
null
 
,
 
new
 "
DateTime
# +
(
+ ,
$num
, 0
,
0 1
$num
2 3
,
3 4
$num
5 7
,
7 8
$num
9 :
,
: ;
$num
< >
,
> ?
$num
@ B
,
B C
$num
D G
,
G H
DateTimeKind
I U
.
U V
Local
V [
)
[ \
.
\ ]
AddTicks
] e
(
e f
$num
f j
)
j k
,
k l
true
m q
,
q r
$str
s y
,
y z
$num
{ |
,
| }
true~ 
, 
true 
, 
null 
, 
null 
, 
true 
} 
, 
{
 
$num
 
,
 
null
 
,
 
new
  #
DateTime
$ ,
(
, -
$num
- 1
,
1 2
$num
3 4
,
4 5
$num
6 8
,
8 9
$num
: ;
,
; <
$num
= ?
,
? @
$num
A C
,
C D
$num
E H
,
H I
DateTimeKind
J V
.
V W
Local
W \
)
\ ]
.
] ^
AddTicks
^ f
(
f g
$num
g k
)
k l
,
l m
true
n r
,
r s
$str
t |
,
| }
$num
~ 
, 
true 
, 
true 
, 
null 
, 
null 
, 
true 
} 
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 9
,
9 :
table
 
:
 
$str
 %
,
% &
column
 
:
 
$str
 +
)
+ ,
;
, -
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 1
,
1 2
table
 
:
 
$str
 %
,
% &
column
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 ;
,
; <
table
 
:
 
$str
 '
,
' (
column
 
:
 
$str
 +
)
+ ,
;
, -
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 /
,
/ 0
table
 
:
 
$str
 #
,
# $
column
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
   
.
   
CreateIndex
   (
(
  ( )
name
¡¡ 
:
¡¡ 
$str
¡¡ /
,
¡¡/ 0
table
¢¢ 
:
¢¢ 
$str
¢¢ #
,
¢¢# $
column
££ 
:
££ 
$str
££ #
)
££# $
;
££$ %
migrationBuilder
¥¥ 
.
¥¥ 
CreateIndex
¥¥ (
(
¥¥( )
name
¦¦ 
:
¦¦ 
$str
¦¦ 6
,
¦¦6 7
table
§§ 
:
§§ 
$str
§§ "
,
§§" #
column
¨¨ 
:
¨¨ 
$str
¨¨ +
)
¨¨+ ,
;
¨¨, -
migrationBuilder
ªª 
.
ªª 
CreateIndex
ªª (
(
ªª( )
name
«« 
:
«« 
$str
«« 4
,
««4 5
table
¬¬ 
:
¬¬ 
$str
¬¬ (
,
¬¬( )
column
­­ 
:
­­ 
$str
­­ #
,
­­# $
unique
®® 
:
®® 
true
®® 
)
®® 
;
®® 
migrationBuilder
°° 
.
°° 
CreateIndex
°° (
(
°°( )
name
±± 
:
±± 
$str
±± 1
,
±±1 2
table
²² 
:
²² 
$str
²² (
,
²²( )
column
³³ 
:
³³ 
$str
³³  
,
³³  !
unique
´´ 
:
´´ 
true
´´ 
)
´´ 
;
´´ 
migrationBuilder
¶¶ 
.
¶¶ 
CreateIndex
¶¶ (
(
¶¶( )
name
·· 
:
·· 
$str
·· 2
,
··2 3
table
¸¸ 
:
¸¸ 
$str
¸¸  
,
¸¸  !
column
¹¹ 
:
¹¹ 
$str
¹¹ )
)
¹¹) *
;
¹¹* +
migrationBuilder
»» 
.
»» 
CreateIndex
»» (
(
»»( )
name
¼¼ 
:
¼¼ 
$str
¼¼ )
,
¼¼) *
table
½½ 
:
½½ 
$str
½½  
,
½½  !
column
¾¾ 
:
¾¾ 
$str
¾¾  
,
¾¾  !
unique
¿¿ 
:
¿¿ 
true
¿¿ 
)
¿¿ 
;
¿¿ 
migrationBuilder
ÁÁ 
.
ÁÁ 
CreateIndex
ÁÁ (
(
ÁÁ( )
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ 3
,
ÂÂ3 4
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ '
,
ÃÃ' (
column
ÄÄ 
:
ÄÄ 
$str
ÄÄ #
)
ÄÄ# $
;
ÄÄ$ %
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateIndex
ÆÆ (
(
ÆÆ( )
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ -
,
ÇÇ- .
table
ÈÈ 
:
ÈÈ 
$str
ÈÈ !
,
ÈÈ! "
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
)
ÉÉ# $
;
ÉÉ$ %
migrationBuilder
ËË 
.
ËË 
CreateIndex
ËË (
(
ËË( )
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ *
,
ÌÌ* +
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ 
,
ÍÍ  
column
ÎÎ 
:
ÎÎ 
$str
ÎÎ "
)
ÎÎ" #
;
ÎÎ# $
migrationBuilder
ÐÐ 
.
ÐÐ 
CreateIndex
ÐÐ (
(
ÐÐ( )
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ +
,
ÑÑ+ ,
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ 
,
ÒÒ  
column
ÓÓ 
:
ÓÓ 
$str
ÓÓ #
)
ÓÓ# $
;
ÓÓ$ %
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateIndex
ÕÕ (
(
ÕÕ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ .
,
ÖÖ. /
table
×× 
:
×× 
$str
×× 
,
××  
column
ØØ 
:
ØØ 
$str
ØØ &
)
ØØ& '
;
ØØ' (
migrationBuilder
ÚÚ 
.
ÚÚ 
CreateIndex
ÚÚ (
(
ÚÚ( )
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ 9
,
ÛÛ9 :
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ %
,
ÜÜ% &
column
ÝÝ 
:
ÝÝ 
$str
ÝÝ +
)
ÝÝ+ ,
;
ÝÝ, -
migrationBuilder
ßß 
.
ßß 
CreateIndex
ßß (
(
ßß( )
name
àà 
:
àà 
$str
àà .
,
àà. /
table
áá 
:
áá 
$str
áá 
,
áá 
column
ââ 
:
ââ 
$str
ââ '
)
ââ' (
;
ââ( )
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
åå 
:
åå 
$str
åå .
,
åå. /
table
ææ 
:
ææ 
$str
ææ 
,
ææ 
column
çç 
:
çç 
$str
çç '
)
çç' (
;
çç( )
migrationBuilder
éé 
.
éé 
CreateIndex
éé (
(
éé( )
name
êê 
:
êê 
$str
êê )
,
êê) *
table
ëë 
:
ëë 
$str
ëë 
,
ëë 
column
ìì 
:
ìì 
$str
ìì "
)
ìì" #
;
ìì# $
migrationBuilder
îî 
.
îî 
CreateIndex
îî (
(
îî( )
name
ïï 
:
ïï 
$str
ïï /
,
ïï/ 0
table
ðð 
:
ðð 
$str
ðð 
,
ðð 
column
ññ 
:
ññ 
$str
ññ (
)
ññ( )
;
ññ) *
}
òò 	
	protected
ôô 
override
ôô 
void
ôô 
Down
ôô  $
(
ôô$ %
MigrationBuilder
ôô% 5
migrationBuilder
ôô6 F
)
ôôF G
{
õõ 	
migrationBuilder
öö 
.
öö 
	DropTable
öö &
(
öö& '
name
÷÷ 
:
÷÷ 
$str
÷÷ $
)
÷÷$ %
;
÷÷% &
migrationBuilder
ùù 
.
ùù 
	DropTable
ùù &
(
ùù& '
name
úú 
:
úú 
$str
úú &
)
úú& '
;
úú' (
migrationBuilder
üü 
.
üü 
	DropTable
üü &
(
üü& '
name
ýý 
:
ýý 
$str
ýý '
)
ýý' (
;
ýý( )
migrationBuilder
ÿÿ 
.
ÿÿ 
	DropTable
ÿÿ &
(
ÿÿ& '
name
 
:
 
$str
 "
)
" #
;
# $
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 !
)
! "
;
" #
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 &
)
& '
;
' (
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
  
;
  !
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 $
)
$ %
;
% &
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
   
.
   
	DropTable
   &
(
  & '
name
¡¡ 
:
¡¡ 
$str
¡¡ 
)
¡¡  
;
¡¡  !
migrationBuilder
££ 
.
££ 
	DropTable
££ &
(
££& '
name
¤¤ 
:
¤¤ 
$str
¤¤ &
)
¤¤& '
;
¤¤' (
migrationBuilder
¦¦ 
.
¦¦ 
	DropTable
¦¦ &
(
¦¦& '
name
§§ 
:
§§ 
$str
§§ 
)
§§ 
;
§§ 
migrationBuilder
©© 
.
©© 
	DropTable
©© &
(
©©& '
name
ªª 
:
ªª 
$str
ªª $
)
ªª$ %
;
ªª% &
migrationBuilder
¬¬ 
.
¬¬ 
	DropTable
¬¬ &
(
¬¬& '
name
­­ 
:
­­ 
$str
­­ $
)
­­$ %
;
­­% &
migrationBuilder
¯¯ 
.
¯¯ 
	DropTable
¯¯ &
(
¯¯& '
name
°° 
:
°° 
$str
°° 
)
°° 
;
°°  
migrationBuilder
²² 
.
²² 
	DropTable
²² &
(
²²& '
name
³³ 
:
³³ 
$str
³³ %
)
³³% &
;
³³& '
}
´´ 	
}
µµ 
}¶¶ ê
iC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Migrations\20220715045150_init.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class 
init 
: 
	Migration  )
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder!! 
.!! 

UpdateData!! '
(!!' (
table"" 
:"" 
$str"" "
,""" #
	keyColumn## 
:## 
$str## '
,##' (
keyValue$$ 
:$$ 
$num$$ 
,$$ 
column%% 
:%% 
$str%% #
,%%# $
value&& 
:&& 
new&& 
DateTime&& #
(&&# $
$num&&$ (
,&&( )
$num&&* +
,&&+ ,
$num&&- /
,&&/ 0
$num&&1 3
,&&3 4
$num&&5 7
,&&7 8
$num&&9 ;
,&&; <
$num&&= @
,&&@ A
DateTimeKind&&B N
.&&N O
Local&&O T
)&&T U
.&&U V
AddTicks&&V ^
(&&^ _
$num&&_ c
)&&c d
)&&d e
;&&e f
migrationBuilder(( 
.(( 

UpdateData(( '
(((' (
table)) 
:)) 
$str)) "
,))" #
	keyColumn** 
:** 
$str** '
,**' (
keyValue++ 
:++ 
$num++ 
,++ 
column,, 
:,, 
$str,, #
,,,# $
value-- 
:-- 
new-- 
DateTime-- #
(--# $
$num--$ (
,--( )
$num--* +
,--+ ,
$num--- /
,--/ 0
$num--1 3
,--3 4
$num--5 7
,--7 8
$num--9 ;
,--; <
$num--= @
,--@ A
DateTimeKind--B N
.--N O
Local--O T
)--T U
.--U V
AddTicks--V ^
(--^ _
$num--_ c
)--c d
)--d e
;--e f
migrationBuilder// 
.// 

UpdateData// '
(//' (
table00 
:00 
$str00 "
,00" #
	keyColumn11 
:11 
$str11 '
,11' (
keyValue22 
:22 
$num22 
,22 
column33 
:33 
$str33 #
,33# $
value44 
:44 
new44 
DateTime44 #
(44# $
$num44$ (
,44( )
$num44* +
,44+ ,
$num44- /
,44/ 0
$num441 3
,443 4
$num445 7
,447 8
$num449 ;
,44; <
$num44= @
,44@ A
DateTimeKind44B N
.44N O
Local44O T
)44T U
.44U V
AddTicks44V ^
(44^ _
$num44_ c
)44c d
)44d e
;44e f
migrationBuilder66 
.66 

UpdateData66 '
(66' (
table77 
:77 
$str77 "
,77" #
	keyColumn88 
:88 
$str88 '
,88' (
keyValue99 
:99 
$num99 
,99 
column:: 
::: 
$str:: #
,::# $
value;; 
:;; 
new;; 
DateTime;; #
(;;# $
$num;;$ (
,;;( )
$num;;* +
,;;+ ,
$num;;- /
,;;/ 0
$num;;1 3
,;;3 4
$num;;5 7
,;;7 8
$num;;9 ;
,;;; <
$num;;= @
,;;@ A
DateTimeKind;;B N
.;;N O
Local;;O T
);;T U
.;;U V
AddTicks;;V ^
(;;^ _
$num;;_ c
);;c d
);;d e
;;;e f
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> "
,>>" #
	keyColumn?? 
:?? 
$str?? '
,??' (
keyValue@@ 
:@@ 
$num@@ 
,@@ 
columnAA 
:AA 
$strAA #
,AA# $
valueBB 
:BB 
newBB 
DateTimeBB #
(BB# $
$numBB$ (
,BB( )
$numBB* +
,BB+ ,
$numBB- /
,BB/ 0
$numBB1 3
,BB3 4
$numBB5 7
,BB7 8
$numBB9 ;
,BB; <
$numBB= @
,BB@ A
DateTimeKindBBB N
.BBN O
LocalBBO T
)BBT U
.BBU V
AddTicksBBV ^
(BB^ _
$numBB_ c
)BBc d
)BBd e
;BBe f
migrationBuilderDD 
.DD 

UpdateDataDD '
(DD' (
tableEE 
:EE 
$strEE "
,EE" #
	keyColumnFF 
:FF 
$strFF '
,FF' (
keyValueGG 
:GG 
$numGG 
,GG 
columnHH 
:HH 
$strHH #
,HH# $
valueII 
:II 
newII 
DateTimeII #
(II# $
$numII$ (
,II( )
$numII* +
,II+ ,
$numII- /
,II/ 0
$numII1 3
,II3 4
$numII5 7
,II7 8
$numII9 ;
,II; <
$numII= @
,II@ A
DateTimeKindIIB N
.IIN O
LocalIIO T
)IIT U
.IIU V
AddTicksIIV ^
(II^ _
$numII_ c
)IIc d
)IId e
;IIe f
migrationBuilderKK 
.KK 

UpdateDataKK '
(KK' (
tableLL 
:LL 
$strLL "
,LL" #
	keyColumnMM 
:MM 
$strMM '
,MM' (
keyValueNN 
:NN 
$numNN 
,NN 
columnOO 
:OO 
$strOO #
,OO# $
valuePP 
:PP 
newPP 
DateTimePP #
(PP# $
$numPP$ (
,PP( )
$numPP* +
,PP+ ,
$numPP- /
,PP/ 0
$numPP1 3
,PP3 4
$numPP5 7
,PP7 8
$numPP9 ;
,PP; <
$numPP= @
,PP@ A
DateTimeKindPPB N
.PPN O
LocalPPO T
)PPT U
.PPU V
AddTicksPPV ^
(PP^ _
$numPP_ c
)PPc d
)PPd e
;PPe f
}QQ 	
	protectedSS 
overrideSS 
voidSS 
DownSS  $
(SS$ %
MigrationBuilderSS% 5
migrationBuilderSS6 F
)SSF G
{TT 	
migrationBuilderUU 
.UU 

UpdateDataUU '
(UU' (
tableVV 
:VV 
$strVV "
,VV" #
	keyColumnWW 
:WW 
$strWW '
,WW' (
keyValueXX 
:XX 
$numXX 
,XX 
columnYY 
:YY 
$strYY #
,YY# $
valueZZ 
:ZZ 
newZZ 
DateTimeZZ #
(ZZ# $
$numZZ$ (
,ZZ( )
$numZZ* +
,ZZ+ ,
$numZZ- /
,ZZ/ 0
$numZZ1 2
,ZZ2 3
$numZZ4 6
,ZZ6 7
$numZZ8 :
,ZZ: ;
$numZZ< ?
,ZZ? @
DateTimeKindZZA M
.ZZM N
LocalZZN S
)ZZS T
.ZZT U
AddTicksZZU ]
(ZZ] ^
$numZZ^ b
)ZZb c
)ZZc d
;ZZd e
migrationBuilder\\ 
.\\ 

UpdateData\\ '
(\\' (
table]] 
:]] 
$str]] "
,]]" #
	keyColumn^^ 
:^^ 
$str^^ '
,^^' (
keyValue__ 
:__ 
$num__ 
,__ 
column`` 
:`` 
$str`` #
,``# $
valueaa 
:aa 
newaa 
DateTimeaa #
(aa# $
$numaa$ (
,aa( )
$numaa* +
,aa+ ,
$numaa- /
,aa/ 0
$numaa1 2
,aa2 3
$numaa4 6
,aa6 7
$numaa8 :
,aa: ;
$numaa< ?
,aa? @
DateTimeKindaaA M
.aaM N
LocalaaN S
)aaS T
.aaT U
AddTicksaaU ]
(aa] ^
$numaa^ b
)aab c
)aac d
;aad e
migrationBuildercc 
.cc 

UpdateDatacc '
(cc' (
tabledd 
:dd 
$strdd "
,dd" #
	keyColumnee 
:ee 
$stree '
,ee' (
keyValueff 
:ff 
$numff 
,ff 
columngg 
:gg 
$strgg #
,gg# $
valuehh 
:hh 
newhh 
DateTimehh #
(hh# $
$numhh$ (
,hh( )
$numhh* +
,hh+ ,
$numhh- /
,hh/ 0
$numhh1 2
,hh2 3
$numhh4 6
,hh6 7
$numhh8 :
,hh: ;
$numhh< ?
,hh? @
DateTimeKindhhA M
.hhM N
LocalhhN S
)hhS T
.hhT U
AddTickshhU ]
(hh] ^
$numhh^ b
)hhb c
)hhc d
;hhd e
migrationBuilderjj 
.jj 

UpdateDatajj '
(jj' (
tablekk 
:kk 
$strkk "
,kk" #
	keyColumnll 
:ll 
$strll '
,ll' (
keyValuemm 
:mm 
$nummm 
,mm 
columnnn 
:nn 
$strnn #
,nn# $
valueoo 
:oo 
newoo 
DateTimeoo #
(oo# $
$numoo$ (
,oo( )
$numoo* +
,oo+ ,
$numoo- /
,oo/ 0
$numoo1 2
,oo2 3
$numoo4 6
,oo6 7
$numoo8 :
,oo: ;
$numoo< ?
,oo? @
DateTimeKindooA M
.ooM N
LocalooN S
)ooS T
.ooT U
AddTicksooU ]
(oo] ^
$numoo^ b
)oob c
)ooc d
;ood e
migrationBuilderqq 
.qq 

UpdateDataqq '
(qq' (
tablerr 
:rr 
$strrr "
,rr" #
	keyColumnss 
:ss 
$strss '
,ss' (
keyValuett 
:tt 
$numtt 
,tt 
columnuu 
:uu 
$struu #
,uu# $
valuevv 
:vv 
newvv 
DateTimevv #
(vv# $
$numvv$ (
,vv( )
$numvv* +
,vv+ ,
$numvv- /
,vv/ 0
$numvv1 2
,vv2 3
$numvv4 6
,vv6 7
$numvv8 :
,vv: ;
$numvv< ?
,vv? @
DateTimeKindvvA M
.vvM N
LocalvvN S
)vvS T
.vvT U
AddTicksvvU ]
(vv] ^
$numvv^ b
)vvb c
)vvc d
;vvd e
migrationBuilderxx 
.xx 

UpdateDataxx '
(xx' (
tableyy 
:yy 
$stryy "
,yy" #
	keyColumnzz 
:zz 
$strzz '
,zz' (
keyValue{{ 
:{{ 
$num{{ 
,{{ 
column|| 
:|| 
$str|| #
,||# $
value}} 
:}} 
new}} 
DateTime}} #
(}}# $
$num}}$ (
,}}( )
$num}}* +
,}}+ ,
$num}}- /
,}}/ 0
$num}}1 2
,}}2 3
$num}}4 6
,}}6 7
$num}}8 :
,}}: ;
$num}}< ?
,}}? @
DateTimeKind}}A M
.}}M N
Local}}N S
)}}S T
.}}T U
AddTicks}}U ]
(}}] ^
$num}}^ b
)}}b c
)}}c d
;}}d e
migrationBuilder 
. 

UpdateData '
(' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 2
,
2 3
$num
4 6
,
6 7
$num
8 :
,
: ;
$num
< ?
,
? @
DateTimeKind
A M
.
M N
Local
N S
)
S T
.
T U
AddTicks
U ]
(
] ^
$num
^ b
)
b c
)
c d
;
d e
migrationBuilder
 
.
 

UpdateData
 '
(
' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 2
,
2 3
$num
4 6
,
6 7
$num
8 :
,
: ;
$num
< ?
,
? @
DateTimeKind
A M
.
M N
Local
N S
)
S T
.
T U
AddTicks
U ]
(
] ^
$num
^ b
)
b c
)
c d
;
d e
migrationBuilder
 
.
 

UpdateData
 '
(
' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 2
,
2 3
$num
4 6
,
6 7
$num
8 :
,
: ;
$num
< ?
,
? @
DateTimeKind
A M
.
M N
Local
N S
)
S T
.
T U
AddTicks
U ]
(
] ^
$num
^ b
)
b c
)
c d
;
d e
migrationBuilder
 
.
 

UpdateData
 '
(
' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 2
,
2 3
$num
4 6
,
6 7
$num
8 :
,
: ;
$num
< ?
,
? @
DateTimeKind
A M
.
M N
Local
N S
)
S T
.
T U
AddTicks
U ]
(
] ^
$num
^ b
)
b c
)
c d
;
d e
}
 	
}
 
} 
zC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Migrations\20220715060447_seeding_status_update.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class !
seeding_status_update .
:/ 0
	Migration1 :
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder!! 
.!! 

UpdateData!! '
(!!' (
table"" 
:"" 
$str"" "
,""" #
	keyColumn## 
:## 
$str## '
,##' (
keyValue$$ 
:$$ 
$num$$ 
,$$ 
column%% 
:%% 
$str%% #
,%%# $
value&& 
:&& 
new&& 
DateTime&& #
(&&# $
$num&&$ (
,&&( )
$num&&* +
,&&+ ,
$num&&- /
,&&/ 0
$num&&1 3
,&&3 4
$num&&5 7
,&&7 8
$num&&9 ;
,&&; <
$num&&= @
,&&@ A
DateTimeKind&&B N
.&&N O
Local&&O T
)&&T U
.&&U V
AddTicks&&V ^
(&&^ _
$num&&_ c
)&&c d
)&&d e
;&&e f
migrationBuilder(( 
.(( 

UpdateData(( '
(((' (
table)) 
:)) 
$str)) "
,))" #
	keyColumn** 
:** 
$str** '
,**' (
keyValue++ 
:++ 
$num++ 
,++ 
column,, 
:,, 
$str,, #
,,,# $
value-- 
:-- 
new-- 
DateTime-- #
(--# $
$num--$ (
,--( )
$num--* +
,--+ ,
$num--- /
,--/ 0
$num--1 3
,--3 4
$num--5 7
,--7 8
$num--9 ;
,--; <
$num--= @
,--@ A
DateTimeKind--B N
.--N O
Local--O T
)--T U
.--U V
AddTicks--V ^
(--^ _
$num--_ c
)--c d
)--d e
;--e f
migrationBuilder// 
.// 

UpdateData// '
(//' (
table00 
:00 
$str00 "
,00" #
	keyColumn11 
:11 
$str11 '
,11' (
keyValue22 
:22 
$num22 
,22 
column33 
:33 
$str33 #
,33# $
value44 
:44 
new44 
DateTime44 #
(44# $
$num44$ (
,44( )
$num44* +
,44+ ,
$num44- /
,44/ 0
$num441 3
,443 4
$num445 7
,447 8
$num449 ;
,44; <
$num44= @
,44@ A
DateTimeKind44B N
.44N O
Local44O T
)44T U
.44U V
AddTicks44V ^
(44^ _
$num44_ c
)44c d
)44d e
;44e f
migrationBuilder66 
.66 

UpdateData66 '
(66' (
table77 
:77 
$str77 "
,77" #
	keyColumn88 
:88 
$str88 '
,88' (
keyValue99 
:99 
$num99 
,99 
column:: 
::: 
$str:: #
,::# $
value;; 
:;; 
new;; 
DateTime;; #
(;;# $
$num;;$ (
,;;( )
$num;;* +
,;;+ ,
$num;;- /
,;;/ 0
$num;;1 3
,;;3 4
$num;;5 7
,;;7 8
$num;;9 ;
,;;; <
$num;;= @
,;;@ A
DateTimeKind;;B N
.;;N O
Local;;O T
);;T U
.;;U V
AddTicks;;V ^
(;;^ _
$num;;_ c
);;c d
);;d e
;;;e f
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> "
,>>" #
	keyColumn?? 
:?? 
$str?? '
,??' (
keyValue@@ 
:@@ 
$num@@ 
,@@ 
columnAA 
:AA 
$strAA #
,AA# $
valueBB 
:BB 
newBB 
DateTimeBB #
(BB# $
$numBB$ (
,BB( )
$numBB* +
,BB+ ,
$numBB- /
,BB/ 0
$numBB1 3
,BB3 4
$numBB5 7
,BB7 8
$numBB9 ;
,BB; <
$numBB= @
,BB@ A
DateTimeKindBBB N
.BBN O
LocalBBO T
)BBT U
.BBU V
AddTicksBBV ^
(BB^ _
$numBB_ c
)BBc d
)BBd e
;BBe f
migrationBuilderDD 
.DD 

UpdateDataDD '
(DD' (
tableEE 
:EE 
$strEE "
,EE" #
	keyColumnFF 
:FF 
$strFF '
,FF' (
keyValueGG 
:GG 
$numGG 
,GG 
columnHH 
:HH 
$strHH #
,HH# $
valueII 
:II 
newII 
DateTimeII #
(II# $
$numII$ (
,II( )
$numII* +
,II+ ,
$numII- /
,II/ 0
$numII1 3
,II3 4
$numII5 7
,II7 8
$numII9 ;
,II; <
$numII= @
,II@ A
DateTimeKindIIB N
.IIN O
LocalIIO T
)IIT U
.IIU V
AddTicksIIV ^
(II^ _
$numII_ c
)IIc d
)IId e
;IIe f
migrationBuilderKK 
.KK 

UpdateDataKK '
(KK' (
tableLL 
:LL 
$strLL "
,LL" #
	keyColumnMM 
:MM 
$strMM '
,MM' (
keyValueNN 
:NN 
$numNN 
,NN 
columnOO 
:OO 
$strOO #
,OO# $
valuePP 
:PP 
newPP 
DateTimePP #
(PP# $
$numPP$ (
,PP( )
$numPP* +
,PP+ ,
$numPP- /
,PP/ 0
$numPP1 3
,PP3 4
$numPP5 7
,PP7 8
$numPP9 ;
,PP; <
$numPP= @
,PP@ A
DateTimeKindPPB N
.PPN O
LocalPPO T
)PPT U
.PPU V
AddTicksPPV ^
(PP^ _
$numPP_ c
)PPc d
)PPd e
;PPe f
}QQ 	
	protectedSS 
overrideSS 
voidSS 
DownSS  $
(SS$ %
MigrationBuilderSS% 5
migrationBuilderSS6 F
)SSF G
{TT 	
migrationBuilderUU 
.UU 

UpdateDataUU '
(UU' (
tableVV 
:VV 
$strVV "
,VV" #
	keyColumnWW 
:WW 
$strWW '
,WW' (
keyValueXX 
:XX 
$numXX 
,XX 
columnYY 
:YY 
$strYY #
,YY# $
valueZZ 
:ZZ 
newZZ 
DateTimeZZ #
(ZZ# $
$numZZ$ (
,ZZ( )
$numZZ* +
,ZZ+ ,
$numZZ- /
,ZZ/ 0
$numZZ1 3
,ZZ3 4
$numZZ5 7
,ZZ7 8
$numZZ9 ;
,ZZ; <
$numZZ= @
,ZZ@ A
DateTimeKindZZB N
.ZZN O
LocalZZO T
)ZZT U
.ZZU V
AddTicksZZV ^
(ZZ^ _
$numZZ_ c
)ZZc d
)ZZd e
;ZZe f
migrationBuilder\\ 
.\\ 

UpdateData\\ '
(\\' (
table]] 
:]] 
$str]] "
,]]" #
	keyColumn^^ 
:^^ 
$str^^ '
,^^' (
keyValue__ 
:__ 
$num__ 
,__ 
column`` 
:`` 
$str`` #
,``# $
valueaa 
:aa 
newaa 
DateTimeaa #
(aa# $
$numaa$ (
,aa( )
$numaa* +
,aa+ ,
$numaa- /
,aa/ 0
$numaa1 3
,aa3 4
$numaa5 7
,aa7 8
$numaa9 ;
,aa; <
$numaa= @
,aa@ A
DateTimeKindaaB N
.aaN O
LocalaaO T
)aaT U
.aaU V
AddTicksaaV ^
(aa^ _
$numaa_ c
)aac d
)aad e
;aae f
migrationBuildercc 
.cc 

UpdateDatacc '
(cc' (
tabledd 
:dd 
$strdd "
,dd" #
	keyColumnee 
:ee 
$stree '
,ee' (
keyValueff 
:ff 
$numff 
,ff 
columngg 
:gg 
$strgg #
,gg# $
valuehh 
:hh 
newhh 
DateTimehh #
(hh# $
$numhh$ (
,hh( )
$numhh* +
,hh+ ,
$numhh- /
,hh/ 0
$numhh1 3
,hh3 4
$numhh5 7
,hh7 8
$numhh9 ;
,hh; <
$numhh= @
,hh@ A
DateTimeKindhhB N
.hhN O
LocalhhO T
)hhT U
.hhU V
AddTickshhV ^
(hh^ _
$numhh_ c
)hhc d
)hhd e
;hhe f
migrationBuilderjj 
.jj 

UpdateDatajj '
(jj' (
tablekk 
:kk 
$strkk "
,kk" #
	keyColumnll 
:ll 
$strll '
,ll' (
keyValuemm 
:mm 
$nummm 
,mm 
columnnn 
:nn 
$strnn #
,nn# $
valueoo 
:oo 
newoo 
DateTimeoo #
(oo# $
$numoo$ (
,oo( )
$numoo* +
,oo+ ,
$numoo- /
,oo/ 0
$numoo1 3
,oo3 4
$numoo5 7
,oo7 8
$numoo9 ;
,oo; <
$numoo= @
,oo@ A
DateTimeKindooB N
.ooN O
LocalooO T
)ooT U
.ooU V
AddTicksooV ^
(oo^ _
$numoo_ c
)ooc d
)ood e
;ooe f
migrationBuilderqq 
.qq 

UpdateDataqq '
(qq' (
tablerr 
:rr 
$strrr "
,rr" #
	keyColumnss 
:ss 
$strss '
,ss' (
keyValuett 
:tt 
$numtt 
,tt 
columnuu 
:uu 
$struu #
,uu# $
valuevv 
:vv 
newvv 
DateTimevv #
(vv# $
$numvv$ (
,vv( )
$numvv* +
,vv+ ,
$numvv- /
,vv/ 0
$numvv1 3
,vv3 4
$numvv5 7
,vv7 8
$numvv9 ;
,vv; <
$numvv= @
,vv@ A
DateTimeKindvvB N
.vvN O
LocalvvO T
)vvT U
.vvU V
AddTicksvvV ^
(vv^ _
$numvv_ c
)vvc d
)vvd e
;vve f
migrationBuilderxx 
.xx 

UpdateDataxx '
(xx' (
tableyy 
:yy 
$stryy "
,yy" #
	keyColumnzz 
:zz 
$strzz '
,zz' (
keyValue{{ 
:{{ 
$num{{ 
,{{ 
column|| 
:|| 
$str|| #
,||# $
value}} 
:}} 
new}} 
DateTime}} #
(}}# $
$num}}$ (
,}}( )
$num}}* +
,}}+ ,
$num}}- /
,}}/ 0
$num}}1 3
,}}3 4
$num}}5 7
,}}7 8
$num}}9 ;
,}}; <
$num}}= @
,}}@ A
DateTimeKind}}B N
.}}N O
Local}}O T
)}}T U
.}}U V
AddTicks}}V ^
(}}^ _
$num}}_ c
)}}c d
)}}d e
;}}e f
migrationBuilder 
. 

UpdateData '
(' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 3
,
3 4
$num
5 7
,
7 8
$num
9 ;
,
; <
$num
= @
,
@ A
DateTimeKind
B N
.
N O
Local
O T
)
T U
.
U V
AddTicks
V ^
(
^ _
$num
_ c
)
c d
)
d e
;
e f
migrationBuilder
 
.
 

UpdateData
 '
(
' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 3
,
3 4
$num
5 7
,
7 8
$num
9 ;
,
; <
$num
= @
,
@ A
DateTimeKind
B N
.
N O
Local
O T
)
T U
.
U V
AddTicks
V ^
(
^ _
$num
_ c
)
c d
)
d e
;
e f
migrationBuilder
 
.
 

UpdateData
 '
(
' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 3
,
3 4
$num
5 7
,
7 8
$num
9 ;
,
; <
$num
= @
,
@ A
DateTimeKind
B N
.
N O
Local
O T
)
T U
.
U V
AddTicks
V ^
(
^ _
$num
_ c
)
c d
)
d e
;
e f
migrationBuilder
 
.
 

UpdateData
 '
(
' (
table
 
:
 
$str
 "
,
" #
	keyColumn
 
:
 
$str
 '
,
' (
keyValue
 
:
 
$num
 
,
 
column
 
:
 
$str
 #
,
# $
value
 
:
 
new
 
DateTime
 #
(
# $
$num
$ (
,
( )
$num
* +
,
+ ,
$num
- /
,
/ 0
$num
1 3
,
3 4
$num
5 7
,
7 8
$num
9 ;
,
; <
$num
= @
,
@ A
DateTimeKind
B N
.
N O
Local
O T
)
T U
.
U V
AddTicks
V ^
(
^ _
$num
_ c
)
c d
)
d e
;
e f
}
 	
}
 
} ì
^C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Achievements.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Achievements 
{ 
[ 	
Key	 
] 
public		 
int		 
AchievementId		  
{		  !
get		! $
;		$ %
set		% (
;		( )
}		) *
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
int 
AchievementTypeId $
{$ %
get% (
;( )
set) ,
;, -
}- .
public 
string 
? 
base64header #
{$ %
get% (
;( )
set) ,
;, -
}- .
public 
byte 
[ 
] 
? 
AchievementImage '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
Profile 
? 
profile &
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	

ForeignKey	 
( 
$str '
)' (
]( )
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
AchievementType &
?& '
achievementtype( 7
{7 8
get8 ;
;; <
set< ?
;? @
}@ A
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public   
bool   
IsActive   
{   
get    
;    !
set  ! $
;  $ %
}  % &
}!! 
}"" þ	
aC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\AchievementType.cs
	namespace 	
PMS_API
 
{ 
public 

class 
AchievementType  
{ 
[ 	
Key	 
] 
public		 
int		 
AchievementTypeId		 $
{		$ %
get		% (
;		( )
set		) ,
;		, -
}		- .
public

 
string

 
?

 
AchievementTypeName

 *
{

* +
get

+ .
;

. /
set

/ 2
;

2 3
}

3 4
[ 	
InverseProperty	 
( 
$str *
)* +
]+ ,
public 
virtual 
ICollection "
<" #
Achievements# /
>/ 0
?0 1
achievements2 >
{> ?
get? B
;B C
setC F
;F G
}G H
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} 
_C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\BreakDuration.cs
	namespace 	
PMS_API
 
{ 
public 

class 
BreakDuration 
{ 
[ 	
Key	 
] 
public		 
int		 
BreakDuration_Id		 #
{		# $
get		$ '
;		' (
set		( +
;		+ ,
}		, -
public

	 
DateTime

 
StartingDuration

 )
{

) *
get

* -
;

- .
set

. 1
;

1 2
}

2 3
public 
DateTime 
EndingDuration &
{& '
get' *
;* +
set+ .
;. /
}/ 0
public 
int 
PersonalDetailsId $
{$ %
get% (
;( )
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str '
)' (
]( )
[ 	
InverseProperty	 
( 
$str (
)( )
]) *
public 
virtual 
PersonalDetails &
?& '
personalDetails) 8
{9 :
get: =
;= >
set> A
;A B
}B C
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} Ó
_C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\CascadeFilter.cs
	namespace 	
PMS_API
 
{ 
[ 
	NotMapped 
] 
public 

class 
CascadeFilter 
{		 
public

 
string

 
?

 
UserName

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
=

- .
String

. 4
.

4 5
Empty

5 :
;

: ;
public 
int 
DesignationId  
{! "
get# &
;& '
set( +
;+ ,
}- .
=. /
$num/ 0
;0 1
public 
int 
DomainID 
{ 
get !
;! "
set# &
;& '
}( )
=) *
$num* +
;+ ,
public 
int 
TechnologyId 
{  !
get" %
;% &
set' *
;* +
}, -
=- .
$num. /
;/ 0
public 
int 
	CollegeId 
{ 
get "
;" #
set$ '
;' (
}) *
=* +
$num+ ,
;, -
public 
int 
ProfileStatusId "
{# $
get% (
;( )
set* -
;- .
}/ 0
=0 1
$num1 2
;2 3
public 
int 
MaxExperience  
{! "
get# &
;& '
set( +
;+ ,
}- .
=. /
$num/ 0
;0 1
public 
int 
MinExperience  
{! "
get# &
;& '
set( +
;+ ,
}- .
=. /
$num/ 0
;0 1
} 
} »
`C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\ChangePassword.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ChangePassword 
{ 
[ 	
Key	 
] 
public 
int 
ChangePasswordId #
{# $
get$ '
;' (
set) ,
;, -
}- .
public		 
string		 
?		 
NewPassword		 #
{		# $
get		$ '
;		' (
set		( +
;		+ ,
}		, -
public

 
string

 
?

 
ConfirmPassword

 &
{

& '
get

' *
;

* +
set

+ .
;

. /
}

/ 0
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ö

YC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\College.cs
	namespace 	
PMS_API
 
{ 
public 
class 
College 
{ 
[ 	
Key	 
] 
public 
int 
	CollegeId 
{ 
get  
;  !
set" %
;% &
}& '
[		 	
Required			 
]		 
[

 	
StringLength

	 
(

 
$num

 
)

 
]

 
public 
string 
? 
CollegeName "
{" #
get# &
;& '
set' *
;* +
}+ ,
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
	Education# ,
>, -
?- .
	education/ 8
{: ;
get; >
;> ?
set? B
;B C
}C D
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} á	
]C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\CountryCode.cs
	namespace 	
PMS_API
 
{ 
public 
class 
CountryCode 
{ 
[ 	
Key	 
] 
public 
int 
CountryCodeId  
{  !
get! $
;$ %
set& )
;) *
}* +
public		 
string		 
?		 
CountryCodeName		 '
{		' (
get		( +
;		+ ,
set		, /
;		/ 0
}		0 1
[

 	
InverseProperty

	 
(

 
$str

 &
)

& '
]

' (
public 
virtual 
ICollection "
<" #
User# '
>' (
?( )
users+ 0
{0 1
get1 4
;4 5
set5 8
;8 9
}9 :
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ö
]C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Designation.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Designation 
{ 
public 
Designation 
( 
) 
{ 	
users		 
=		 
new		 
HashSet		 
<		  
User		  $
>		$ %
(		% &
)		& '
;		' (
}

 	
[ 	
Key	 
] 
public 
int 
DesignationId  
{  !
get! $
;$ %
set& )
;) *
}* +
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
? 
DesignationName '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	
InverseProperty	 
( 
$str &
)& '
]' (
public 
ICollection 
< 
User 
>  
?  !
users# (
{* +
get+ .
;. /
set/ 2
;2 3
}3 4
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ì

XC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Domain.cs
	namespace 	
PMS_API
 
{ 
public 
class 
Domain 
{ 
[ 	
Key	 
] 
public 
int 
DomainId 
{ 
get 
;  
set! $
;$ %
}% &
[		 	
Required			 
]		 
[

 	
StringLength

	 
(

 
$num

 
)

 
]

 
public 
string 
? 

DomainName "
{" #
get# &
;& '
set' *
;* +
}+ ,
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
ICollection "
<" #
Skills# )
>) *
?* +
skills, 2
{3 4
get4 7
;7 8
set8 ;
;; <
}< =
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} 
[C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Education.cs
	namespace 	
PMS_API
 
{ 
public 

class 
	Education 
{ 
[ 	
Key	 
] 
public		 
int		 
EducationId		 
{		 
get		 "
;		" #
set		# &
;		& '
}		' (
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
string 
? 
Degree 
{ 
get !
;! "
set" %
;% &
}& '
public 
string 
? 
Course 
{ 
get !
;! "
set" %
;% &
}& '
public 
int 
	CollegeId 
{ 
get !
;! "
set" %
;% &
}& '
public 
int 
? 
Starting 
{ 
get  
;  !
set! $
;$ %
}% &
public 
int 
? 
Ending 
{ 
get 
; 
set "
;" #
}# $
public 
float 

Percentage 
{  
get  #
;# $
set$ '
;' (
}( )
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str $
)$ %
]% &
public 
virtual 
Profile 
? 
profile  '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
int   
?   
	UpdatedBy   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
[!! 	

ForeignKey!!	 
(!! 
$str!! 
)!!  
]!!  !
["" 	
InverseProperty""	 
("" 
$str"" $
)""$ %
]""% &
public## 
virtual## 
College## 
?## 
college##  '
{##( )
get##* -
;##- .
set##/ 2
;##2 3
}##4 5
[$$ 	
DefaultValue$$	 
($$ 
true$$ 
)$$ 
]$$ 
public%%	 
bool%% 
IsActive%% 
{%% 
get%%  #
;%%# $
set%%% (
;%%( )
}%%* +
}&& 
}'' ú	
XC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Gender.cs
	namespace 	
PMS_API
 
{ 
public 
class 
Gender 
{ 
[ 	
Key	 
] 
public		 
int		 
GenderId		 
{		 
get		 
;		  
set		! $
;		$ %
}		% &
public

 
string

 
?

 

GenderName

 "
{

" #
get

# &
;

& '
set

' *
;

* +
}

+ ,
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
ICollection 
< 
User 
>  
?  !
users" '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
=1 2
default2 9
!9 :
;: ;
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} «
ZC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Language.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Language 
{ 
[ 	
Key	 
] 
public		 
int		 

LanguageId		 
{		 
get		 !
;		! "
set		" %
;		% &
}		& '
public

 
string

 
?

 
LanguageName

 #
{

# $
get

$ '
;

' (
set

( +
;

+ ,
}

, -
public 
bool 
Read 
{ 
get 
; 
set  
;  !
}! "
public 
bool 
Write 
{ 
get 
; 
set !
;! "
}" #
public 
bool 
Speak 
{ 
get 
; 
set !
;! "
}" #
public 
int 
PersonalDetailsId $
{$ %
get% (
;( )
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str '
)' (
]( )
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public	 
virtual 
PersonalDetails '
?' (
personalDetails* 9
{: ;
get; >
;> ?
set? B
;B C
}C D
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ß
VC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Mail.cs
	namespace 	
PMS_API
 
{ 
[ 
	NotMapped 
] 
public 

class 
MailRequest 
{ 
public		 
string		 
?		 
ToEmail		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
IEnumerable

 
<

 
string

 !
>

! "
?

" #
ToEmailList

$ /
{

0 1
get

2 5
;

5 6
set

7 :
;

: ;
}

< =
public 
string 
? 
Subject 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Body 
{ 
get !
;! "
set# &
;& '
}( )
} 
[ 
	NotMapped 
] 
public 

class 
MailSettings 
{ 
public 
string 
? 
Mail 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
DisplayName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Host 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Port 
{ 
get 
; 
set "
;" #
}$ %
} 
} å	
^C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Organisation.cs
	namespace 	
PMS_API
 
{ 
public 
class 
Organisation 
{ 
[ 	
Key	 
] 
public 
int 
OrganisationId !
{! "
get" %
;% &
set' *
;* +
}+ ,
public		 
string		 
?		 
OrganisationName		 '
{		' (
get		( +
;		+ ,
set		, /
;		/ 0
}		0 1
[

 	
InverseProperty

	 
(

 
$str

 '
)

' (
]

( )
public 
virtual 
ICollection "
<" #
User# '
>' (
?( )
users* /
{/ 0
get0 3
;3 4
set4 7
;7 8
}8 9
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ¥$
aC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\PersonalDetails.cs
	namespace 	
PMS_API
 
{ 
public 

class 
PersonalDetails  
{ 
[ 	
Key	 
] 
public		 
int		 
PersonalDetailsId		 $
{		$ %
get		% (
;		( )
set		) ,
;		, -
}		- .
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
string 
? 
	Objective  
{  !
get! $
;$ %
set% (
;( )
}) *
public 
DateTime 
DateOfBirth #
{# $
get$ '
;' (
set( +
;+ ,
}, -
public 
string 
? 
Nationality "
{" #
get# &
;& '
set' *
;* +
}+ ,
public 
DateTime 
DateOfJoining %
{% &
get& )
;) *
set* -
;- .
}. /
public 
string 
? 
base64header #
{$ %
get% (
;( )
set) ,
;, -
}- .
public 
byte 
[ 
] 
? 
Image 
{ 
get  
;  !
set! $
;$ %
}% &
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
InverseProperty	 
( 
$str *
)* +
]+ ,
public 
virtual 
ICollection "
<" #
Language# +
>+ ,
?, -
language. 6
{7 8
get9 <
;< =
set> A
;A B
}C D
[!! 	
InverseProperty!!	 
(!! 
$str!! *
)!!* +
]!!+ ,
public"" 
virtual"" 
ICollection"" "
<""" #
BreakDuration""# 0
>""0 1
?""1 2
breakDuration""3 @
{""A B
get""C F
;""F G
set""H K
;""K L
}""M N
[$$ 	
InverseProperty$$	 
($$ 
$str$$ *
)$$* +
]$$+ ,
public%% 
virtual%% 
ICollection%% "
<%%" #
SocialMedia%%# .
>%%. /
?%%/ 0
socialmedia%%1 <
{%%= >
get%%? B
;%%B C
set%%D G
;%%G H
}%%I J
[&& 	

ForeignKey&&	 
(&& 
$str&& 
)&& 
]&& 
[''	 

InverseProperty''
 
('' 
$str'' +
)''+ ,
]'', -
public(( 
virtual(( 
User(( 
?(( 
users(( "
{((# $
get((% (
;((( )
set((* -
;((- .
}((/ 0
[)) 	

ForeignKey))	 
()) 
$str)) 
)))  
]))  !
[** 	
InverseProperty**	 
(** 
$str** *
)*** +
]**+ ,
public++ 
virtual++ 
Profile++ 
?++ 
profile++  '
{++' (
get++( +
;+++ ,
set++, /
;++/ 0
}++0 1
[,, 	
DefaultValue,,	 
(,, 
true,, 
),, 
],, 
public-- 
bool-- 
IsActive-- 
{-- 
get-- !
;--! "
set--# &
;--& '
}--' (
}.. 
}// ¾"
YC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Profile.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Profile 
{ 
[		 	
Key			 
]		 
public

 
int

 
	ProfileId

 
{

 
get

 !
;

! "
set

" %
;

% &
}

& '
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
PersonalDetails &
?& '
personalDetails( 7
{7 8
get8 ;
;; <
set< ?
;? @
}@ A
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
	Education# ,
>, -
?- .
	education/ 8
{9 :
get; >
;> ?
set@ C
;C D
}D E
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
Projects# +
>+ ,
?, -
projects. 6
{7 8
get9 <
;< =
set> A
;A B
}B C
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
Skills# )
>) *
?* +
skills, 2
{3 4
get5 8
;8 9
set: =
;= >
}> ?
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
Achievements# /
>/ 0
?0 1
achievements2 >
{? @
getA D
;D E
setF I
;I J
}J K
[ 	
DefaultValue	 
( 
$num 
) 
] 
public 
int 
ProfileStatusId "
{# $
get$ '
;' (
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str %
)% &
]& '
public 
virtual 
ProfileStatus $
?$ %
profilestatus& 3
{4 5
get5 8
;8 9
set9 <
;< =
}= >
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public   
DateTime   
?   
	UpdatedOn   "
{  # $
get  % (
;  ( )
set  * -
;  - .
}  / 0
["" 	

ForeignKey""	 
("" 
$str"" 
)"" 
]"" 
public## 
int## 
UserId## 
{## 
get## 
;## 
set## !
;##! "
}##" #
[$$ 	
DefaultValue$$	 
($$ 
true$$ 
)$$ 
]$$ 
public%% 
bool%% 
IsActive%% 
{%% 
get%%  
;%%  !
set%%! $
;%%$ %
}%%% &
['' 	

ForeignKey''	 
('' 
$str'' 
)'' 
]'' 
[(( 	
InverseProperty((	 
((( 
$str(( "
)((" #
]((# $
public)) 
virtual)) 
User)) 
?)) 
user)) !
{))" #
get))$ '
;))' (
set))) ,
;)), -
}))- .
[** 	
	NotMapped**	 
]** 
public++ 
virtual++ 
double++ 
year++ "
{++# $
get++% (
;++( )
set++* -
;++- .
}++/ 0
}-- 
}.. »

`C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\ProfileHistory.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ProfileHistory 
{ 
[		 	
Key			 
]		 
public

 
int

 
ProfileHistoryId

 #
{

# $
get

% (
;

( )
set

) ,
;

, -
}

- .
public 
int 
	ProfileId 
{ 
get  
;  !
set! $
;$ %
}% &
public 
DateTime 
ApprovedDate $
{$ %
get% (
;( )
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str 
)  
]  !
public 
virtual 
Profile 
? 
profile  '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} 
_C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\ProfileStatus.cs
	namespace 	
PMS_API
 
{ 
public 
class 
ProfileStatus 
{ 
[ 	
Key	 
] 
public 
int 
ProfileStatusId "
{" #
get# &
;& '
set( +
;+ ,
}, -
public		 
string		 
?		 
ProfileStatusName		 )
{		) *
get		* -
;		- .
set		. 1
;		1 2
}		2 3
[

 	
DefaultValue

	 
(

 
true

 
)

 
]

 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} !
ZC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Projects.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Projects 
{ 
[ 	
Key	 
] 
public		 
int		 
	ProjectId		 
{		 
get		  
;		  !
set		! $
;		$ %
}		% &
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
string 
? 
ProjectName "
{" #
get# &
;& '
set' *
;* +
}+ ,
public 
string 
? 
ProjectDescription )
{) *
get* -
;- .
set. 1
;1 2
}2 3
[ 	
	NotMapped	 
] 
public	 
DateTime  
ProjectStartingMonth -
{- .
get. 1
;1 2
set2 5
;5 6
}6 7
[ 	
	NotMapped	 
] 
public 
DateTime 
ProjectStartingYear +
{+ ,
get, /
;/ 0
set0 3
;3 4
}4 5
[ 	
	NotMapped	 
] 
public 
DateTime 
ProjectEndingMonth *
{* +
get+ .
;. /
set/ 2
;2 3
}3 4
[ 	
	NotMapped	 
] 
public 
DateTime 
ProjectEndingYear )
{) *
get* -
;- .
set. 1
;1 2
}2 3
public 
string 
? 
StartingMonth $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
StartingYear  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
EndingMonth "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 

EndingYear 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Designation "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
	ToolsUsed  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
int   
?   
	CreatedBy   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
public"" 
DateTime"" 
?"" 
	UpdatedOn"" "
{""# $
get""% (
;""( )
set""* -
;""- .
}""/ 0
public$$ 
int$$ 
?$$ 
	UpdatedBy$$ 
{$$ 
get$$  #
;$$# $
set$$% (
;$$( )
}$$* +
[%% 	

ForeignKey%%	 
(%% 
$str%% 
)%%  
]%%  !
[&& 	
InverseProperty&&	 
(&& 
$str&& #
)&&# $
]&&$ %
public'' 
virtual'' 
Profile'' 
?'' 
profile''  '
{''' (
get''( +
;''+ ,
set'', /
;''/ 0
}''0 1
[(( 	
DefaultValue((	 
((( 
true(( 
)(( 
](( 
public)) 
bool)) 
IsActive)) 
{)) 
get)) "
;))" #
set))$ '
;))' (
}))) *
}** 
}++ õ
XC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Skills.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Skills 
{ 
[ 	
Key	 
] 
public		 
int		 
SkillId		 
{		 
get		 
;		 
set		 "
;		" #
}		# $
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
int 
TechnologyId 
{  
get  #
;# $
set$ '
;' (
}( )
[ 	

ForeignKey	 
( 
$str "
)" #
]# $
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 

Technology !
?! "

technology# -
{- .
get. 1
;1 2
set2 5
;5 6
}6 7
public 
int 
DomainId 
{ 
get 
;  
set  #
;# $
}$ %
[ 	

ForeignKey	 
( 
$str 
) 
]  
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
Domain 
? 
domain %
{% &
get& )
;) *
set* -
;- .
}. /
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
Profile 
? 
profile  '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
}   
}!! ¨
]C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\SocialMedia.cs
	namespace 	
PMS_API
 
{ 
public 

class 
SocialMedia 
{ 
[ 	
Key	 
] 
public		 
int		 
SocialMedia_Id		 !
{		! "
get		" %
;		% &
set		& )
;		) *
}		* +
public

 
string

 
?

 
SocialMedia_Name

 '
{

' (
get

( +
;

+ ,
set

, /
;

/ 0
}

0 1
public 
string 
? 
SocialMedia_Link '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
public 
int 
PersonalDetailsId $
{$ %
get% (
;( )
set) ,
;, -
}- .
[	 


ForeignKey
 
( 
$str (
)( )
]) *
[ 	
InverseProperty	 
( 
$str &
)& '
]' (
public 
virtual 
PersonalDetails &
?& '
personalDetails) 8
{9 :
get: =
;= >
set> A
;A B
}B C
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} 

\C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\Technology.cs
	namespace 	
PMS_API
 
{ 
public 
class 

Technology 
{ 
[ 	
Key	 
] 
public 
int 
TechnologyId 
{  
get  #
;# $
set% (
;( )
}) *
[		 	
Required			 
]		 
public

 
string

 
?

 
TechnologyName

 %
{

% &
get

& )
;

) *
set

* -
;

- .
}

. /
[ 	
InverseProperty	 
( 
$str %
)% &
]& '
public 
virtual 
ICollection "
<" #
Skills# )
>) *
?* +
skills, 2
{3 4
get4 7
;7 8
set8 ;
;; <
}< =
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ¼)
VC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Models\User.cs
	namespace 	
PMS_API
 
{ 
public		 

class		 
User		 
{

 
[ 	
Key	 
] 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
UserName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
CountryCodeId !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	

ForeignKey	 
( 
$str #
)# $
]$ %
[ 	
InverseProperty	 
( 
$str  
)  !
]! "
public 
virtual 
CountryCode "
?" #
countrycode$ /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
string 
? 
MobileNumber #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public   
int   
DesignationId    
{  ! "
get  # &
;  & '
set  ( +
;  + ,
}  - .
["" 	

ForeignKey""	 
("" 
$str"" #
)""# $
]""$ %
[## 	
InverseProperty##	 
(## 
$str##  
)##  !
]##! "
public%% 
virtual%% 
Designation%% "
?%%" #
designation%%$ /
{%%0 1
get%%2 5
;%%5 6
set%%7 :
;%%: ;
}%%< =
public&& 
string&& 
?&& #
ReportingPersonUsername&& .
{&&/ 0
get&&1 4
;&&4 5
set&&6 9
;&&9 :
}&&; <
public(( 
int(( 
OrganisationId(( !
{((" #
get(($ '
;((' (
set(() ,
;((, -
}((. /
[)) 	

ForeignKey))	 
()) 
$str)) $
)))$ %
]))% &
[** 	
InverseProperty**	 
(** 
$str**  
)**  !
]**! "
public,, 
virtual,, 
Organisation,, #
?,,# $
organisation,,% 1
{,,2 3
get,,4 7
;,,7 8
set,,9 <
;,,< =
},,> ?
public.. 
int.. 
GenderId.. 
{.. 
get.. !
;..! "
set..# &
;..& '
}..( )
[00 	

ForeignKey00	 
(00 
$str00 
)00 
]00  
[11 	
InverseProperty11	 
(11 
$str11  
)11  !
]11! "
public33 
virtual33 
Gender33 
?33 
gender33 %
{33& '
get33( +
;33+ ,
set33- 0
;330 1
}332 3
[55 	
InverseProperty55	 
(55 
$str55  
)55  !
]55! "
public77 
virtual77 
PersonalDetails77 &
?77& '
personalDetails77( 7
{778 9
get77: =
;77= >
set77? B
;77B C
}77D E
[99 	
InverseProperty99	 
(99 
$str99 
)99  
]99  !
public:: 
virtual:: 
Profile:: 
?:: 
profile::  '
{::' (
get::( +
;::+ ,
set::, /
;::/ 0
}::0 1
public;; 
int;; 
?;; 
	CreatedBy;; 
{;; 
get;;  #
;;;# $
set;;% (
;;;( )
};;* +
public<< 
DateTime<< 
?<< 
	CreatedOn<< "
{<<# $
get<<% (
;<<( )
set<<* -
;<<- .
}<</ 0
public== 
int== 
?== 
	UpdatedBy== 
{== 
get==  #
;==# $
set==% (
;==( )
}==* +
public>> 
DateTime>> 
?>> 
	UpdatedOn>> "
{>># $
get>>% (
;>>( )
set>>* -
;>>- .
}>>/ 0
[?? 	
DefaultValue??	 
(?? 
true?? 
)?? 
]?? 
public@@ 
bool@@ 
IsActive@@ 
{@@ 
get@@ "
;@@" #
set@@$ '
;@@' (
}@@) *
}EE 
}FF ÙN
RC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Program.cs
var		 
builder		 
=		 
WebApplication		 
.		 
CreateBuilder		 *
(		* +
args		+ /
)		/ 0
;		0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
c  
=>! #
{$ %
c 
. 

SwaggerDoc 
( 
$str 
, 
new 
OpenApiInfo &
{' (
Title 
= 
$str #
,# $
Version% ,
=- .
$str/ 3
} 
) 
; 
c 
. !
AddSecurityDefinition 
( 
$str $
,$ %
new& )!
OpenApiSecurityScheme* ?
(? @
)@ A
{B C
Name 
= 
$str 
, 
Type 
= 
SecuritySchemeType %
.% &
ApiKey& ,
,, -
Scheme 
= 
$str 
, 
BearerFormat 
= 
$str  
,  !
In 
= 
ParameterLocation "
." #
Header# )
,) *
Description 
= 
$str	 Â
,
Â Ã
} 
) 
; 
c 
. "
AddSecurityRequirement 
( 
new  &
OpenApiSecurityRequirement! ;
{< =
{ 	
new !
OpenApiSecurityScheme %
{& '
	Reference 
= 
new 
OpenApiReference  0
{1 2
Type   
=   
ReferenceType   (
.  ( )
SecurityScheme  ) 7
,  7 8
Id!! 
=!! 
$str!! %
}"" 
}## 
,## 
new$$ 
string$$ 
[$$ 
]$$ 
{$$ 
}$$ 
}%% 	
}&& 
)&& 
;&& 
}'' 
)'' 
;'' 
builder(( 
.(( 
Services(( 
.(( 
AddDbContext(( 
<(( 
Context(( %
>((% &
(((& '
options((' .
=>((/ 1
{((1 2
options)) 
.)) 
UseSqlServer)) 
()) 
builder))  
.))  !
Configuration))! .
.)). /
GetConnectionString))/ B
())B C
$str))C V
)))V W
)))W X
;))X Y
}** 
)** 
;** 
builder++ 
.++ 
Services++ 
.++ 
	AddScoped++ 
<++ 
IMailService++ '
,++' (
MailService++( 3
>++3 4
(++4 5
)++5 6
;++6 7
builder,, 
.,, 
Services,, 
.,, 
	AddScoped,, 
<,,  
IMailDataAccessLayer,, /
,,,/ 0
MailDataAccessLayer,,0 C
>,,C D
(,,D E
),,E F
;,,F G
builder-- 
.-- 
Services-- 
.-- 
	AddScoped-- 
<-- 
ILoginService-- (
,--( )
LoginService--) 5
>--5 6
(--6 7
)--7 8
;--8 9
builder.. 
... 
Services.. 
... 
	AddScoped.. 
<.. 
	IUserData.. $
,..$ %
UserData..% -
>..- .
(... /
)../ 0
;..0 1
builder// 
.// 
Services// 
.// 
	AddScoped// 
<// 
IProfileData// '
,//' (
ProfileData//( 3
>//3 4
(//4 5
)//5 6
;//6 7
builder11 
.11 
Services11 
.11 
	AddScoped11 
<11 
IUserServices11 (
,11( )
UserServices11) 5
>115 6
(116 7
)117 8
;118 9
builder33 
.33 
Services33 
.33 
	AddScoped33 
<33 
IProfileService33 *
,33* +
ProfileService33+ 9
>339 :
(33: ;
)33; <
;33< =
builder44 
.44 
Services44 
.44 
	AddScoped44 
<44 
ICollegeServices44 +
,44+ ,
CollegeServices44, ;
>44; <
(44< =
)44= >
;44> ?
builder55 
.55 
Services55 
.55 
	AddScoped55 
<55  
IDesignationServices55 /
,55/ 0
DesignationServices550 C
>55C D
(55D E
)55E F
;55F G
builder66 
.66 
Services66 
.66 
	AddScoped66 
<66 
IDomainServices66 *
,66* +
DomainServices66+ 9
>669 :
(66: ;
)66; <
;66< =
builder77 
.77 
Services77 
.77 
	AddScoped77 
<77 "
IProfileStatusServices77 1
,771 2!
ProfileStatusServices772 G
>77G H
(77H I
)77I J
;77J K
builder88 
.88 
Services88 
.88 
	AddScoped88 
<88 
ITechnologyServices88 .
,88. /
TechnologyServices88/ A
>88A B
(88B C
)88C D
;88D E
builder99 
.99 
Services99 
.99 
AddAuthentication99 "
(99" #
JwtBearerDefaults99# 4
.994 5 
AuthenticationScheme995 I
)99I J
.99J K
AddJwtBearer99K W
(99W X
options99X _
=>99` b
{:: 
options;; 
.;;  
RequireHttpsMetadata;;  
=;;  !
false;;! &
;;;& '
options<< 
.<< 
	SaveToken<< 
=<< 
true<< 
;<< 
options== 
.== %
TokenValidationParameters== %
===% &
new==& )%
TokenValidationParameters==* C
(==C D
)==D E
{>> 
ValidateIssuer?? 
=?? 
true?? 
,?? 
ValidateAudience@@ 
=@@ 
true@@ 
,@@ 
ValidAudienceAA 
=AA 
builderAA 
.AA 
ConfigurationAA ,
[AA, -
$strAA- ;
]AA; <
,AA< =
ValidIssuerBB 
=BB 
builderBB 
.BB 
ConfigurationBB )
[BB) *
$strBB* 6
]BB6 7
,BB7 8
IssuerSigningKeyCC 
=CC 
newCC  
SymmetricSecurityKeyCC 1
(CC1 2
EncodingCC2 :
.CC: ;
UTF8CC; ?
.CC? @
GetBytesCC@ H
(CCH I
builderCCI P
.CCP Q
ConfigurationCCQ ^
[CC^ _
$strCC_ h
]CCh i
)CCi j
)CCj k
}DD 
;DD 
}EE 
)FF 
;FF 
builderGG 
.GG 
ServicesGG 
.GG #
AddControllersWithViewsGG (
(GG( )
)GG) *
.GG* +
AddNewtonsoftJsonGG+ <
(GG< =
optionsGG= D
=>GGE G
optionsHH 
.HH 
SerializerSettingsHH 
.HH !
ReferenceLoopHandlingHH 0
=HH0 1

NewtonsoftHH1 ;
.HH; <
JsonHH< @
.HH@ A!
ReferenceLoopHandlingHHA V
.HHV W
IgnoreHHW ]
)II 
;II 
builderJJ 
.JJ 
ServicesJJ 
.JJ 
AddCorsJJ 
(JJ 
(JJ 
setupJJ 
)JJ  
=>JJ! #
{LL 
setupNN 	
.NN	 

	AddPolicyNN
 
(NN 
$strNN 
,NN 
(NN  
optionsNN  '
)NN' (
=>NN) +
{PP 
optionsRR 
.RR 
AllowAnyMethodRR 
(RR 
)RR  
.RR  !
AllowAnyHeaderRR! /
(RR/ 0
)RR0 1
.RR1 2
AllowAnyOriginRR2 @
(RR@ A
)RRA B
;RRB C
}TT 
)TT 
;TT 
}VV 
)VV 
;VV 
varWW 
appWW 
=WW 	
builderWW
 
.WW 
BuildWW 
(WW 
)WW 
;WW 
ifZZ 
(ZZ 
appZZ 
.ZZ 
EnvironmentZZ 
.ZZ 
IsDevelopmentZZ !
(ZZ! "
)ZZ" #
)ZZ# $
{[[ 
app\\ 
.\\ 

UseSwagger\\ 
(\\ 
)\\ 
;\\ 
app]] 
.]] 
UseSwaggerUI]] 
(]] 
)]] 
;]] 
}^^ 
app__ 
.__ 
UseCors__ 
(__ 
$str__ 
)__ 
;__ 
app`` 
.`` 
UseHttpsRedirection`` 
(`` 
)`` 
;`` 
appbb 
.bb 
UseAuthenticationbb 
(bb 
)bb 
;bb 
appdd 
.dd 
UseAuthorizationdd 
(dd 
)dd 
;dd 
appff 
.ff 
MapControllersff 
(ff 
)ff 
;ff 
apphh 
.hh 
Runhh 
(hh 
)hh 	
;hh	 

cC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\CollegeServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
CollegeServices  
:! "
ICollegeServices# 3
{ 
private 
readonly #
ICollegeDataAccessLayer 0#
_collegeDataAccessLayer1 H
=I J
CollegeDataFactoryK ]
.] ^+
GetCollegeDataAccessLayerObject^ }
(} ~
)~ 
;	 
private 
readonly 
ILogger  
<  !
CollegeServices! 0
>0 1
_logger1 8
=8 9
default9 @
!@ A
;A B
public

 
IEnumerable

 
<

 
College

 "
>

" #
ViewColleges

$ 0
(

0 1
)

1 2
{ 	
try 
{ 
return 
from 
college #
in$ &#
_collegeDataAccessLayer' >
.> ?
GetColleges? J
(J K
)K L
whereM R
collegeS Z
.Z [
IsActive[ c
selectd j
collegek r
;r s
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} Ú
gC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\DesignationServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
DesignationServices $
:% & 
IDesignationServices' ;
{ 
private 
readonly '
IDesignationDataAccessLayer 4'
_designationDataAccessLayer5 P
=Q R"
DesignationDataFactoryS i
.i j0
#GetDesignationDataAccessLayerObject	j 
(
 
)
 
;
 
private 
readonly 
ILogger  
<  !
DesignationServices! 4
>4 5
_logger5 <
=< =
default> E
!E F
;F G
public 
IEnumerable 
< 
Designation &
>& '
ViewDesignations( 8
(8 9
)9 :
{ 	
try 
{ 
return 
from 
designation '
in( *'
_designationDataAccessLayer+ F
.F G
GetDesignationsG V
(V W
)W X
whereY ^
designation_ j
.j k
IsActivek s
selectt z
designation	{ 
;
 
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} 
bC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\DomainServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
DomainServices 
:  !
IDomainServices" 1
{ 
private 
readonly "
IDomainDataAccessLayer /"
_domainDataAccessLayer0 F
=G H
DomainDataFactoryI Z
.Z [*
GetDomainDataAccessLayerObject[ y
(y z
)z {
;{ |
private		 
readonly		 
ILogger		 !
<		! "
DomainServices		" 0
>		0 1
_logger		1 8
=		8 9
default		9 @
!		@ A
;		A B
public 
IEnumerable 
< 
Domain !
>! "
ViewDomains# .
(. /
)/ 0
{ 	
try 
{ 
return 
from 
domain #
in$ &"
_domainDataAccessLayer' =
.= >

GetDomains> H
(H I
)I J
whereK P
domainQ W
.W X
IsActiveX `
selecta g
domainh n
;n o
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} º
dC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\ICollegeServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
ICollegeServices %
{ 
public 
IEnumerable 
< 
College "
>" #
ViewColleges$ 0
(0 1
)1 2
;2 3
} 
} Ê
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IDesignationServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface  
IDesignationServices )
{ 
public 
IEnumerable 
< 
Designation &
>& '
ViewDesignations( 8
(8 9
)9 :
;: ;
} 
} ¶
cC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IDomainServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IDomainServices $
{ 
public 
IEnumerable 
< 
Domain !
>! "
ViewDomains# .
(. /
)/ 0
;0 1
} 
} Ü
aC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\ILoginService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
ILoginService "
{ 
public 
object 
	AuthLogin 
(  
string  &
UserName' /
,/ 0
string1 7
Password8 @
)@ A
;A B
} 
} ©
`C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IMailService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IMailService !
{ 
public 
Task 
SendEmailAsync "
(" #
MailRequest# .
mailRequest/ :
,: ;
bool; ?
isSingleMail@ L
)L M
;M N
public		 
MailRequest		 
RequestToUpdate		 *
(		* +
int		+ .
Userid		/ 5
)		5 6
;		6 7
public

 
Task

 
RequestToUpdateFile

 '
(

' (
int

( +
	profileId

, 5
)

5 6
;

6 7
public 
Task 
ShareProfile  
(  !
string! '

profileUrl( 2
,2 3
int3 6
	profileId7 @
,@ A
stringA G
toEmailNameH S
)S T
;T U
} 
} Î
iC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IOrganisationServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface !
IOrganisationServices *
{ 
public 
IEnumerable 
< 
Organisation '
>' (
ViewOrganisations) :
(: ;
); <
;< =
} 
} ³;
cC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IProfileService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IProfileService $
{ 
bool 

AddProfile 
( 
Profile 
profile  '
)' (
;( )
bool 
AddPersonalDetail 
( 
PersonalDetails .
personalDetails/ >
)> ?
;? @
IEnumerable		 
<		 
PersonalDetails		 #
>		# $!
GetAllPersonalDetails		% :
(		: ;
)		; <
;		< =
object

 "
GetPersonalDetailsById

 %
(

% &
int

& )

Personalid

* 4
)

4 5
;

5 6
PersonalDetails 
GetPersonalById '
(' (
int( +

Personalid, 6
)6 7
;7 8
bool  
UpdatePersonalDetail !
(! "
PersonalDetails" 1
personalDetails2 A
)A B
;B C
bool "
DisablePersonalDetails #
(# $
int$ '
PersonalDetailsid( 9
)9 :
;: ;
bool 
AddEducation 
( 
	Education #
	education$ -
)- .
;. /
IEnumerable 
< 
	Education 
> "
GetallEducationDetails 5
(5 6
)6 7
;7 8
object #
GetEducationDetailsById &
(& '
int' *
Educationid+ 6
)6 7
;7 8
bool 
UpdateEducation 
( 
	Education &
	education' 0
)0 1
;1 2
bool %
DisableEducationalDetails &
(& '
int' *
Educationid+ 6
)6 7
;7 8
bool 
AddProjects 
( 
Projects !
project" )
)) *
;* +
IEnumerable 
< 
Projects 
>  
GetallProjectDetails 2
(2 3
)3 4
;4 5
object !
GetProjectDetailsById $
($ %
int% (
	Projectid) 2
)2 3
;3 4
bool 
UpdateProjects 
( 
Projects $
projects% -
)- .
;. /
bool !
DisableProjectDetails "
(" #
int# &
	Projectid' 0
)0 1
;1 2
bool 
	AddSkills 
( 
Skills 
skill #
)# $
;$ %
IEnumerable 
< 
Skills 
> 
GetallSkillDetails .
(. /
)/ 0
;0 1
object 
GetSkillDetailsById "
(" #
int# &
Skillid' .
). /
;/ 0
bool 
UpdateSkills 
( 
Skills  
skill! &
)& '
;' (
bool 
DisableSkillDetails  
(  !
int! $
Skillid% ,
), -
;- .
bool!! 
AddAchievements!! 
(!! 
Achievements!! )
achievements!!* 6
)!!6 7
;!!7 8
IEnumerable"" 
<"" 
Achievements""  
>""  !
GetallAchievements""" 4
(""4 5
)""5 6
;""6 7
bool$$ 
DisableAchievement$$ 
($$  
int$$  #
AchievementId$$$ 1
)$$1 2
;$$2 3
bool&& 
AddBreakDuration&& 
(&& 
BreakDuration&& +
duration&&, 4
)&&4 5
;&&5 6
bool''  
DisableBreakDuration'' !
(''! "
int''" %
BreakDurationid''& 5
)''5 6
;''6 7
bool)) 
AddLanguage)) 
()) 
Language)) !
language))" *
)))* +
;))+ ,
bool** 
DisableLanguage** 
(** 
int**  

Languageid**! +
)**+ ,
;**, -
bool,, 
AddSocialMedia,, 
(,, 
SocialMedia,, '
media,,( -
),,- .
;,,. /
bool-- 
DisableSocialMedia-- 
(--  
int--  #
SocialMediaid--$ 1
)--1 2
;--2 3
public// 
object// )
GetPersonalDetailsByProfileId// 3
(//3 4
int//4 7
	Profileid//8 A
)//A B
;//B C
public00 
IEnumerable00 
<00 
Object00 !
>00! "-
!GetAllEducationDetailsByProfileId00# D
(00D E
int00E H
	Profileid00I R
)00R S
;00S T
public11 
IEnumerable11 
<11 
Object11 !
>11! "+
GetAllProjectDetailsByProfileId11# B
(11B C
int11C F
	Profileid11G P
)11P Q
;11Q R
public22 
IEnumerable22 
<22 
Object22 !
>22! ")
GetAllSkillDetailsByProfileId22# @
(22@ A
int22A D
	Profileid22E N
)22N O
;22O P
public33 
IEnumerable33 
<33 
Object33 !
>33! "/
#GetAllAchievementDetailsByProfileId33# F
(33F G
int33G J
	Profileid33K T
)33T U
;33U V
object44 
GetTechnologyById44  
(44  !
int44! $
Technologyid44% 1
)441 2
;442 3
IEnumerable55 
<55 

Technology55 
>55 
GetallTechnologies55  2
(552 3
)553 4
;554 5
object77 
GetProfileById77 
(77 
int77 !
	Profileid77" +
)77+ ,
;77, -
object88  
GetProfileIdByUserId88 #
(88# $
int88$ '
Userid88( .
)88. /
;88/ 0
public99 
IEnumerable99 
<99 
Profile99 "
>99" #
GetallProfiles99$ 2
(992 3
)993 4
;994 5
public:: 
object:: 
GetProfileCount:: $
(::$ %
)::% &
;::& '
public;; 
object;; 
GetFilterdProfile;; '
(;;' (
string;;( .
userName;;/ 7
,;;7 8
int;;9 <
designationId;;= J
,;;J K
int;;L O
domainID;;P X
,;;X Y
int;;Z ]
technologyId;;^ j
,;;j k
int;;l o
	collegeId;;p y
,;;y z
int;;{ ~
profileStatusId	;; 
,
;; 
int
;; 
maxExperience
;; ¡
,
;;¡ ¢
int
;;£ ¦
minExperience
;;§ ´
,
;;´ µ
int
;;¶ ¹ 
currentdesignation
;;º Ì
)
;;Ì Í
;
;;Í Î
public<< 
bool<< !
AcceptOrRejectProfile<< )
(<<) *
int<<* -
	profileId<<. 7
,<<7 8
int<<9 <
response<<= E
)<<E F
;<<F G
public== 
bool== 
updateProfileStatus== '
(==' (
Profile==( /
profile==0 7
)==7 8
;==8 9
}>> 
}?? Ñ
iC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IProfileStatusService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface "
IProfileStatusServices +
{ 
public 
IEnumerable 
< 
ProfileStatus (
>( )
ViewProfileStatuss* <
(< =
)= >
;> ?
} 
} Ç
gC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\ITechnologyServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
ITechnologyServices (
{ 
public 
IEnumerable 
< 

Technology %
>% &
ViewTechnologies' 7
(7 8
)8 9
;9 :
} 
} ç
aC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\IUserServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IUserServices "
{ 
bool 
AddUser 
( 
User 
item 
, 
int "
userId# )
)) *
;* +
bool 
Disable 
( 
int 
id 
) 
; 
object		 
GetallUsers		 
(		 
int		 
profilestatusId		 .
,		. /
int		/ 2
designationId		3 @
)		@ A
;		A B
object

 
GetUser

 
(

 
int

 
id

 
)

 
;

 
bool 
Save 
( 
) 
; 
bool 

UpdateUser 
( 
User 
item !
)! "
;" #
object "
GetSpecificUserDetails %
(% &
)& '
;' (
bool 
ChangePassword 
( 
string "
OldPassword# .
,. /
string/ 5
NewPassword6 A
,A B
stringB H
ConfirmPasswordI X
,X Y
intY \
currentUser] h
)h i
;i j
object $
GetAllUsersByDesignation '
(' (
int( +
designationId, 9
)9 :
;: ;
} 
} ¬0
`C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\LoginService.cs
	namespace		 	
PMS_API		
 
{

 
public 

class 
LoginService 
: 
ILoginService +
{ 
private 
readonly 
	IUserData "
	_userData# ,
;, -
private 
readonly 
ILogger  
<  !
LoginService! -
>- .
_logger/ 6
;6 7
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public 
LoginService 
( 
ILogger #
<# $
LoginService$ 0
>0 1
logger2 8
,8 9
IConfiguration: H
configurationI V
,V W
	IUserDataX a
userDatab j
)j k
{ 	
_logger 
= 
logger 
; 
_configuration 
= 
configuration *
;* +
	_userData 
= 
userData  
;  !
} 	
public 
object 
	AuthLogin 
(  
string  &
UserName' /
,/ 0
string1 7
Password8 @
)@ A
{ 	
try 
{ 
var 
user 
= 
	_userData #
.# $
LoginCrendentials$ 5
(5 6
UserName6 >
,> ?
Password? G
)G H
;H I
var 
claims 
= 
new  
[  !
]! "
{# $
new 
Claim !
(! "#
JwtRegisteredClaimNames" 9
.9 :
Sub: =
,= >
_configuration? M
[M N
$strN [
][ \
)\ ]
,] ^
new   
Claim   !
(  ! "#
JwtRegisteredClaimNames  " 9
.  9 :
Jti  : =
,  = >
Guid  ? C
.  C D
NewGuid  D K
(  K L
)  L M
.  M N
ToString  N V
(  V W
)  W X
)  X Y
,  Y Z
new!! 
Claim!! !
(!!! "#
JwtRegisteredClaimNames!!" 9
.!!9 :
Iat!!: =
,!!= >
DateTime!!? G
.!!G H
UtcNow!!H N
.!!N O
ToString!!O W
(!!W X
)!!X Y
)!!Y Z
,!!Z [
new"" 
Claim"" !
(""! "
$str""" ,
,"", -
user""- 1
.""1 2
UserName""2 :
!"": ;
)""; <
,""< =
new## 
Claim## !
(##! "
$str##" *
,##* +
user##+ /
.##/ 0
UserId##0 6
.##6 7
ToString##7 ?
(##? @
)##@ A
)##A B
,##B C
new$$ 
Claim$$ !
($$! "
$str$$" 1
,$$1 2
user$$2 6
.$$6 7
DesignationId$$7 D
.$$D E
ToString$$E M
($$M N
)$$N O
)$$O P
,$$P Q
}%% 
;%% 
var'' 
key'' 
='' 
new''  
SymmetricSecurityKey'' 2
(''2 3
Encoding''3 ;
.''; <
UTF8''< @
.''@ A
GetBytes''A I
(''I J
_configuration''J X
[''X Y
$str''Y b
]''b c
)''c d
)''d e
;''e f
var(( 
signIn(( 
=(( 
new((  
SigningCredentials((! 3
(((3 4
key((4 7
,((7 8
SecurityAlgorithms((9 K
.((K L

HmacSha256((L V
)((V W
;((W X
var)) 
token)) 
=)) 
new)) 
JwtSecurityToken))  0
())0 1
_configuration** "
[**" #
$str**# /
]**/ 0
,**0 1
_configuration++ "
[++" #
$str++# 1
]++1 2
,++2 3
claims,, 
,,, 
expires-- 
:-- 
DateTime-- %
.--% &
UtcNow--& ,
.--, -
AddHours--- 5
(--5 6
$num--6 7
)--7 8
,--8 9
signingCredentials.. &
:..& '
signIn..( .
)... /
;../ 0
var00 
Result00 
=00 
new00  
{11 
token22 
=22 
new22 #
JwtSecurityTokenHandler22  7
(227 8
)228 9
.229 :

WriteToken22: D
(22D E
token22E J
)22J K
,22K L
ExpiryInMinutes33 #
=33$ %
$num33& )
,33) *
IsHR44 
=44 
user44 
.44  
DesignationId44  -
==44. 0
$num441 2
,442 3
IsAdmin55 
=55 
user55 "
.55" #
DesignationId55# 0
==551 3
$num554 5
}66 
;66 
return88 
Result88 
;88 
}:: 
catch;; 
(;; 
ValidationException;; &$
loginCredentialsNotValid;;' ?
);;? @
{<< 
_logger== 
.== 
LogInformation== &
(==& '
$"==' )
$str==) \
{==\ ]$
loginCredentialsNotValid==] u
.==u v
Message==v }
}==} ~
"==~ 
)	== 
;
== 
throw>> 
;>> 
}?? 
catch@@ 
(@@ 
	Exception@@ 
	exception@@ &
)@@& '
{AA 
_loggerBB 
.BB 
LogInformationBB &
(BB& '
$"BB' )
$strBB) \
{BB\ ]
	exceptionBB] f
.BBf g
MessageBBg n
}BBn o
"BBo p
)BBp q
;BBq r
throwCC 
;CC 
}DD 
}EE 	
}GG 
}HH £T
_C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\MailService.cs
	namespace

 	
PMS_API


 
{ 
public 

class 
MailService 
: 
IMailService +
{ 
private 
readonly 
MailSettings %
_mailSettings& 3
;3 4
private 
readonly 
ILogger  
<  !
MailService! ,
>, -
_logger. 5
;5 6
private 
readonly  
IMailDataAccessLayer - 
_mailDataAccessLayer. B
;B C
public 
MailService 
( 
ILogger "
<" #
MailService# .
>. /
logger0 6
,6 7
IOptions8 @
<@ A
MailSettingsA M
>M N
mailSettingsO [
,[ \ 
IMailDataAccessLayer] q 
mailDataAccessLayer	r 
)
 
{ 	
_logger 
= 
logger 
; 
_mailSettings 
= 
mailSettings (
.( )
Value) .
;. / 
_mailDataAccessLayer  
=! "
mailDataAccessLayer# 6
;6 7
} 	
public 
async 
Task 
SendEmailAsync (
(( )
MailRequest) 4
mailRequest5 @
,@ A
boolB F
isSingleMailG S
)S T
{ 	
try 
{ 
var 
email 
= 
new 
MimeMessage  +
(+ ,
), -
;- .
email 
. 
Sender 
= 
MailboxAddress -
.- .
Parse. 3
(3 4
_mailSettings4 A
.A B
MailB F
)F G
;G H
if 
( 
isSingleMail  
==! #
true$ (
)( )
email   
.   
To   
.   
Add    
(    !
MailboxAddress  ! /
.  / 0
Parse  0 5
(  5 6
mailRequest  6 A
.  A B
ToEmail  B I
)  I J
)  J K
;  K L
else!! 
{"" 
foreach## 
(## 
var##  
mailid##! '
in##( *
mailRequest##+ 6
.##6 7
ToEmailList##7 B
!##B C
)##C D
email$$ 
.$$ 
To$$  
.$$  !
Add$$! $
($$$ %
MailboxAddress$$% 3
.$$3 4
Parse$$4 9
($$9 :
mailid$$: @
)$$@ A
)$$A B
;$$B C
}%% 
email&& 
.&& 
Subject&& 
=&& 
mailRequest&&  +
.&&+ ,
Subject&&, 3
;&&3 4
var'' 
builder'' 
='' 
new'' !
BodyBuilder''" -
(''- .
)''. /
;''/ 0
builder)) 
.)) 
TextBody))  
=))! "
mailRequest))# .
.)). /
Body))/ 3
;))3 4
email** 
.** 
Body** 
=** 
builder** $
.**$ %
ToMessageBody**% 2
(**2 3
)**3 4
;**4 5
using++ 
var++ 
smtp++ 
=++  
new++! $
MailKit++% ,
.++, -
Net++- 0
.++0 1
Smtp++1 5
.++5 6

SmtpClient++6 @
(++@ A
)++A B
;++B C
smtp,, 
.,, 
Connect,, 
(,, 
_mailSettings,, *
.,,* +
Host,,+ /
,,,/ 0
_mailSettings,,1 >
.,,> ?
Port,,? C
,,,C D
SecureSocketOptions,,E X
.,,X Y
StartTls,,Y a
),,a b
;,,b c
smtp-- 
.-- 
Authenticate-- !
(--! "
_mailSettings--" /
.--/ 0
Mail--0 4
,--4 5
_mailSettings--6 C
.--C D
Password--D L
)--L M
;--M N
await.. 
smtp.. 
... 
	SendAsync.. $
(..$ %
email..% *
)..* +
;..+ ,
smtp// 
.// 

Disconnect// 
(//  
true//  $
)//$ %
;//% &
}00 
catch11 
(11 
SmtpException11  '
sendEmailAsyncSmptException11! <
)11< =
{22 
_logger33 
.33 
LogInformation33 &
(33& '
$"33' )
$str	33) 
{
33 )
sendEmailAsyncSmptException
33 ¢
.
33¢ £
Message
33£ ª
}
33ª «
$str
33« ®
{
33® ¯)
sendEmailAsyncSmptException
33¯ Ê
.
33Ê Ë

StackTrace
33Ë Õ
}
33Õ Ö
"
33Ö ×
)
33× Ø
;
33Ø Ù
throw44 
new44 
MailException44 '
(44' (
$str44( J
)44J K
;44K L
}55 
catch66 
(66 
	Exception66 #
sendEmailAsyncException66 4
)664 5
{77 
_logger88 
.88 
LogInformation88 &
(88& '
$"88' )
$str	88) 
{
88 %
sendEmailAsyncException
88 
.
88 
Message
88 ¢
}
88¢ £
$str
88£ ¦
{
88¦ §%
sendEmailAsyncException
88§ ¾
.
88¾ ¿

StackTrace
88¿ É
}
88É Ê
"
88Ê Ë
)
88Ë Ì
;
88Ì Í
throw99 
new99 
MailException99 '
(99' (
$str99( J
)99J K
;99K L
}:: 
};; 	
public<< 
MailRequest<< 
RequestToUpdate<< *
(<<* +
int<<+ .
Userid<</ 5
)<<5 6
{== 	
try>> 
{?? 
MailRequest@@ 
mailRequest@@ '
=@@( )
MailDataFactory@@* 9
.@@9 : 
GetMailRequestObject@@: N
(@@N O
)@@O P
;@@P Q
mailRequestAA 
.AA 
ToEmailAA #
=AA$ % 
_mailDataAccessLayerAA& :
.AA: ;
GetUserEmailAA; G
(AAG H
UseridAAH N
)AAN O
;AAO P
mailRequestBB 
.BB 
SubjectBB #
=BB$ %
$strBB& 9
;BB9 :
mailRequestCC 
.CC 
BodyCC  
=CC! "
$"CC# %
$strCC% )
{CC) * 
_mailDataAccessLayerCC* >
.CC> ?
GetUserNameCC? J
(CCJ K
UseridCCK Q
)CCQ R
}CCR S
$str	CCS 
"
CC 
;
CC 
returnDD 
mailRequestDD "
;DD" #
}EE 
catchFF 
(FF 
	ExceptionFF $
RequestToUpdateExceptionFF 5
)FF5 6
{GG 
_loggerHH 
.HH 
LogInformationHH &
(HH& '
$"HH' )
$strHH) c
{HHc d$
RequestToUpdateExceptionHHd |
.HH| }
Message	HH} 
}
HH 
"
HH 
)
HH 
;
HH 
throwII 
newII 
MailExceptionII '
(II' (
$strII( J
)IIJ K
;IIK L
}JJ 
}KK 	
publicLL 
asyncLL 
TaskLL 
RequestToUpdateFileLL -
(LL- .
intLL. 1
	profileIdLL2 ;
)LL; <
{MM 	
stringNN 
userNameNN 
=NN  
_mailDataAccessLayerNN 2
.NN2 3$
GetUserNameWithProfileIdNN3 K
(NNK L
	profileIdNNL U
)NNU V
;NNV W
stringOO 
pathOO 
=OO 
$strOO P
;OOP Q
stringPP 
fileNamePP 
=PP 
$strPP $
+PP$ %
userNamePP% -
+PP- .
SystemPP. 4
.PP4 5
DateTimePP5 =
.PP= >
NowPP> A
.PPA B
TicksPPB G
+PPG H
$strPPH N
;PPN O
stringQQ 
emailContentQQ 
=QQ  !
$"QQ" $
$strQQ$ (
{QQ( )
userNameQQ) 1
}QQ1 2
$str	QQ2 Ü
"
QQÜ Ý
;
QQÝ Þ
usingRR 
StreamWriterRR 
fileRR #
=RR$ %
FileRR& *
.RR* +

CreateTextRR+ 5
(RR5 6
PathRR6 :
.RR: ;
CombineRR; B
(RRB C
pathRRC G
,RRG H
fileNameRRI Q
)RRQ R
)RRR S
;RRS T
awaitSS 
fileSS 
.SS 
WriteLineAsyncSS %
(SS% &
emailContentSS& 2
)SS2 3
;SS3 4
}TT 	
publicUU 
asyncUU 
TaskUU 
ShareProfileUU &
(UU& '
stringUU' -

profileUrlUU. 8
,UU8 9
intUU9 <
	profileIdUU= F
,UUF G
stringUUG M
toEmailNameUUN Y
)UUY Z
{VV 	
stringWW 
userNameWW 
=WW  
_mailDataAccessLayerWW 2
.WW2 3$
GetUserNameWithProfileIdWW3 K
(WWK L
	profileIdWWL U
)WWU V
;WWV W
stringXX 
pathXX 
=XX 
$strXX P
;XXP Q
stringYY 
fileNameYY 
=YY 
$strYY '
+YY' (
userNameYY( 0
+YY0 1
SystemYY1 7
.YY7 8
DateTimeYY8 @
.YY@ A
NowYYA D
.YYD E
TicksYYE J
+YYJ K
$strYYK Q
;YYQ R
stringZZ 
emailContentZZ 
=ZZ  !
$"ZZ" $
$strZZ$ (
{ZZ( )
toEmailNameZZ) 4
}ZZ4 5
$strZZ5 K
{ZZK L
userNameZZL T
}ZZT U
$strZZU }
{ZZ} ~

profileUrl	ZZ~ 
}
ZZ 
$str
ZZ Ù
"
ZZÙ Ú
;
ZZÚ Û
using[[ 
StreamWriter[[ 
file[[ #
=[[$ %
File[[& *
.[[* +

CreateText[[+ 5
([[5 6
Path[[6 :
.[[: ;
Combine[[; B
([[B C
path[[C G
,[[G H
fileName[[I Q
)[[Q R
)[[R S
;[[S T
await\\ 
file\\ 
.\\ 
WriteLineAsync\\ %
(\\% &
emailContent\\& 2
)\\2 3
;\\3 4
}]] 	
}^^ 
}__ ê
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\OrganisationServices.cs
	namespace 	
PMS_API
 
{ 
public 

class  
OrganisationServices %
:& '!
IOrganisationServices( =
{ 
private 
readonly (
IOrganisationDataAccessLayer 5(
_OrganisationDataAccessLayer6 R
=S T#
OrganisationDataFactoryU l
.l m1
$GetOrganisationDataAccessLayerObject	m 
(
 
)
 
;
 
private 
readonly 
ILogger  
<  ! 
OrganisationServices! 5
>5 6
_logger6 =
== >
default> E
!E F
;F G
public 
IEnumerable 
< 
Organisation '
>' (
ViewOrganisations) :
(: ;
); <
{ 	
try 
{ 
return 
from 
organisation )
in* ,(
_OrganisationDataAccessLayer- I
.I J
GetOrganisationsJ Z
(Z [
)[ \
where] b
organisationc o
.o p
IsActivep x
selecty 
organisation
 
;
 
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} ñÑ
bC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\ProfileService.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ProfileService 
:  !
IProfileService" 1
{ 
ProfileData		 
profileData		 
;		  
private

 
ILogger

 
<

 
ProfileService

 &
>

& '
_logger

( /
;

/ 0
private 
static 
ProfileValidation (
_profileValidate) 9
=: ;
ProfileDataFactory< N
.N O%
GetProfileVaidationObjectO h
(h i
)i j
;j k
public 
ProfileService 
( 
ILogger %
<% &
ProfileService& 4
>4 5
logger6 <
)< =
{ 	
_logger 
= 
logger 
; 
profileData 
= 
ProfileDataFactory ,
., -
GetProfileData- ;
(; <
logger< B
)B C
;C D
} 	
public 
bool 

AddProfile 
( 
Profile &
profile' .
). /
{ 	
if 
( 
profile 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
$"A C
$strC d
{d e
profilee l
}l m
"m n
)n o
;o p
try 
{ 
profile 
. 
	CreatedBy !
=" #
profile$ +
.+ ,
UserId, 2
;2 3
profile 
. 
	CreatedOn !
=" #
DateTime$ ,
., -
Now- 0
;0 1
profile 
. 
IsActive  
=! "
true# '
;' (
return 
profileData "
." #

AddProfile# -
(- .
profile. 5
)5 6
?7 8
true9 =
:> ?
false@ E
;E F
} 
catch 
( 
	Exception 
	exception &
)& '
{ 
_logger   
.   
LogInformation   &
(  & '
$"  ' )
$str  ) E
{  E F
	exception  F O
.  O P
Message  P W
}  W X
$str  X Z
{  Z [
	exception  [ d
.  d e

StackTrace  e o
}  o p
"  p q
)  q r
;  r s
return!! 
false!! 
;!! 
}"" 
}$$ 	
public&& 
bool&& 
AddPersonalDetail&& %
(&&% &
PersonalDetails&&& 5
personalDetails&&6 E
)&&E F
{'' 	
if(( 
((( 
personalDetails(( 
==((  "
null((# '
)((' (
throw(() .
new((/ 2!
ArgumentNullException((3 H
(((H I
$"((I K
$str((K l
{((l m
personalDetails((m |
}((| }
"((} ~
)((~ 
;	(( 
_profileValidate)) 
.)) #
PersonalDetailsvalidate)) 4
())4 5
personalDetails))5 D
)))D E
;))E F
try** 
{++ 
personalDetails-- 
.--  
	CreatedBy--  )
=--* +
personalDetails--, ;
.--; <
	ProfileId--< E
;--E F
personalDetails.. 
...  
	CreatedOn..  )
=..* +
DateTime.., 4
...4 5
Now..5 8
;..8 9
string// 
	Imagedate//  
=//! "
$str//# %
;//% &
	Imagedate00 
=00 
ImageService00 (
.00( )
Getbase64String00) 8
(008 9
personalDetails009 H
.00H I
base64header00I U
!00U V
)00V W
;00W X
personalDetails22 
.22  
base64header22  ,
=22- .
ImageService22/ ;
.22; <
Getbase64Header22< K
(22K L
personalDetails22L [
.22[ \
base64header22\ h
!22h i
)22i j
;22j k
personalDetails44 
.44  
Image44  %
=44& '
System44( .
.44. /
Convert44/ 6
.446 7
FromBase64String447 G
(44G H
	Imagedate44H Q
)44Q R
;44R S
return55 
profileData55 "
.55" #
AddPersonalDetail55# 4
(554 5
personalDetails555 D
)55D E
?55F G
true55H L
:55M N
false55O T
;55T U
}66 
catch77 
(77 
	Exception77 
	exception77 &
)77& '
{88 
_logger99 
.99 
LogInformation99 &
(99& '
$"99' )
$str99) L
{99L M
	exception99M V
.99V W
Message99W ^
}99^ _
$str99_ a
{99a b
	exception99b k
.99k l

StackTrace99l v
}99v w
"99w x
)99x y
;99y z
return:: 
false:: 
;:: 
};; 
}== 	
public>> 
IEnumerable>> 
<>> 
PersonalDetails>> *
>>>* +!
GetAllPersonalDetails>>, A
(>>A B
)>>B C
{?? 	
try@@ 
{AA 
returnBB 
fromBB 
personalDetailsBB +
inBB, .
profileDataBB/ :
.BB: ;!
GetAllPersonalDetailsBB; P
(BBP Q
)BBQ R
whereBBS X
personalDetailsBBY h
.BBh i
IsActiveBBi q
selectBBr x
personalDetails	BBy 
;
BB 
}CC 
catchDD 
(DD 
	ExceptionDD 
	exceptionDD &
)DD& '
{EE 
_loggerGG 
.GG 
LogErrorGG  
(GG  !
$"GG! #
$strGG# J
{GGJ K
	exceptionGGK T
.GGT U
MessageGGU \
}GG\ ]
$strGG] _
{GG_ `
	exceptionGG` i
.GGi j

StackTraceGGj t
}GGt u
"GGu v
)GGv w
;GGw x
throwHH 
	exceptionHH 
;HH  
}II 
}JJ 	
publicKK 
objectKK "
GetPersonalDetailsByIdKK ,
(KK, -
intKK- 0

PersonalidKK1 ;
)KK; <
{LL 	
ifMM 
(MM 

PersonalidMM 
<=MM 
$numMM 
)MM  
throwNN 
newNN !
ArgumentNullExceptionNN /
(NN/ 0
$"NN0 2
$strNN2 D
{NND E

PersonalidNNE O
}NNO P
"NNP Q
)NNQ R
;NNR S
tryOO 
{PP 
varQQ 
getpersonaldetailsQQ &
=QQ' (
profileDataQQ) 4
.QQ4 5"
GetPersonalDetailsByIdQQ5 K
(QQK L

PersonalidQQL V
)QQV W
;QQW X
returnRR 
newRR 
{SS 
personaldetailsidTT %
=TT& '
getpersonaldetailsTT( :
.TT: ;
PersonalDetailsIdTT; L
,TTL M
ImageUU 
=UU 
getpersonaldetailsUU .
.UU. /
ImageUU/ 4
,UU4 5
	objectiveVV 
=VV 
getpersonaldetailsVV  2
.VV2 3
	ObjectiveVV3 <
,VV< =
dateofbirthWW 
=WW  !
getpersonaldetailsWW" 4
.WW4 5
DateOfBirthWW5 @
,WW@ A
nationalityXX 
=XX  !
getpersonaldetailsXX" 4
.XX4 5
NationalityXX5 @
,XX@ A
dateofjoiningYY !
=YY" #
getpersonaldetailsYY$ 6
.YY6 7
DateOfJoiningYY7 D
,YYD E
languageZZ 
=ZZ 
getpersonaldetailsZZ 1
.ZZ1 2
languageZZ2 :
,ZZ: ;
socialmedia[[ 
=[[  !
getpersonaldetails[[" 4
.[[4 5
socialmedia[[5 @
,[[@ A
breakduration\\ !
=\\" #
getpersonaldetails\\$ 6
.\\6 7
breakDuration\\7 D
,\\D E
}^^ 
;^^ 
}__ 
catch`` 
(`` 
	Exception`` 
	exception`` &
)``& '
{aa 
_loggerbb 
.bb 
LogErrorbb  
(bb  !
$"bb! #
$strbb# K
{bbK L
	exceptionbbL U
.bbU V
MessagebbV ]
}bb] ^
$strbb^ `
{bb` a
	exceptionbba j
.bbj k

StackTracebbk u
}bbu v
"bbv w
)bbw x
;bbx y
throwcc 
	exceptioncc 
;cc  
}dd 
}ee 	
publicff 
objectff )
GetPersonalDetailsByProfileIdff 3
(ff3 4
intff4 7
	Profileidff8 A
)ffA B
{gg 	
ifhh 
(hh 
	Profileidhh 
<=hh 
$numhh 
)hh 
throwii 
newii !
ArgumentNullExceptionii /
(ii/ 0
$"ii0 2
$strii2 D
{iiD E
	ProfileidiiE N
}iiN O
"iiO P
)iiP Q
;iiQ R
tryjj 
{kk 
varll )
getpersonaldetailsbyprofileidll 1
=ll2 3
profileDatall4 ?
.ll? @!
GetAllPersonalDetailsll@ U
(llU V
)llV W
.llW X
WherellX ]
(ll] ^
itemll^ b
=>llc e
itemllf j
.llj k
	ProfileIdllk t
==llu w
	Profileid	llx 
)
ll 
.
ll 
Select
ll 
(
ll 
item
ll 
=>
ll 
newmm 
{nn 
personaldetailsidoo &
=oo' (
itemoo) -
.oo- .
PersonalDetailsIdoo. ?
,oo? @
Imagepp 
=pp 
itempp !
.pp! "
Imagepp" '
,pp' (
	objectiveqq 
=qq  
itemqq! %
.qq% &
	Objectiveqq& /
,qq/ 0
dateofbirthrr  
=rr! "
itemrr# '
.rr' (
DateOfBirthrr( 3
,rr3 4
nationalityss  
=ss! "
itemss# '
.ss' (
Nationalityss( 3
,ss3 4
dateofjoiningtt "
=tt# $
itemtt% )
.tt) *
DateOfJoiningtt* 7
,tt7 8
languageuu 
=uu 1
%removeAdditionalDetailsExceptLanguageuu  E
(uuE F
itemuuF J
.uuJ K
languageuuK S
!uuS T
)uuT U
,uuU V
socialmediavv  
=vv! "4
(removeAdditionalDetailsExceptSocialMediavv# K
(vvK L
itemvvL P
.vvP Q
socialmediavvQ \
!vv\ ]
)vv] ^
,vv^ _
breakdurationww "
=ww# $6
*removeAdditionalDetailsExceptBreakDurationww% O
(wwO P
itemwwP T
.wwT U
breakDurationwwU b
!wwb c
)wwc d
,wwd e
}{{ 
){{ 
;{{ 
return{{ )
getpersonaldetailsbyprofileid{{ 9
;{{9 :
}|| 
catch}} 
(}} 
	Exception}} 
	exception}} &
)}}& '
{~~ 
_logger 
. 
LogError  
(  !
$"! #
$str# R
{R S
	exceptionS \
.\ ]
Message] d
}d e
$stre g
{g h
	exceptionh q
.q r

StackTracer |
}| }
"} ~
)~ 
;	 
throw
 
	exception
 
;
  
}
 
}
 	
private
 
ICollection
 
<
 
Language
 $
>
$ %3
%removeAdditionalDetailsExceptLanguage
& K
(
K L
ICollection
L W
<
W X
Language
X `
>
` a
	languages
b k
)
k l
{
 	
foreach
 
(
 
var
 
item
 
in
  
	languages
! *
)
* +
{
 
item
 
.
 
personalDetails
 $
=
% &
null
' +
;
+ ,
}
 
return
 
	languages
 
;
 
}
 	
private
 
ICollection
 
<
 
BreakDuration
 )
>
) *8
*removeAdditionalDetailsExceptBreakDuration
+ U
(
U V
ICollection
V a
<
a b
BreakDuration
b o
>
o p
breakDurations
q 
) 
{
 	
foreach
 
(
 
var
 
item
 
in
  
breakDurations
! /
)
/ 0
{
 
item
 
.
 
personalDetails
 $
=
% &
null
' +
;
+ ,
}
 
return
 
breakDurations
 !
;
! "
}
 	
private
 
ICollection
 
<
 
SocialMedia
 '
>
' (6
(removeAdditionalDetailsExceptSocialMedia
) Q
(
Q R
ICollection
R ]
<
] ^
SocialMedia
^ i
>
i j
socialMedias
k w
)
w x
{
 	
foreach
 
(
 
var
 
item
 
in
  
socialMedias
! -
)
- .
{
 
item
 
.
 
personalDetails
 $
=
% &
null
' +
;
+ ,
}
 
return
 
socialMedias
 
;
  
}
 	
public
 
PersonalDetails
 
GetPersonalById
 .
(
. /
int
/ 2
PersonalDetailsId
3 D
)
D E
{
 	
try
 
{
 
if
 
(
 
PersonalDetailsId
 %
<=
& (
$num
) *
)
* +
throw
   
new
   #
ArgumentNullException
   3
(
  3 4
$"
  4 6
$str
  6 H
{
  H I
PersonalDetailsId
  I Z
}
  Z [
"
  [ \
)
  \ ]
;
  ] ^
PersonalDetails
¡¡ 
personalDetails
¡¡  /
=
¡¡0 1
profileData
¡¡2 =
.
¡¡= >$
GetPersonalDetailsById
¡¡> T
(
¡¡T U
PersonalDetailsId
¡¡U f
)
¡¡f g
;
¡¡g h
return
¢¢ 
personalDetails
¢¢ &
;
¢¢& '
}
££ 
catch
¤¤ 
(
¤¤ 
	Exception
¤¤ 
	exception
¤¤ &
)
¤¤& '
{
¥¥ 
_logger
¦¦ 
.
¦¦ 
LogError
¦¦  
(
¦¦  !
$"
¦¦! #
$str
¦¦# D
{
¦¦D E
	exception
¦¦E N
.
¦¦N O
Message
¦¦O V
}
¦¦V W
$str
¦¦W Y
{
¦¦Y Z
	exception
¦¦Z c
.
¦¦c d

StackTrace
¦¦d n
}
¦¦n o
"
¦¦o p
)
¦¦p q
;
¦¦q r
throw
§§ 
	exception
§§ 
;
§§  
}
¨¨ 
}
©© 	
public
ªª 
bool
ªª "
UpdatePersonalDetail
ªª (
(
ªª( )
PersonalDetails
ªª) 8
personalDetails
ªª9 H
)
ªªH I
{
«« 	
if
¬¬ 
(
¬¬ 
personalDetails
¬¬ 
==
¬¬  "
null
¬¬# '
)
¬¬' (
throw
¬¬) .
new
¬¬/ 2#
ArgumentNullException
¬¬3 H
(
¬¬H I
$"
¬¬I K
$str¬¬K 
{¬¬ 
personalDetails¬¬ 
}¬¬ 
"¬¬ 
)¬¬  
;¬¬  ¡
try
®® 
{
¯¯ 
var
°° 
Profile
°° 
=
°° 
GetPersonalById
°° -
(
°°- .
personalDetails
°°. =
.
°°= >
PersonalDetailsId
°°> O
)
°°O P
;
°°P Q
if
±± 
(
±± 
Profile
±± 
.
±± 
	Objective
±± %
!=
±±& (
personalDetails
±±) 8
.
±±8 9
	Objective
±±9 B
)
±±B C
Profile
²² 
.
²² 
	Objective
²² %
=
²²& '
personalDetails
²²( 7
.
²²7 8
	Objective
²²8 A
;
²²A B
if
³³ 
(
³³ 
Profile
³³ 
.
³³ 
DateOfBirth
³³ '
!=
³³( *
personalDetails
³³+ :
.
³³: ;
DateOfBirth
³³; F
)
³³F G
Profile
´´ 
.
´´ 
DateOfBirth
´´ '
=
´´( )
personalDetails
´´* 9
.
´´9 :
DateOfBirth
´´: E
;
´´E F
if
µµ 
(
µµ 
Profile
µµ 
.
µµ 
DateOfJoining
µµ )
!=
µµ* ,
personalDetails
µµ- <
.
µµ< =
DateOfJoining
µµ= J
)
µµJ K
Profile
¶¶ 
.
¶¶ 
DateOfJoining
¶¶ )
=
¶¶* +
personalDetails
¶¶, ;
.
¶¶; <
DateOfJoining
¶¶< I
;
¶¶I J
if
·· 
(
·· 
Profile
·· 
.
·· 
Nationality
·· '
!=
··( *
personalDetails
··+ :
.
··: ;
Nationality
··; F
)
··F G
Profile
¸¸ 
.
¸¸ 
Nationality
¸¸ '
=
¸¸( )
personalDetails
¸¸* 9
.
¸¸9 :
Nationality
¸¸: E
;
¸¸E F
if
¹¹ 
(
¹¹ 
Profile
¹¹ 
.
¹¹ 
base64header
¹¹ (
!=
¹¹) +
personalDetails
¹¹, ;
.
¹¹; <
base64header
¹¹< H
)
¹¹H I
Profile
ºº 
.
ºº 
base64header
ºº (
=
ºº) *
personalDetails
ºº+ :
.
ºº: ;
base64header
ºº; G
;
ººG H
if
»» 
(
»» 
Profile
»» 
.
»» 
Image
»» !
!=
»»" $
personalDetails
»»% 4
.
»»4 5
Image
»»5 :
)
»»: ;
Profile
¼¼ 
.
¼¼ 
Image
¼¼ !
=
¼¼" #
personalDetails
¼¼$ 3
.
¼¼3 4
Image
¼¼4 9
;
¼¼9 :
Profile
¾¾ 
.
¾¾ 
	UpdatedBy
¾¾ !
=
¾¾" #
personalDetails
¾¾$ 3
.
¾¾3 4
	CreatedBy
¾¾4 =
;
¾¾= >
Profile
¿¿ 
.
¿¿ 
	UpdatedOn
¿¿ !
=
¿¿" #
DateTime
¿¿$ ,
.
¿¿, -
Now
¿¿- 0
;
¿¿0 1
return
ÀÀ 
profileData
ÀÀ "
.
ÀÀ" #"
UpdatePersonalDetail
ÀÀ# 7
(
ÀÀ7 8
Profile
ÀÀ8 ?
)
ÀÀ? @
;
ÀÀ@ A
}
ÁÁ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
	exception
ÂÂ &
)
ÂÂ& '
{
ÃÃ 
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ &
(
ÄÄ& '
$"
ÄÄ' )
$str
ÄÄ) O
{
ÄÄO P
	exception
ÄÄP Y
.
ÄÄY Z
Message
ÄÄZ a
}
ÄÄa b
$str
ÄÄb d
{
ÄÄd e
	exception
ÄÄe n
.
ÄÄn o

StackTrace
ÄÄo y
}
ÄÄy z
"
ÄÄz {
)
ÄÄ{ |
;
ÄÄ| }
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
}
ÆÆ 
}
ÈÈ 	
public
ËË 
bool
ËË $
DisablePersonalDetails
ËË *
(
ËË* +
int
ËË+ .
PersonalDetailid
ËË/ ?
)
ËË? @
{
ÌÌ 	
if
ÍÍ 
(
ÍÍ 
PersonalDetailid
ÍÍ  
<=
ÍÍ! #
$num
ÍÍ$ %
)
ÍÍ% &
throw
ÎÎ 
new
ÎÎ #
ArgumentNullException
ÎÎ /
(
ÎÎ/ 0
$"
ÎÎ0 2
$str
ÎÎ2 D
{
ÎÎD E
PersonalDetailid
ÎÎE U
}
ÎÎU V
"
ÎÎV W
)
ÎÎW X
;
ÎÎX Y
try
ÑÑ 
{
ÒÒ 
return
ÔÔ 
profileData
ÔÔ "
.
ÔÔ" #$
DisablePersonalDetails
ÔÔ# 9
(
ÔÔ9 :
PersonalDetailid
ÔÔ: J
)
ÔÔJ K
?
ÔÔL M
true
ÔÔN R
:
ÔÔS T
false
ÔÔU Z
;
ÔÔZ [
}
ÖÖ 
catch
ØØ 
(
ØØ 
	Exception
ØØ 
	exception
ØØ &
)
ØØ& '
{
ÙÙ 
_logger
ÚÚ 
.
ÚÚ 
LogInformation
ÚÚ &
(
ÚÚ& '
$"
ÚÚ' )
$str
ÚÚ) Q
{
ÚÚQ R
	exception
ÚÚR [
.
ÚÚ[ \
Message
ÚÚ\ c
}
ÚÚc d
$str
ÚÚd f
{
ÚÚf g
	exception
ÚÚg p
.
ÚÚp q

StackTrace
ÚÚq {
}
ÚÚ{ |
"
ÚÚ| }
)
ÚÚ} ~
;
ÚÚ~ 
return
ÛÛ 
false
ÛÛ 
;
ÛÛ 
}
ÜÜ 
}
ÝÝ 	
public
ßß 
bool
ßß 
AddEducation
ßß  
(
ßß  !
	Education
ßß! *
	education
ßß+ 4
)
ßß4 5
{
àà 	
if
áá 
(
áá 
	education
áá 
==
áá 
null
áá !
)
áá! "
throw
áá# (
new
áá) ,#
ArgumentNullException
áá- B
(
ááB C
$"
ááC E
$str
ááE f
{
ááf g
	education
áág p
}
ááp q
"
ááq r
)
áár s
;
áás t
_profileValidate
ââ 
.
ââ '
Educationdetailvalidation
ââ 6
(
ââ6 7
	education
ââ7 @
)
ââ@ A
;
ââA B
try
ãã 
{
ää 
	education
çç 
.
çç 
	CreatedBy
çç #
=
çç$ %
	education
çç& /
.
çç/ 0
	ProfileId
çç0 9
;
çç9 :
	education
èè 
.
èè 
	CreatedOn
èè #
=
èè$ %
DateTime
èè& .
.
èè. /
Now
èè/ 2
;
èè2 3
return
éé 
profileData
éé "
.
éé" #
AddEducation
éé# /
(
éé/ 0
	education
éé0 9
)
éé9 :
?
éé; <
true
éé= A
:
ééB C
false
ééD I
;
ééI J
}
êê 
catch
ëë 
(
ëë !
ValidationException
ëë &
	exception
ëë' 0
)
ëë0 1
{
ìì 
_logger
íí 
.
íí 
LogError
íí  
(
íí  !
$"
íí! #
$str
íí# J
{
ííJ K
	exception
ííK T
.
ííT U
Message
ííU \
}
íí\ ]
$str
íí] _
{
íí_ `
	exception
íí` i
.
ííi j

StackTrace
ííj t
}
íít u
"
ííu v
)
íív w
;
ííw x
throw
îî 
;
îî 
}
ïï 
catch
ðð 
(
ðð 
	Exception
ðð 
	exception
ðð &
)
ðð& '
{
ññ 
_logger
òò 
.
òò 
LogInformation
òò &
(
òò& '
$"
òò' )
$str
òò) G
{
òòG H
	exception
òòH Q
.
òòQ R
Message
òòR Y
}
òòY Z
$str
òòZ \
{
òò\ ]
	exception
òò] f
.
òòf g

StackTrace
òòg q
}
òòq r
"
òòr s
)
òòs t
;
òòt u
throw
óó 
;
óó 
}
õõ 
}
øø 	
public
úú 
Object
úú %
GetEducationDetailsById
úú -
(
úú- .
int
úú. 1
Educationid
úú2 =
)
úú= >
{
ûû 	
if
üü 
(
üü 
Educationid
üü 
<=
üü 
$num
üü  
)
üü  !
throw
ýý 
new
ýý #
ArgumentNullException
ýý /
(
ýý/ 0
$"
ýý0 2
$str
ýý2 D
{
ýýD E
Educationid
ýýE P
}
ýýP Q
"
ýýQ R
)
ýýR S
;
ýýS T
try
þþ 
{
ÿÿ 
var
 !
geteducationdetails
 '
=
( )
profileData
* 5
.
5 6%
GetEducationDetailsById
6 M
(
M N
Educationid
N Y
)
Y Z
;
Z [
return
 
new
 
{
 
educationid
 
=
  !!
geteducationdetails
" 5
.
5 6
EducationId
6 A
,
A B
degree
 
=
 !
geteducationdetails
 0
.
0 1
Degree
1 7
,
7 8
course
 
=
 !
geteducationdetails
 0
.
0 1
Course
1 7
,
7 8
college
 
=
 !
geteducationdetails
 1
.
1 2
college
2 9
!
9 :
.
: ;
CollegeName
; F
,
F G
	collegeid
 
=
 !
geteducationdetails
  3
.
3 4
	CollegeId
4 =
,
= >
starting
 
=
 !
geteducationdetails
 2
.
2 3
Starting
3 ;
,
; <
ending
 
=
 !
geteducationdetails
 0
.
0 1
Ending
1 7
,
7 8

percentage
 
=
  !
geteducationdetails
! 4
.
4 5

Percentage
5 ?
}
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# L
{
L M
	exception
M V
.
V W
Message
W ^
}
^ _
$str
_ a
{
a b
	exception
b k
.
k l

StackTrace
l v
}
v w
"
w x
)
x y
;
y z
throw
 
	exception
 
;
  
}
 
}
 	
public
 
IEnumerable
 
<
 
	Education
 $
>
$ %$
GetallEducationDetails
& <
(
< =
)
= >
{
 	
try
 
{
 
return
 
from
 

educations
 &
in
' )
profileData
* 5
.
5 6$
GetallEducationDetails
6 L
(
L M
)
M N
where
O T

educations
U _
.
_ `
IsActive
` h
==
i k
true
l p
select
q w

educationsx 
; 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
   
_logger
¢¢ 
.
¢¢ 
LogError
¢¢  
(
¢¢  !
$"
¢¢! #
$str
¢¢# K
{
¢¢K L
	exception
¢¢L U
.
¢¢U V
Message
¢¢V ]
}
¢¢] ^
$str
¢¢^ `
{
¢¢` a
	exception
¢¢a j
.
¢¢j k

StackTrace
¢¢k u
}
¢¢u v
"
¢¢v w
)
¢¢w x
;
¢¢x y
throw
££ 
	exception
££ 
;
££  
}
¤¤ 
}
¥¥ 	
public
¦¦ 
IEnumerable
¦¦ 
<
¦¦ 
Object
¦¦ !
>
¦¦! "/
!GetAllEducationDetailsByProfileId
¦¦# D
(
¦¦D E
int
¦¦E H
	Profileid
¦¦I R
)
¦¦R S
{
§§ 	
if
¨¨ 
(
¨¨ 
	Profileid
¨¨ 
<=
¨¨ 
$num
¨¨ 
)
¨¨ 
throw
©© 
new
©© #
ArgumentNullException
©© /
(
©©/ 0
$"
©©0 2
$str
©©2 D
{
©©D E
	Profileid
©©E N
}
©©N O
"
©©O P
)
©©P Q
;
©©Q R
try
ªª 
{
«« 
var
¬¬ ,
geteducationdetailsbyprofileid
¬¬ 2
=
¬¬3 4
profileData
¬¬5 @
.
¬¬@ A$
GetallEducationDetails
¬¬A W
(
¬¬W X
)
¬¬X Y
.
¬¬Y Z
Where
¬¬Z _
(
¬¬_ `
item
¬¬` d
=>
¬¬e g
item
¬¬h l
.
¬¬l m
	ProfileId
¬¬m v
==
¬¬w y
	Profileid¬¬z 
&&¬¬ 
item¬¬ 
.¬¬ 
IsActive¬¬ 
==¬¬ 
true¬¬ 
)¬¬ 
.¬¬ 
Select¬¬ ¤
(¬¬¤ ¥
item¬¬¥ ©
=>¬¬ª ¬
new
­­ 
{
®® 
educationid
¯¯  
=
¯¯! "
item
¯¯# '
.
¯¯' (
EducationId
¯¯( 3
,
¯¯3 4
degree
°° 
=
°° 
item
°° "
.
°°" #
Degree
°°# )
,
°°) *
course
±± 
=
±± 
item
±± "
.
±±" #
Course
±±# )
,
±±) *
college
²² 
=
²² 
item
²² #
.
²²# $
college
²²$ +
?
²²+ ,
.
²², -
CollegeName
²²- 8
,
²²8 9
startingyear
³³ !
=
³³" #
item
³³$ (
.
³³( )
Starting
³³) 1
,
³³1 2

endingyear
´´ 
=
´´  !
item
´´" &
.
´´& '
Ending
´´' -
,
´´- .

percentage
µµ 
=
µµ  !
item
µµ" &
.
µµ& '

Percentage
µµ' 1
}
·· 
)
·· 
;
·· 
return
·· ,
geteducationdetailsbyprofileid
·· :
;
··: ;
}
¸¸ 
catch
¹¹ 
(
¹¹ 
	Exception
¹¹ 
	exception
¹¹ &
)
¹¹& '
{
ºº 
_logger
»» 
.
»» 
LogError
»»  
(
»»  !
$"
»»! #
$str
»»# V
{
»»V W
	exception
»»W `
.
»»` a
Message
»»a h
}
»»h i
$str
»»i k
{
»»k l
	exception
»»l u
.
»»u v

StackTrace»»v 
}»» 
"»» 
)»» 
;»» 
throw
¼¼ 
	exception
¼¼ 
;
¼¼  
}
½½ 
}
¾¾ 	
public
¿¿ 
	Education
¿¿ 
GetEducationById
¿¿ )
(
¿¿) *
int
¿¿* -
EducationId
¿¿. 9
)
¿¿9 :
{
ÀÀ 	
try
ÁÁ 
{
ÂÂ 
if
ÃÃ 
(
ÃÃ 
EducationId
ÃÃ 
<=
ÃÃ  "
$num
ÃÃ# $
)
ÃÃ$ %
throw
ÄÄ 
new
ÄÄ #
ArgumentNullException
ÄÄ 3
(
ÄÄ3 4
$"
ÄÄ4 6
$str
ÄÄ6 H
{
ÄÄH I
EducationId
ÄÄI T
}
ÄÄT U
"
ÄÄU V
)
ÄÄV W
;
ÄÄW X
	Education
ÅÅ 
	education
ÅÅ #
=
ÅÅ$ %
profileData
ÅÅ& 1
.
ÅÅ1 2%
GetEducationDetailsById
ÅÅ2 I
(
ÅÅI J
EducationId
ÅÅJ U
)
ÅÅU V
;
ÅÅV W
return
ÆÆ 
	education
ÆÆ  
;
ÆÆ  !
}
ÇÇ 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
	exception
ÈÈ &
)
ÈÈ& '
{
ÉÉ 
_logger
ÊÊ 
.
ÊÊ 
LogError
ÊÊ  
(
ÊÊ  !
$"
ÊÊ! #
$str
ÊÊ# J
{
ÊÊJ K
	exception
ÊÊK T
.
ÊÊT U
Message
ÊÊU \
}
ÊÊ\ ]
$str
ÊÊ] _
{
ÊÊ_ `
	exception
ÊÊ` i
.
ÊÊi j

StackTrace
ÊÊj t
}
ÊÊt u
"
ÊÊu v
)
ÊÊv w
;
ÊÊw x
throw
ËË 
	exception
ËË 
;
ËË  
}
ÌÌ 
}
ÎÎ 	
public
ÏÏ 
bool
ÏÏ 
UpdateEducation
ÏÏ #
(
ÏÏ# $
	Education
ÏÏ$ -
	education
ÏÏ. 7
)
ÏÏ7 8
{
ÐÐ 	
if
ÑÑ 
(
ÑÑ 
	education
ÑÑ 
==
ÑÑ 
null
ÑÑ !
)
ÑÑ! "
throw
ÑÑ# (
new
ÑÑ) ,#
ArgumentNullException
ÑÑ- B
(
ÑÑB C
$"
ÑÑC E
$strÑÑE 
{ÑÑ 
	educationÑÑ 
}ÑÑ 
"ÑÑ 
)ÑÑ 
;ÑÑ 
try
ÓÓ 
{
ÔÔ 
	Education
ÕÕ 
Profile
ÕÕ !
=
ÕÕ" #
GetEducationById
ÕÕ$ 4
(
ÕÕ4 5
	education
ÕÕ5 >
.
ÕÕ> ?
EducationId
ÕÕ? J
)
ÕÕJ K
;
ÕÕK L
if
×× 
(
×× 
Profile
×× 
.
×× 
Degree
×× "
!=
××# %
	education
××& /
.
××/ 0
Degree
××0 6
)
××6 7
Profile
ØØ 
.
ØØ 
Degree
ØØ "
=
ØØ# $
	education
ØØ% .
.
ØØ. /
Degree
ØØ/ 5
;
ØØ5 6
if
ÙÙ 
(
ÙÙ 
Profile
ÙÙ 
.
ÙÙ 
Course
ÙÙ "
!=
ÙÙ# %
	education
ÙÙ& /
.
ÙÙ/ 0
Course
ÙÙ0 6
)
ÙÙ6 7
Profile
ÚÚ 
.
ÚÚ 
Course
ÚÚ "
=
ÚÚ# $
	education
ÚÚ% .
.
ÚÚ. /
Course
ÚÚ/ 5
;
ÚÚ5 6
if
ÛÛ 
(
ÛÛ 
Profile
ÛÛ 
.
ÛÛ 
	CollegeId
ÛÛ %
!=
ÛÛ& (
	education
ÛÛ) 2
.
ÛÛ2 3
	CollegeId
ÛÛ3 <
)
ÛÛ< =
Profile
ÜÜ 
.
ÜÜ 
	CollegeId
ÜÜ %
=
ÜÜ& '
	education
ÜÜ( 1
.
ÜÜ1 2
	CollegeId
ÜÜ2 ;
;
ÜÜ; <
if
ÝÝ 
(
ÝÝ 
Profile
ÝÝ 
.
ÝÝ 
Starting
ÝÝ $
!=
ÝÝ% '
	education
ÝÝ( 1
.
ÝÝ1 2
Starting
ÝÝ2 :
)
ÝÝ: ;
Profile
ÞÞ 
.
ÞÞ 
Starting
ÞÞ $
=
ÞÞ% &
	education
ÞÞ' 0
.
ÞÞ0 1
Starting
ÞÞ1 9
;
ÞÞ9 :
if
ßß 
(
ßß 
Profile
ßß 
.
ßß 
Ending
ßß "
!=
ßß# %
	education
ßß& /
.
ßß/ 0
Ending
ßß0 6
)
ßß6 7
Profile
àà 
.
àà 
Ending
àà "
=
àà# $
	education
àà% .
.
àà. /
Ending
àà/ 5
;
àà5 6
if
áá 
(
áá 
Profile
áá 
.
áá 

Percentage
áá &
!=
áá' )
	education
áá* 3
.
áá3 4

Percentage
áá4 >
)
áá> ?
Profile
ââ 
.
ââ 

Percentage
ââ &
=
ââ' (
	education
ââ) 2
.
ââ2 3

Percentage
ââ3 =
;
ââ= >
Profile
ãã 
.
ãã 
	UpdatedBy
ãã !
=
ãã" #
	education
ãã$ -
.
ãã- .
	CreatedBy
ãã. 7
;
ãã7 8
Profile
ää 
.
ää 
	UpdatedOn
ää !
=
ää" #
DateTime
ää$ ,
.
ää, -
Now
ää- 0
;
ää0 1
return
ææ 
profileData
ææ "
.
ææ" #
UpdateEducation
ææ# 2
(
ææ2 3
Profile
ææ3 :
)
ææ: ;
;
ææ; <
}
èè 
catch
éé 
(
éé 
	Exception
éé 
	exception
éé &
)
éé& '
{
êê 
_logger
ëë 
.
ëë 
LogInformation
ëë &
(
ëë& '
$"
ëë' )
$str
ëë) L
{
ëëL M
	exception
ëëM V
.
ëëV W
Message
ëëW ^
}
ëë^ _
$str
ëë_ a
{
ëëa b
	exception
ëëb k
.
ëëk l

StackTrace
ëël v
}
ëëv w
"
ëëw x
)
ëëx y
;
ëëy z
return
ìì 
false
ìì 
;
ìì 
}
íí 
}
îî 	
public
ïï 
bool
ïï '
DisableEducationalDetails
ïï -
(
ïï- .
int
ïï. 1!
EducationalDetailid
ïï2 E
)
ïïE F
{
ðð 	
if
ññ 
(
ññ !
EducationalDetailid
ññ #
<=
ññ$ &
$num
ññ' (
)
ññ( )
throw
òò 
new
òò #
ArgumentNullException
òò /
(
òò/ 0
$"
òò0 2
$str
òò2 D
{
òòD E!
EducationalDetailid
òòE X
}
òòX Y
"
òòY Z
)
òòZ [
;
òò[ \
try
õõ 
{
öö 
return
øø 
profileData
øø "
.
øø" #'
DisableEducationalDetails
øø# <
(
øø< =!
EducationalDetailid
øø= P
)
øøP Q
?
øøR S
true
øøT X
:
øøY Z
false
øø[ `
;
øø` a
}
úú 
catch
üü 
(
üü 
	Exception
üü 
	exception
üü &
)
üü& '
{
ýý 
_logger
þþ 
.
þþ 
LogInformation
þþ &
(
þþ& '
$"
þþ' )
$str
þþ) C
{
þþC D
	exception
þþD M
.
þþM N
Message
þþN U
}
þþU V
$str
þþV X
{
þþX Y
	exception
þþY b
.
þþb c

StackTrace
þþc m
}
þþm n
"
þþn o
)
þþo p
;
þþp q
return
ÿÿ 
false
ÿÿ 
;
ÿÿ 
}
 
}
 	
public
 
bool
 
AddProjects
 
(
  
Projects
  (
project
) 0
)
0 1
{
 	
if
 
(
 
project
 
==
 
null
 
)
  
throw
! &
new
' *#
ArgumentNullException
+ @
(
@ A
$"
A C
$str
C d
{
d e
project
e l
}
l m
"
m n
)
n o
;
o p
try
 
{
 
project
 
.
 
IsActive
  
=
! "
true
# '
;
' (
project
 
.
 
	CreatedBy
 !
=
" #
project
$ +
.
+ ,
	ProfileId
, 5
;
5 6
project
 
.
 
	CreatedOn
 !
=
" #
DateTime
$ ,
.
, -
Now
- 0
;
0 1
return
 
profileData
 "
.
" #
AddProjects
# .
(
. /
project
/ 6
)
6 7
?
8 9
true
: >
:
? @
false
A F
;
F G
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) H
{
H I
	exception
I R
.
R S
Message
S Z
}
Z [
$str
[ ]
{
] ^
	exception
^ g
.
g h

StackTrace
h r
}
r s
"
s t
)
t u
;
u v
return
 
false
 
;
 
}
 
}
 	
public
 
object
 #
GetProjectDetailsById
 +
(
+ ,
int
, /
	Projectid
0 9
)
9 :
{
 	
if
 
(
 
	Projectid
 
<=
 
$num
 
)
 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$"
0 2
$str
2 D
{
D E
	Projectid
E N
}
N O
"
O P
)
P Q
;
Q R
try
 
{
 
var
 
getprojectdetails
 %
=
& '
profileData
( 3
.
3 4#
GetProjectDetailsById
4 I
(
I J
	Projectid
J S
)
S T
;
T U
return
 
new
 
{
 
	projectid
   
=
   
getprojectdetails
    1
.
  1 2
	ProjectId
  2 ;
,
  ; <
projectname
¡¡ 
=
¡¡  !
getprojectdetails
¡¡" 3
.
¡¡3 4
ProjectName
¡¡4 ?
,
¡¡? @ 
projectdescription
¢¢ &
=
¢¢' (
getprojectdetails
¢¢) :
.
¢¢: ; 
ProjectDescription
¢¢; M
,
¢¢M N
startingMonth
££ !
=
££" #
getprojectdetails
££$ 5
.
££5 6
StartingMonth
££6 C
,
££C D
startingYear
¤¤  
=
¤¤! "
getprojectdetails
¤¤# 4
.
¤¤4 5
StartingYear
¤¤5 A
,
¤¤A B
endingMonth
¥¥ 
=
¥¥  !
getprojectdetails
¥¥" 3
.
¥¥3 4
EndingMonth
¥¥4 ?
,
¥¥? @

endingYear
¦¦ 
=
¦¦  
getprojectdetails
¦¦! 2
.
¦¦2 3

EndingYear
¦¦3 =
,
¦¦= >
role
§§ 
=
§§ 
getprojectdetails
§§ ,
.
§§, -
Designation
§§- 8
,
§§8 9
	toolsused
¨¨ 
=
¨¨ 
getprojectdetails
¨¨  1
.
¨¨1 2
	ToolsUsed
¨¨2 ;
,
¨¨; <
}
ªª 
;
ªª 
}
«« 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
	exception
¬¬ &
)
¬¬& '
{
­­ 
_logger
®® 
.
®® 
LogError
®®  
(
®®  !
$"
®®! #
$str
®®# J
{
®®J K
	exception
®®K T
.
®®T U
Message
®®U \
}
®®\ ]
$str
®®] _
{
®®_ `
	exception
®®` i
.
®®i j

StackTrace
®®j t
}
®®t u
"
®®u v
)
®®v w
;
®®w x
throw
¯¯ 
	exception
¯¯ 
;
¯¯  
}
°° 
}
±± 	
public
²² 
IEnumerable
²² 
<
²² 
Projects
²² #
>
²²# $"
GetallProjectDetails
²²% 9
(
²²9 :
)
²²: ;
{
³³ 	
try
´´ 
{
µµ 
return
¸¸ 
from
¸¸ 
projects
¸¸ $
in
¸¸% '
profileData
¸¸( 3
.
¸¸3 4"
GetallProjectDetails
¸¸4 H
(
¸¸H I
)
¸¸I J
where
¸¸K P
projects
¸¸Q Y
.
¸¸Y Z
IsActive
¸¸Z b
==
¸¸c e
true
¸¸f j
select
¸¸k q
projects
¸¸r z
;
¸¸z {
}
¼¼ 
catch
½½ 
(
½½ 
	Exception
½½ 
	exception
½½ &
)
½½& '
{
¾¾ 
_logger
ÀÀ 
.
ÀÀ 
LogError
ÀÀ  
(
ÀÀ  !
$"
ÀÀ! #
$str
ÀÀ# K
{
ÀÀK L
	exception
ÀÀL U
.
ÀÀU V
Message
ÀÀV ]
}
ÀÀ] ^
$str
ÀÀ^ `
{
ÀÀ` a
	exception
ÀÀa j
.
ÀÀj k

StackTrace
ÀÀk u
}
ÀÀu v
"
ÀÀv w
)
ÀÀw x
;
ÀÀx y
throw
ÁÁ 
	exception
ÁÁ 
;
ÁÁ  
}
ÂÂ 
}
ÃÃ 	
public
ÄÄ 
IEnumerable
ÄÄ 
<
ÄÄ 
Object
ÄÄ !
>
ÄÄ! "-
GetAllProjectDetailsByProfileId
ÄÄ# B
(
ÄÄB C
int
ÄÄC F
	Profileid
ÄÄG P
)
ÄÄP Q
{
ÅÅ 	
if
ÆÆ 
(
ÆÆ 
	Profileid
ÆÆ 
<=
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
throw
ÇÇ 
new
ÇÇ #
ArgumentNullException
ÇÇ /
(
ÇÇ/ 0
$"
ÇÇ0 2
$str
ÇÇ2 D
{
ÇÇD E
	Profileid
ÇÇE N
}
ÇÇN O
"
ÇÇO P
)
ÇÇP Q
;
ÇÇQ R
try
ÈÈ 
{
ÉÉ 
var
ËË -
getallprojectdetailsbyprofileid
ËË 3
=
ËË4 5
profileData
ËË6 A
.
ËËA B"
GetallProjectDetails
ËËB V
(
ËËV W
)
ËËW X
.
ËËX Y
Where
ËËY ^
(
ËË^ _
item
ËË_ c
=>
ËËd f
item
ËËg k
.
ËËk l
	ProfileId
ËËl u
==
ËËv x
	ProfileidËËy 
&&ËË 
itemËË 
.ËË 
IsActiveËË 
==ËË 
trueËË 
)ËË 
.ËË 
SelectËË £
(ËË£ ¤
itemËË¤ ¨
=>ËË© «
new
ÌÌ 
{
ÍÍ 
	projectid
ÏÏ 
=
ÏÏ  
item
ÏÏ! %
.
ÏÏ% &
	ProjectId
ÏÏ& /
,
ÏÏ/ 0
projectname
ÐÐ  
=
ÐÐ! "
item
ÐÐ# '
.
ÐÐ' (
ProjectName
ÐÐ( 3
,
ÐÐ3 4 
projectdescription
ÑÑ '
=
ÑÑ( )
item
ÑÑ* .
.
ÑÑ. / 
ProjectDescription
ÑÑ/ A
,
ÑÑA B
startingMonth
ÒÒ "
=
ÒÒ# $
item
ÒÒ% )
.
ÒÒ) *
StartingMonth
ÒÒ* 7
,
ÒÒ7 8
startingYear
ÓÓ !
=
ÓÓ" #
item
ÓÓ$ (
.
ÓÓ( )
StartingYear
ÓÓ) 5
,
ÓÓ5 6
endingMonth
ÔÔ  
=
ÔÔ! "
item
ÔÔ# '
.
ÔÔ' (
EndingMonth
ÔÔ( 3
,
ÔÔ3 4

endingYear
ÕÕ 
=
ÕÕ  !
item
ÕÕ" &
.
ÕÕ& '

EndingYear
ÕÕ' 1
,
ÕÕ1 2
role
ÖÖ 
=
ÖÖ 
item
ÖÖ  
.
ÖÖ  !
Designation
ÖÖ! ,
,
ÖÖ, -
	toolsused
×× 
=
××  
item
××! %
.
××% &
	ToolsUsed
××& /
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
return
ÜÜ -
getallprojectdetailsbyprofileid
ÜÜ ;
;
ÜÜ; <
}
ßß 
catch
àà 
(
àà 
	Exception
àà 
	exception
àà &
)
àà& '
{
áá 
_logger
ââ 
.
ââ 
LogError
ââ  
(
ââ  !
$"
ââ! #
$str
ââ# J
{
ââJ K
	exception
ââK T
.
ââT U
Message
ââU \
}
ââ\ ]
$str
ââ] _
{
ââ_ `
	exception
ââ` i
.
ââi j

StackTrace
ââj t
}
âât u
"
ââu v
)
ââv w
;
ââw x
throw
ãã 
	exception
ãã 
;
ãã  
}
ää 
}
åå 	
public
ææ 
Projects
ææ 
GetProjectById
ææ &
(
ææ& '
int
ææ' *
	ProjectId
ææ+ 4
)
ææ4 5
{
çç 	
try
èè 
{
éé 
if
êê 
(
êê 
	ProjectId
êê 
<=
êê  
$num
êê! "
)
êê" #
throw
ëë 
new
ëë #
ArgumentNullException
ëë 3
(
ëë3 4
$"
ëë4 6
$str
ëë6 J
{
ëëJ K
	ProjectId
ëëK T
}
ëëT U
"
ëëU V
)
ëëV W
;
ëëW X
Projects
ìì 
project
ìì  
=
ìì! "
profileData
ìì# .
.
ìì. /#
GetProjectDetailsById
ìì/ D
(
ììD E
	ProjectId
ììE N
)
ììN O
;
ììO P
return
íí 
project
íí 
;
íí 
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
	exception
ïï &
)
ïï& '
{
ðð 
_logger
ññ 
.
ññ 
LogError
ññ  
(
ññ  !
$"
ññ! #
$str
ññ# J
{
ññJ K
	exception
ññK T
.
ññT U
Message
ññU \
}
ññ\ ]
$str
ññ] _
{
ññ_ `
	exception
ññ` i
.
ññi j

StackTrace
ññj t
}
ññt u
"
ññu v
)
ññv w
;
ññw x
throw
òò 
	exception
òò 
;
òò  
}
óó 
}
õõ 	
public
öö 
bool
öö 
UpdateProjects
öö "
(
öö" #
Projects
öö# +
projects
öö, 4
)
öö4 5
{
÷÷ 	
if
øø 
(
øø 
projects
øø 
==
øø 
null
øø  
)
øø  !
throw
øø" '
new
øø( +#
ArgumentNullException
øø, A
(
øøA B
$"
øøB D
$strøøD 
{øø 
projectsøø 
}øø 
"øø 
)øø 
;øø 
try
úú 
{
ûû 
var
üü 
Profile
üü 
=
üü 
GetProjectById
üü ,
(
üü, -
projects
üü- 5
.
üü5 6
	ProjectId
üü6 ?
)
üü? @
;
üü@ A
if
þþ 
(
þþ 
Profile
þþ 
.
þþ 
ProjectName
þþ '
!=
þþ( *
projects
þþ+ 3
.
þþ3 4
ProjectName
þþ4 ?
)
þþ? @
Profile
ÿÿ 
.
ÿÿ 
ProjectName
ÿÿ '
=
ÿÿ( )
projects
ÿÿ* 2
.
ÿÿ2 3
ProjectName
ÿÿ3 >
;
ÿÿ> ?
if
 
(
 
Profile
 
.
  
ProjectDescription
 .
!=
/ 1
projects
2 :
.
: ; 
ProjectDescription
; M
)
M N
Profile
 
.
  
ProjectDescription
 .
=
/ 0
projects
1 9
.
9 : 
ProjectDescription
: L
;
L M
if
 
(
 
Profile
 
.
 
StartingMonth
 )
!=
* ,
projects
- 5
.
5 6
StartingMonth
6 C
)
C D
Profile
 
.
 
StartingMonth
 )
=
* +
projects
, 4
.
4 5
StartingMonth
5 B
;
B C
if
 
(
 
Profile
 
.
 
StartingYear
 (
!=
) +
projects
, 4
.
4 5
StartingYear
5 A
)
A B
Profile
 
.
 
StartingYear
 (
=
) *
projects
+ 3
.
3 4
StartingYear
4 @
;
@ A
if
 
(
 
Profile
 
.
 
EndingMonth
 '
!=
( *
projects
+ 3
.
3 4
EndingMonth
4 ?
)
? @
Profile
 
.
 
EndingMonth
 '
=
( )
projects
* 2
.
2 3
EndingMonth
3 >
;
> ?
if
 
(
 
Profile
 
.
 

EndingYear
 &
!=
' )
projects
* 2
.
2 3

EndingYear
3 =
)
= >
Profile
 
.
 

EndingYear
 &
=
' (
projects
) 1
.
1 2

EndingYear
2 <
;
< =
if
 
(
 
Profile
 
.
 
Designation
 '
!=
( *
projects
+ 3
.
3 4
Designation
4 ?
)
? @
Profile
 
.
 
Designation
 '
=
( )
projects
* 2
.
2 3
Designation
3 >
;
> ?
if
 
(
 
Profile
 
.
 
	ToolsUsed
 %
!=
& (
projects
) 1
.
1 2
	ToolsUsed
2 ;
)
; <
Profile
 
.
 
	ToolsUsed
 %
=
& '
projects
( 0
.
0 1
	ToolsUsed
1 :
;
: ;
Profile
 
.
 
IsActive
  
=
! "
projects
# +
.
+ ,
IsActive
, 4
;
4 5
Profile
 
.
 
	UpdatedBy
 !
=
" #
projects
$ ,
.
, -
	CreatedBy
- 6
;
6 7
Profile
 
.
 
	UpdatedOn
 !
=
" #
DateTime
$ ,
.
, -
Now
- 0
;
0 1
return
 
profileData
 "
.
" #
UpdateProjects
# 1
(
1 2
Profile
2 9
)
9 :
;
: ;
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) J
{
J K
	exception
K T
.
T U
Message
U \
}
\ ]
$str
] _
{
_ `
	exception
` i
.
i j

StackTrace
j t
}
t u
"
u v
)
v w
;
w x
return
 
false
 
;
 
}
 
}
 	
public
 
bool
 #
DisableProjectDetails
 )
(
) *
int
* -
ProjectDetailid
. =
)
= >
{
 	
if
 
(
 
ProjectDetailid
 
<=
  "
$num
# $
)
$ %
throw
   
new
   #
ArgumentNullException
   /
(
  / 0
$"
  0 2
$str
  2 D
{
  D E
ProjectDetailid
  E T
}
  T U
"
  U V
)
  V W
;
  W X
try
££ 
{
¤¤ 
return
¦¦ 
profileData
¦¦ "
.
¦¦" ##
DisableProjectDetails
¦¦# 8
(
¦¦8 9
ProjectDetailid
¦¦9 H
)
¦¦H I
?
¦¦J K
true
¦¦L P
:
¦¦Q R
false
¦¦S X
;
¦¦X Y
}
¨¨ 
catch
ªª 
(
ªª 
	Exception
ªª 
	exception
ªª &
)
ªª& '
{
«« 
_logger
¬¬ 
.
¬¬ 
LogInformation
¬¬ &
(
¬¬& '
$"
¬¬' )
$str
¬¬) C
{
¬¬C D
	exception
¬¬D M
.
¬¬M N
Message
¬¬N U
}
¬¬U V
$str
¬¬V X
{
¬¬X Y
	exception
¬¬Y b
.
¬¬b c

StackTrace
¬¬c m
}
¬¬m n
"
¬¬n o
)
¬¬o p
;
¬¬p q
return
­­ 
false
­­ 
;
­­ 
}
®® 
}
¯¯ 	
public
±± 
bool
±± 
	AddSkills
±± 
(
±± 
Skills
±± $
skill
±±% *
)
±±* +
{
²² 	
if
³³ 
(
³³ 
skill
³³ 
==
³³ 
null
³³ 
)
³³ 
throw
³³ $
new
³³% (#
ArgumentNullException
³³) >
(
³³> ?
$"
³³? A
$str
³³A b
{
³³b c
skill
³³c h
}
³³h i
"
³³i j
)
³³j k
;
³³k l
try
µµ 
{
¶¶ 
skill
·· 
.
·· 
	CreatedBy
·· 
=
··  !
skill
··" '
.
··' (
	ProfileId
··( 1
;
··1 2
skill
¸¸ 
.
¸¸ 
	CreatedOn
¸¸ 
=
¸¸  !
DateTime
¸¸" *
.
¸¸* +
Now
¸¸+ .
;
¸¸. /
return
¹¹ 
profileData
¹¹ "
.
¹¹" #
	AddSkills
¹¹# ,
(
¹¹, -
skill
¹¹- 2
)
¹¹2 3
?
¹¹4 5
true
¹¹6 :
:
¹¹; <
false
¹¹= B
;
¹¹B C
}
ºº 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
¼¼ 
_logger
½½ 
.
½½ 
LogInformation
½½ &
(
½½& '
$"
½½' )
$str
½½) F
{
½½F G
	exception
½½G P
.
½½P Q
Message
½½Q X
}
½½X Y
$str
½½Y [
{
½½[ \
	exception
½½\ e
.
½½e f

StackTrace
½½f p
}
½½p q
"
½½q r
)
½½r s
;
½½s t
return
¾¾ 
false
¾¾ 
;
¾¾ 
}
¿¿ 
}
ÂÂ 	
public
ÄÄ 
object
ÄÄ !
GetSkillDetailsById
ÄÄ )
(
ÄÄ) *
int
ÄÄ* -
Skillid
ÄÄ. 5
)
ÄÄ5 6
{
ÅÅ 	
if
ÆÆ 
(
ÆÆ 
Skillid
ÆÆ 
<=
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
throw
ÇÇ 
new
ÇÇ #
ArgumentNullException
ÇÇ /
(
ÇÇ/ 0
$"
ÇÇ0 2
$str
ÇÇ2 D
{
ÇÇD E
Skillid
ÇÇE L
}
ÇÇL M
"
ÇÇM N
)
ÇÇN O
;
ÇÇO P
try
ÈÈ 
{
ÉÉ 
var
ÊÊ 
getskilldetails
ÊÊ #
=
ÊÊ$ %
profileData
ÊÊ& 1
.
ÊÊ1 2!
GetSkillDetailsById
ÊÊ2 E
(
ÊÊE F
Skillid
ÊÊF M
)
ÊÊM N
;
ÊÊN O
return
ËË 
new
ËË 
{
ÌÌ 
skillid
ÍÍ 
=
ÍÍ 
getskilldetails
ÍÍ -
.
ÍÍ- .
SkillId
ÍÍ. 5
,
ÍÍ5 6

domainname
ÎÎ 
=
ÎÎ  
getskilldetails
ÎÎ! 0
.
ÎÎ0 1
domain
ÎÎ1 7
!
ÎÎ7 8
.
ÎÎ8 9

DomainName
ÎÎ9 C
,
ÎÎC D
technologyname
ÏÏ "
=
ÏÏ# $
getskilldetails
ÏÏ% 4
.
ÏÏ4 5

technology
ÏÏ5 ?
!
ÏÏ? @
.
ÏÏ@ A
TechnologyName
ÏÏA O
,
ÏÏO P
domainId
ÐÐ 
=
ÐÐ 
getskilldetails
ÐÐ .
.
ÐÐ. /
DomainId
ÐÐ/ 7
,
ÐÐ7 8
technologyId
ÑÑ  
=
ÑÑ! "
getskilldetails
ÑÑ# 2
.
ÑÑ2 3
TechnologyId
ÑÑ3 ?
}
ÒÒ 
;
ÒÒ 
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
	Exception
ÔÔ 
	exception
ÔÔ &
)
ÔÔ& '
{
ÕÕ 
_logger
ÖÖ 
.
ÖÖ 
LogError
ÖÖ  
(
ÖÖ  !
$"
ÖÖ! #
$str
ÖÖ# J
{
ÖÖJ K
	exception
ÖÖK T
.
ÖÖT U
Message
ÖÖU \
}
ÖÖ\ ]
$str
ÖÖ] _
{
ÖÖ_ `
	exception
ÖÖ` i
.
ÖÖi j

StackTrace
ÖÖj t
}
ÖÖt u
"
ÖÖu v
)
ÖÖv w
;
ÖÖw x
throw
×× 
	exception
×× 
;
××  
}
ØØ 
}
ÙÙ 	
public
ÚÚ 
IEnumerable
ÚÚ 
<
ÚÚ 
Skills
ÚÚ !
>
ÚÚ! " 
GetallSkillDetails
ÚÚ# 5
(
ÚÚ5 6
)
ÚÚ6 7
{
ÛÛ 	
try
ÜÜ 
{
ÝÝ 
return
àà 
from
àà 
skills
àà "
in
àà# %
profileData
àà& 1
.
àà1 2 
GetallSkillDetails
àà2 D
(
ààD E
)
ààE F
where
ààG L
skills
ààM S
.
ààS T
IsActive
ààT \
==
àà] _
true
àà` d
select
ààe k
skills
ààl r
;
ààr s
}
ää 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå &
)
åå& '
{
ææ 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
$"
èè! #
$str
èè# I
{
èèI J
	exception
èèJ S
.
èèS T
Message
èèT [
}
èè[ \
$str
èè\ ^
{
èè^ _
	exception
èè_ h
.
èèh i

StackTrace
èèi s
}
èès t
"
èèt u
)
èèu v
;
èèv w
throw
éé 
	exception
éé 
;
éé  
}
êê 
}
ëë 	
public
ìì 
IEnumerable
ìì 
<
ìì 
Object
ìì !
>
ìì! "+
GetAllSkillDetailsByProfileId
ìì# @
(
ìì@ A
int
ììA D
	Profileid
ììE N
)
ììN O
{
íí 	
if
îî 
(
îî 
	Profileid
îî 
<=
îî 
$num
îî 
)
îî 
throw
ïï 
new
ïï #
ArgumentNullException
ïï /
(
ïï/ 0
$"
ïï0 2
$str
ïï2 D
{
ïïD E
	Profileid
ïïE N
}
ïïN O
"
ïïO P
)
ïïP Q
;
ïïQ R
try
ðð 
{
ññ 
var
òò +
getallskilldetailsbyprofileid
òò 1
=
òò2 3
profileData
òò4 ?
.
òò? @ 
GetallSkillDetails
òò@ R
(
òòR S
)
òòS T
.
òòT U
Where
òòU Z
(
òòZ [
item
òò[ _
=>
òò` b
item
òòc g
.
òòg h
	ProfileId
òòh q
==
òòr t
	Profileid
òòu ~
&&òò 
itemòò 
.òò 
IsActiveòò 
==òò 
trueòò 
)òò 
.òò 
Selectòò 
(òò  
itemòò  ¤
=>òò¥ §
new
óó 
{
ôô 
skillid
õõ 
=
õõ 
item
õõ "
.
õõ" #
SkillId
õõ# *
,
õõ* +

domainname
öö 
=
öö  
item
öö! %
.
öö% &
domain
öö& ,
!
öö, -
.
öö- .

DomainName
öö. 8
,
öö8 9
technologyname
÷÷ "
=
÷÷# $
item
÷÷% )
.
÷÷) *

technology
÷÷* 4
!
÷÷4 5
.
÷÷5 6
TechnologyName
÷÷6 D
}
øø 
)
øø 
;
øø 
return
øø +
getallskilldetailsbyprofileid
øø 8
;
øø8 9
}
ùù 
catch
úú 
(
úú 
	Exception
úú 
	exception
úú &
)
úú& '
{
ûû 
_logger
üü 
.
üü 
LogError
üü  
(
üü  !
$"
üü! #
$str
üü# J
{
üüJ K
	exception
üüK T
.
üüT U
Message
üüU \
}
üü\ ]
$str
üü] _
{
üü_ `
	exception
üü` i
.
üüi j

StackTrace
üüj t
}
üüt u
"
üüu v
)
üüv w
;
üüw x
throw
ýý 
	exception
ýý 
;
ýý  
}
þþ 
}
ÿÿ 	
public
 
Skills
 
GetSkillById
 "
(
" #
int
# &
SkillId
' .
)
. /
{
 	
try
 
{
 
if
 
(
 
SkillId
 
<=
 
$num
  
)
  !
throw
 
new
 #
ArgumentNullException
 3
(
3 4
$"
4 6
$str
6 M
{
M N
SkillId
N U
}
U V
"
V W
)
W X
;
X Y
var
 
skills
 
=
 
profileData
 (
.
( )!
GetSkillDetailsById
) <
(
< =
SkillId
= D
)
D E
;
E F
return
 
skills
 
;
 
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# ?
{
? @
	exception
@ I
.
I J
Message
J Q
}
Q R
$str
R T
{
T U
	exception
U ^
.
^ _

StackTrace
_ i
}
i j
"
j k
)
k l
;
l m
throw
 
	exception
 
;
  
}
 
}
 	
public
 
bool
 
UpdateSkills
  
(
  !
Skills
! '
skill
( -
)
- .
{
 	
if
 
(
 
skill
 
==
 
null
 
)
 
throw
 $
new
% (#
ArgumentNullException
) >
(
> ?
$"
? A
$str
A t
{
t u
skill
u z
}
z {
"
{ |
)
| }
;
} ~
try
 
{
 
var
 
skills
 
=
 
GetSkillById
 )
(
) *
skill
* /
.
/ 0
SkillId
0 7
)
7 8
;
8 9
if
 
(
 
skills
 
.
 
DomainId
 #
!=
$ &
skill
' ,
.
, -
DomainId
- 5
)
5 6
skills
 
.
 
DomainId
 #
=
$ %
skill
& +
.
+ ,
DomainId
, 4
;
4 5
if
 
(
 
skills
 
.
 
TechnologyId
 '
!=
( *
skill
+ 0
.
0 1
TechnologyId
1 =
)
= >
skills
 
.
 
TechnologyId
 '
=
( )
skill
* /
.
/ 0
TechnologyId
0 <
;
< =
skills
 
.
 
	UpdatedBy
  
=
! "
skill
# (
.
( )
	CreatedBy
) 2
;
2 3
skills
 
.
 
	UpdatedOn
  
=
! "
DateTime
# +
.
+ ,
Now
, /
;
/ 0
return
 
profileData
 "
.
" #
UpdateSkills
# /
(
/ 0
skills
0 6
)
6 7
;
7 8
}
   
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
	exception
¢¢ &
)
¢¢& '
{
££ 
_logger
¤¤ 
.
¤¤ 
LogInformation
¤¤ &
(
¤¤& '
$"
¤¤' )
$str
¤¤) C
{
¤¤C D
	exception
¤¤D M
.
¤¤M N
Message
¤¤N U
}
¤¤U V
$str
¤¤V X
{
¤¤X Y
	exception
¤¤Y b
.
¤¤b c

StackTrace
¤¤c m
}
¤¤m n
"
¤¤n o
)
¤¤o p
;
¤¤p q
return
¥¥ 
false
¥¥ 
;
¥¥ 
}
§§ 
}
¨¨ 	
public
ªª 
bool
ªª !
DisableSkillDetails
ªª '
(
ªª' (
int
ªª( +
SkillDetailid
ªª, 9
)
ªª9 :
{
«« 	
if
¬¬ 
(
¬¬ 
SkillDetailid
¬¬ 
<=
¬¬  
$num
¬¬! "
)
¬¬" #
throw
­­ 
new
­­ #
ArgumentNullException
­­ /
(
­­/ 0
$"
­­0 2
$str
­­2 D
{
­­D E
SkillDetailid
­­E R
}
­­R S
"
­­S T
)
­­T U
;
­­U V
try
°° 
{
±± 
return
³³ 
profileData
³³ "
.
³³" #!
DisableSkillDetails
³³# 6
(
³³6 7
SkillDetailid
³³7 D
)
³³D E
?
³³F G
true
³³H L
:
³³M N
false
³³O T
;
³³T U
}
µµ 
catch
·· 
(
·· 
	Exception
·· 
	exception
·· &
)
··& '
{
¸¸ 
_logger
¹¹ 
.
¹¹ 
LogInformation
¹¹ &
(
¹¹& '
$"
¹¹' )
$str
¹¹) C
{
¹¹C D
	exception
¹¹D M
.
¹¹M N
Message
¹¹N U
}
¹¹U V
$str
¹¹V X
{
¹¹X Y
	exception
¹¹Y b
.
¹¹b c

StackTrace
¹¹c m
}
¹¹m n
"
¹¹n o
)
¹¹o p
;
¹¹p q
return
ºº 
false
ºº 
;
ºº 
}
»» 
}
¼¼ 	
public
½½ 
bool
½½ 
AddBreakDuration
½½ $
(
½½$ %
BreakDuration
½½% 2
duration
½½3 ;
)
½½; <
{
¾¾ 	
if
¿¿ 
(
¿¿ 
duration
¿¿ 
==
¿¿ 
null
¿¿  
)
¿¿  !
throw
¿¿" '
new
¿¿( +#
ArgumentNullException
¿¿, A
(
¿¿A B
$"
¿¿B D
$str
¿¿D e
{
¿¿e f
duration
¿¿f n
}
¿¿n o
"
¿¿o p
)
¿¿p q
;
¿¿q r
try
ÁÁ 
{
ÂÂ 
duration
ÃÃ 
.
ÃÃ 
	CreatedBy
ÃÃ "
=
ÃÃ# $
duration
ÃÃ% -
.
ÃÃ- .
PersonalDetailsId
ÃÃ. ?
;
ÃÃ? @
duration
ÄÄ 
.
ÄÄ 
	CreatedOn
ÄÄ "
=
ÄÄ# $
DateTime
ÄÄ% -
.
ÄÄ- .
Now
ÄÄ. 1
;
ÄÄ1 2
return
ÅÅ 
profileData
ÅÅ "
.
ÅÅ" #
AddBreakDuration
ÅÅ# 3
(
ÅÅ3 4
duration
ÅÅ4 <
)
ÅÅ< =
?
ÅÅ> ?
true
ÅÅ@ D
:
ÅÅE F
false
ÅÅG L
;
ÅÅL M
}
ÆÆ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
	exception
ÇÇ &
)
ÇÇ& '
{
ÈÈ 
_logger
ÉÉ 
.
ÉÉ 
LogInformation
ÉÉ &
(
ÉÉ& '
$"
ÉÉ' )
$str
ÉÉ) M
{
ÉÉM N
	exception
ÉÉN W
.
ÉÉW X
Message
ÉÉX _
}
ÉÉ_ `
$str
ÉÉ` b
{
ÉÉb c
	exception
ÉÉc l
.
ÉÉl m

StackTrace
ÉÉm w
}
ÉÉw x
"
ÉÉx y
)
ÉÉy z
;
ÉÉz {
return
ÊÊ 
false
ÊÊ 
;
ÊÊ 
}
ËË 
}
ÎÎ 	
public
ÏÏ 
bool
ÏÏ "
DisableBreakDuration
ÏÏ (
(
ÏÏ( )
int
ÏÏ) ,
BreakDurationid
ÏÏ- <
)
ÏÏ< =
{
ÐÐ 	
if
ÑÑ 
(
ÑÑ 
BreakDurationid
ÑÑ 
<=
ÑÑ  "
$num
ÑÑ# $
)
ÑÑ$ %
throw
ÒÒ 
new
ÒÒ #
ArgumentNullException
ÒÒ /
(
ÒÒ/ 0
$"
ÒÒ0 2
$str
ÒÒ2 D
{
ÒÒD E
BreakDurationid
ÒÒE T
}
ÒÒT U
"
ÒÒU V
)
ÒÒV W
;
ÒÒW X
try
ÕÕ 
{
ÖÖ 
return
ØØ 
profileData
ØØ "
.
ØØ" #"
DisableBreakDuration
ØØ# 7
(
ØØ7 8
BreakDurationid
ØØ8 G
)
ØØG H
?
ØØI J
true
ØØK O
:
ØØP Q
false
ØØR W
;
ØØW X
}
ÚÚ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
	exception
ÜÜ &
)
ÜÜ& '
{
ÝÝ 
_logger
ÞÞ 
.
ÞÞ 
LogInformation
ÞÞ &
(
ÞÞ& '
$"
ÞÞ' )
$str
ÞÞ) C
{
ÞÞC D
	exception
ÞÞD M
.
ÞÞM N
Message
ÞÞN U
}
ÞÞU V
$str
ÞÞV X
{
ÞÞX Y
	exception
ÞÞY b
.
ÞÞb c

StackTrace
ÞÞc m
}
ÞÞm n
"
ÞÞn o
)
ÞÞo p
;
ÞÞp q
return
ßß 
false
ßß 
;
ßß 
}
àà 
}
áá 	
public
ââ 
bool
ââ 
AddLanguage
ââ 
(
ââ  
Language
ââ  (
language
ââ) 1
)
ââ1 2
{
ãã 	
if
ää 
(
ää 
language
ää 
==
ää 
null
ää  
)
ää  !
throw
ää" '
new
ää( +#
ArgumentNullException
ää, A
(
ääA B
$"
ääB D
$str
ääD e
{
ääe f
language
ääf n
}
ään o
"
ääo p
)
ääp q
;
ääq r
try
ææ 
{
çç 
language
èè 
.
èè 
	CreatedBy
èè "
=
èè# $
language
èè% -
.
èè- .
PersonalDetailsId
èè. ?
;
èè? @
language
éé 
.
éé 
	CreatedOn
éé "
=
éé# $
DateTime
éé% -
.
éé- .
Now
éé. 1
;
éé1 2
return
êê 
profileData
êê "
.
êê" #
AddLanguage
êê# .
(
êê. /
language
êê/ 7
)
êê7 8
?
êê9 :
true
êê; ?
:
êê@ A
false
êêB G
;
êêG H
}
ëë 
catch
ìì 
(
ìì 
	Exception
ìì 
	exception
ìì &
)
ìì& '
{
íí 
_logger
îî 
.
îî 
LogInformation
îî &
(
îî& '
$"
îî' )
$str
îî) F
{
îîF G
	exception
îîG P
.
îîP Q
Message
îîQ X
}
îîX Y
$str
îîY [
{
îî[ \
	exception
îî\ e
.
îîe f

StackTrace
îîf p
}
îîp q
"
îîq r
)
îîr s
;
îîs t
return
ïï 
false
ïï 
;
ïï 
}
ðð 
}
óó 	
public
öö 
bool
öö 
DisableLanguage
öö #
(
öö# $
int
öö$ '

Languageid
öö( 2
)
öö2 3
{
÷÷ 	
if
øø 
(
øø 

Languageid
øø 
<=
øø 
$num
øø 
)
øø  
throw
ùù 
new
ùù #
ArgumentNullException
ùù /
(
ùù/ 0
$"
ùù0 2
$str
ùù2 D
{
ùùD E

Languageid
ùùE O
}
ùùO P
"
ùùP Q
)
ùùQ R
;
ùùR S
try
üü 
{
ýý 
return
ÿÿ 
profileData
ÿÿ "
.
ÿÿ" #
DisableLanguage
ÿÿ# 2
(
ÿÿ2 3

Languageid
ÿÿ3 =
)
ÿÿ= >
?
ÿÿ? @
true
ÿÿA E
:
ÿÿF G
false
ÿÿH M
;
ÿÿM N
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) K
{
K L
	exception
L U
.
U V
Message
V ]
}
] ^
$str
^ `
{
` a
	exception
a j
.
j k

StackTrace
k u
}
u v
"
v w
)
w x
;
x y
return
 
false
 
;
 
}
 
}
 	
public
 
bool
 
AddSocialMedia
 "
(
" #
SocialMedia
# .
media
/ 4
)
4 5
{
 	
if
 
(
 
media
 
==
 
null
 
)
 
throw
 $
new
% (#
ArgumentNullException
) >
(
> ?
$"
? A
$str
A b
{
b c
media
c h
}
h i
"
i j
)
j k
;
k l
try
 
{
 
media
 
.
 
	CreatedBy
 
=
  !
media
" '
.
' (
PersonalDetailsId
( 9
;
9 :
media
 
.
 
	CreatedOn
 
=
  !
DateTime
" *
.
* +
Now
+ .
;
. /
return
 
profileData
 "
.
" #
AddSocialMedia
# 1
(
1 2
media
2 7
)
7 8
?
9 :
true
; ?
:
@ A
false
B G
;
G H
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) F
{
F G
	exception
G P
.
P Q
Message
Q X
}
X Y
$str
Y [
{
[ \
	exception
\ e
.
e f

StackTrace
f p
}
p q
"
q r
)
r s
;
s t
return
 
false
 
;
 
}
 
}
 	
public
 
bool
  
DisableSocialMedia
 &
(
& '
int
' *
SocialMediaid
+ 8
)
8 9
{
 	
if
 
(
 
SocialMediaid
 
<=
  
$num
! "
)
" #
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$"
0 2
$str
2 D
{
D E
SocialMediaid
E R
}
R S
"
S T
)
T U
;
U V
try
¡¡ 
{
¢¢ 
return
¤¤ 
profileData
¤¤ "
.
¤¤" # 
DisableSocialMedia
¤¤# 5
(
¤¤5 6
SocialMediaid
¤¤6 C
)
¤¤C D
?
¤¤E F
true
¤¤G K
:
¤¤L M
false
¤¤N S
;
¤¤S T
}
¦¦ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
	exception
¨¨ &
)
¨¨& '
{
©© 
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) C
{
ªªC D
	exception
ªªD M
.
ªªM N
Message
ªªN U
}
ªªU V
$str
ªªV X
{
ªªX Y
	exception
ªªY b
.
ªªb c

StackTrace
ªªc m
}
ªªm n
"
ªªn o
)
ªªo p
;
ªªp q
return
«« 
false
«« 
;
«« 
}
¬¬ 
}
­­ 	
public
°° 
object
°° 
GetTechnologyById
°° '
(
°°' (
int
°°( +
Technologyid
°°, 8
)
°°8 9
{
±± 	
if
²² 
(
²² 
Technologyid
²² 
<=
²² 
$num
²²  !
)
²²! "
throw
³³ 
new
³³ #
ArgumentNullException
³³ /
(
³³/ 0
$"
³³0 2
$str
³³2 D
{
³³D E
Technologyid
³³E Q
}
³³Q R
"
³³R S
)
³³S T
;
³³T U
try
´´ 
{
µµ 
var
¶¶ "
gettechnologydetails
¶¶ (
=
¶¶) *
profileData
¶¶+ 6
.
¶¶6 7
GetTechnologyById
¶¶7 H
(
¶¶H I
Technologyid
¶¶I U
)
¶¶U V
;
¶¶V W
return
·· 
new
·· 
{
¸¸ 
technologyname
¹¹ "
=
¹¹# $"
gettechnologydetails
¹¹% 9
.
¹¹9 :
TechnologyName
¹¹: H
}
ºº 
;
ºº 
}
»» 
catch
¼¼ 
(
¼¼ 
	Exception
¼¼ 
	exception
¼¼ &
)
¼¼& '
{
½½ 
_logger
¾¾ 
.
¾¾ 
LogError
¾¾  
(
¾¾  !
$"
¾¾! #
$str
¾¾# G
{
¾¾G H
	exception
¾¾H Q
.
¾¾Q R
Message
¾¾R Y
}
¾¾Y Z
$str
¾¾Z \
{
¾¾\ ]
	exception
¾¾] f
.
¾¾f g

StackTrace
¾¾g q
}
¾¾q r
"
¾¾r s
)
¾¾s t
;
¾¾t u
throw
¿¿ 
	exception
¿¿ 
;
¿¿  
}
ÀÀ 
}
ÁÁ 	
public
ÂÂ 
IEnumerable
ÂÂ 
<
ÂÂ 

Technology
ÂÂ %
>
ÂÂ% & 
GetallTechnologies
ÂÂ' 9
(
ÂÂ9 :
)
ÂÂ: ;
{
ÃÃ 	
try
ÄÄ 
{
ÅÅ 
return
ÈÈ 
from
ÈÈ 
Technologies
ÈÈ (
in
ÈÈ) +
profileData
ÈÈ, 7
.
ÈÈ7 8 
GetallTechnologies
ÈÈ8 J
(
ÈÈJ K
)
ÈÈK L
where
ÈÈM R
Technologies
ÈÈS _
.
ÈÈ_ `
IsActive
ÈÈ` h
==
ÈÈi k
true
ÈÈl p
select
ÈÈq w
TechnologiesÈÈx 
;ÈÈ 
}
ÌÌ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
	exception
ÍÍ &
)
ÍÍ& '
{
ÎÎ 
_logger
ÐÐ 
.
ÐÐ 
LogError
ÐÐ  
(
ÐÐ  !
$"
ÐÐ! #
$str
ÐÐ# L
{
ÐÐL M
	exception
ÐÐM V
.
ÐÐV W
Message
ÐÐW ^
}
ÐÐ^ _
$str
ÐÐ_ a
{
ÐÐa b
	exception
ÐÐb k
.
ÐÐk l

StackTrace
ÐÐl v
}
ÐÐv w
"
ÐÐw x
)
ÐÐx y
;
ÐÐy z
throw
ÑÑ 
	exception
ÑÑ 
;
ÑÑ  
}
ÒÒ 
}
ÓÓ 	
public
ÔÔ 
bool
ÔÔ 
AddAchievements
ÔÔ #
(
ÔÔ# $
Achievements
ÔÔ$ 0
achievement
ÔÔ1 <
)
ÔÔ< =
{
ÕÕ 	
if
ÖÖ 
(
ÖÖ 
achievement
ÖÖ 
==
ÖÖ 
null
ÖÖ #
)
ÖÖ# $
throw
ÖÖ% *
new
ÖÖ+ .#
ArgumentNullException
ÖÖ/ D
(
ÖÖD E
$"
ÖÖE G
$str
ÖÖG h
{
ÖÖh i
achievement
ÖÖi t
}
ÖÖt u
"
ÖÖu v
)
ÖÖv w
;
ÖÖw x
try
ØØ 
{
ÙÙ 
string
ÚÚ 
	Imagedate
ÚÚ  
=
ÚÚ! "
$str
ÚÚ# %
;
ÚÚ% &
	Imagedate
ÛÛ 
=
ÛÛ 
ImageService
ÛÛ (
.
ÛÛ( )
Getbase64String
ÛÛ) 8
(
ÛÛ8 9
achievement
ÛÛ9 D
.
ÛÛD E
base64header
ÛÛE Q
!
ÛÛQ R
)
ÛÛR S
;
ÛÛS T
achievement
ÜÜ 
.
ÜÜ 
base64header
ÜÜ (
=
ÜÜ) *
ImageService
ÜÜ+ 7
.
ÜÜ7 8
Getbase64Header
ÜÜ8 G
(
ÜÜG H
achievement
ÜÜH S
.
ÜÜS T
base64header
ÜÜT `
!
ÜÜ` a
)
ÜÜa b
;
ÜÜb c
achievement
ÝÝ 
.
ÝÝ 
AchievementImage
ÝÝ ,
=
ÝÝ- .
System
ÝÝ/ 5
.
ÝÝ5 6
Convert
ÝÝ6 =
.
ÝÝ= >
FromBase64String
ÝÝ> N
(
ÝÝN O
	Imagedate
ÝÝO X
)
ÝÝX Y
;
ÝÝY Z
achievement
àà 
.
àà 
	CreatedOn
àà %
=
àà& '
DateTime
àà( 0
.
àà0 1
Now
àà1 4
;
àà4 5
return
áá 
profileData
áá "
.
áá" #
AddAchievements
áá# 2
(
áá2 3
achievement
áá3 >
)
áá> ?
?
áá@ A
true
ááB F
:
ááG H
false
ááI N
;
ááN O
}
ââ 
catch
ãã 
(
ãã 
	Exception
ãã 
	exception
ãã &
)
ãã& '
{
ää 
_logger
åå 
.
åå 
LogInformation
åå &
(
åå& '
$"
åå' )
$str
åå) K
{
ååK L
	exception
ååL U
.
ååU V
Message
ååV ]
}
åå] ^
$str
åå^ `
{
åå` a
	exception
ååa j
.
ååj k

StackTrace
ååk u
}
ååu v
"
ååv w
)
ååw x
;
ååx y
return
ææ 
false
ææ 
;
ææ 
}
çç 
}
êê 	
public
ëë 
IEnumerable
ëë 
<
ëë 
Achievements
ëë '
>
ëë' ( 
GetallAchievements
ëë) ;
(
ëë; <
)
ëë< =
{
ìì 	
try
íí 
{
îî 
return
ññ 
from
ññ 
achievements
ññ (
in
ññ) +
profileData
ññ, 7
.
ññ7 8 
GetallAchievements
ññ8 J
(
ññJ K
)
ññK L
where
ññM R
achievements
ññS _
.
ññ_ `
IsActive
ññ` h
==
ññi k
true
ññl p
select
ññq w
achievementsññx 
;ññ 
}
õõ 
catch
öö 
(
öö 
	Exception
öö 
	exception
öö &
)
öö& '
{
÷÷ 
_logger
ùù 
.
ùù 
LogError
ùù  
(
ùù  !
$"
ùù! #
$str
ùù# I
{
ùùI J
	exception
ùùJ S
.
ùùS T
Message
ùùT [
}
ùù[ \
$str
ùù\ ^
{
ùù^ _
	exception
ùù_ h
.
ùùh i

StackTrace
ùùi s
}
ùùs t
"
ùùt u
)
ùùu v
;
ùùv w
throw
úú 
	exception
úú 
;
úú  
}
ûû 
}
üü 	
public
ýý 
IEnumerable
ýý 
<
ýý 
Object
ýý !
>
ýý! "1
#GetAllAchievementDetailsByProfileId
ýý# F
(
ýýF G
int
ýýG J
	Profileid
ýýK T
)
ýýT U
{
þþ 	
if
ÿÿ 
(
ÿÿ 
	Profileid
ÿÿ 
<=
ÿÿ 
$num
ÿÿ 
)
ÿÿ 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$"
0 2
$str
2 D
{
D E
	Profileid
E N
}
N O
"
O P
)
P Q
;
Q R
try
 
{
 
var
 )
getachievementsbypersonalid
 /
=
0 1
profileData
2 =
.
= > 
GetallAchievements
> P
(
P Q
)
Q R
.
R S
Where
S X
(
X Y
item
Y ]
=>
^ `
item
a e
.
e f
	ProfileId
f o
==
p r
	Profileid
s |
&&
} 
item 
. 
IsActive 
== 
true 
) 
. 
Select 
( 
item ¢
=>£ ¥
new
 
{
 
achievementid
 "
=
# $
item
% )
.
) *
AchievementId
* 7
,
7 8
achievementtype
 $
=
% &
item
' +
.
+ ,
achievementtype
, ;
!
; <
.
< =!
AchievementTypeName
= P
,
P Q
achievementimage
 %
=
& '
item
( ,
.
, -
AchievementImage
- =
}
 
)
 
;
 
return
 )
getachievementsbypersonalid
 7
;
7 8
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# J
{
J K
	exception
K T
.
T U
Message
U \
}
\ ]
$str
] _
{
_ `
	exception
` i
.
i j

StackTrace
j t
}
t u
"
u v
)
v w
;
w x
throw
 
	exception
 
;
  
}
 
}
 	
public
 
bool
  
DisableAchievement
 &
(
& '
int
' *
achievementId
+ 8
)
8 9
{
 	
if
 
(
 
achievementId
 
<=
  
$num
! "
)
" #
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$"
0 2
$str
2 P
{
P Q
achievementId
Q ^
}
^ _
"
_ `
)
` a
;
a b
try
 
{
 
return
 
profileData
 "
.
" # 
DisableAchievement
# 5
(
5 6
achievementId
6 C
)
C D
?
E F
true
G K
:
L M
false
N S
;
S T
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
   
_logger
¡¡ 
.
¡¡ 
LogInformation
¡¡ &
(
¡¡& '
$"
¡¡' )
$str
¡¡) M
{
¡¡M N
	exception
¡¡N W
.
¡¡W X
Message
¡¡X _
}
¡¡_ `
$str
¡¡` b
{
¡¡b c
	exception
¡¡c l
.
¡¡l m

StackTrace
¡¡m w
}
¡¡w x
"
¡¡x y
)
¡¡y z
;
¡¡z {
return
¢¢ 
false
¢¢ 
;
¢¢ 
}
££ 
}
¤¤ 	
public
¥¥ 
IEnumerable
¥¥ 
<
¥¥ 
Profile
¥¥ "
>
¥¥" #
GetallProfiles
¥¥$ 2
(
¥¥2 3
)
¥¥3 4
{
¦¦ 	
try
§§ 
{
¨¨ 
var
©© 
result
©© 
=
©© 
from
©© !
profile
©©" )
in
©©* ,
profileData
©©- 8
.
©©8 9
GetallProfiles
©©9 G
(
©©G H
)
©©H I
where
©©J O
profile
©©P W
.
©©W X
IsActive
©©X `
==
©©a c
true
©©d h
select
©©i o
profile
©©p w
;
©©w x
return
ªª 
result
ªª 
;
ªª 
}
­­ 
catch
®® 
(
®® 
	Exception
®® 
	exception
®® &
)
®®& '
{
¯¯ 
_logger
±± 
.
±± 
LogError
±±  
(
±±  !
$"
±±! #
$str
±±# C
{
±±C D
	exception
±±D M
.
±±M N
Message
±±N U
}
±±U V
$str
±±V X
{
±±X Y
	exception
±±Y b
.
±±b c

StackTrace
±±c m
}
±±m n
"
±±n o
)
±±o p
;
±±p q
throw
²² 
	exception
²² 
;
²²  
}
³³ 
}
´´ 	
public
µµ 
object
µµ )
GetProfileStatusByProfileId
µµ 1
(
µµ1 2
int
µµ2 5
	Profileid
µµ6 ?
)
µµ? @
{
¶¶ 	
if
·· 
(
·· 
	Profileid
·· 
<=
·· 
$num
·· 
)
·· 
throw
¸¸ 
new
¸¸ #
ArgumentNullException
¸¸ /
(
¸¸/ 0
$"
¸¸0 2
$str
¸¸2 D
{
¸¸D E
	Profileid
¸¸E N
}
¸¸N O
"
¸¸O P
)
¸¸P Q
;
¸¸Q R
try
¹¹ 
{
ºº 
return
»» 
profileData
»» "
.
»»" #)
GetProfileStatusByProfileId
»»# >
(
»»> ?
	Profileid
»»? H
)
»»H I
;
»»I J
}
¼¼ 
catch
½½ 
(
½½ 
	Exception
½½ 
	exception
½½ &
)
½½& '
{
¾¾ 
_logger
ÀÀ 
.
ÀÀ 
LogError
ÀÀ  
(
ÀÀ  !
$"
ÀÀ! #
$str
ÀÀ# P
{
ÀÀP Q
	exception
ÀÀQ Z
.
ÀÀZ [
Message
ÀÀ[ b
}
ÀÀb c
$str
ÀÀc e
{
ÀÀe f
	exception
ÀÀf o
.
ÀÀo p

StackTrace
ÀÀp z
}
ÀÀz {
"
ÀÀ{ |
)
ÀÀ| }
;
ÀÀ} ~
throw
ÁÁ 
	exception
ÁÁ 
;
ÁÁ  
}
ÂÂ 
}
ÃÃ 	
public
ÄÄ 
object
ÄÄ 
GetProfileById
ÄÄ $
(
ÄÄ$ %
int
ÄÄ% (
	Profileid
ÄÄ) 2
)
ÄÄ2 3
{
ÅÅ 	
if
ÆÆ 
(
ÆÆ 
	Profileid
ÆÆ 
<=
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
throw
ÇÇ 
new
ÇÇ #
ArgumentNullException
ÇÇ /
(
ÇÇ/ 0
$"
ÇÇ0 2
$str
ÇÇ2 D
{
ÇÇD E
	Profileid
ÇÇE N
}
ÇÇN O
"
ÇÇO P
)
ÇÇP Q
;
ÇÇQ R
try
ÈÈ 
{
ÉÉ 
var
ËË 
getviewdetails
ËË "
=
ËË# $
new
ÌÌ 
{
ÍÍ 
personaldetails
ÎÎ #
=
ÎÎ$ %+
GetPersonalDetailsByProfileId
ÎÎ& C
(
ÎÎC D
	Profileid
ÎÎD M
)
ÎÎM N
,
ÎÎN O
educationdetails
ÏÏ $
=
ÏÏ% &/
!GetAllEducationDetailsByProfileId
ÏÏ' H
(
ÏÏH I
	Profileid
ÏÏI R
)
ÏÏR S
,
ÏÏS T
projectdetails
ÐÐ "
=
ÐÐ# $-
GetAllProjectDetailsByProfileId
ÐÐ% D
(
ÐÐD E
	Profileid
ÐÐE N
)
ÐÐN O
,
ÐÐO P
skilldetails
ÑÑ  
=
ÑÑ! "+
GetAllSkillDetailsByProfileId
ÑÑ# @
(
ÑÑ@ A
	Profileid
ÑÑA J
)
ÑÑJ K
,
ÑÑK L 
achievementdetails
ÒÒ &
=
ÒÒ' (1
#GetAllAchievementDetailsByProfileId
ÒÒ) L
(
ÒÒL M
	Profileid
ÒÒM V
)
ÒÒV W
,
ÒÒW X
profilestatus
ÓÓ !
=
ÓÓ" #)
GetProfileStatusByProfileId
ÓÓ$ ?
(
ÓÓ? @
	Profileid
ÓÓ@ I
)
ÓÓI J
,
ÓÓJ K
}
ÖÖ 
;
ÖÖ 
return
ØØ 
getviewdetails
ØØ %
;
ØØ% &
}
ÙÙ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
	exception
ÚÚ &
)
ÚÚ& '
{
ÛÛ 
_logger
ÜÜ 
.
ÜÜ 
LogError
ÜÜ  
(
ÜÜ  !
$"
ÜÜ! #
$str
ÜÜ# C
{
ÜÜC D
	exception
ÜÜD M
.
ÜÜM N
Message
ÜÜN U
}
ÜÜU V
$str
ÜÜV X
{
ÜÜX Y
	exception
ÜÜY b
.
ÜÜb c

StackTrace
ÜÜc m
}
ÜÜm n
"
ÜÜn o
)
ÜÜo p
;
ÜÜp q
throw
ÝÝ 
	exception
ÝÝ 
;
ÝÝ  
}
ÞÞ 
}
ßß 	
public
àà 
object
àà  
GetSpecificProfile
àà (
(
àà( )
)
àà) *
{
áá 	
try
ãã 
{
ää 
var
åå 

getprofile
åå 
=
åå  
profileData
åå! ,
.
åå, -
GetallProfiles
åå- ;
(
åå; <
)
åå< =
.
åå= >
Select
åå> D
(
ååD E
item
ååE I
=>
ååJ L
new
ææ 
{
çç 
Status
èè 
=
èè 
item
èè !
.
èè! "
profilestatus
èè" /
!
èè/ 0
.
èè0 1
ProfileStatusName
èè1 B
,
èèB C
Name
éé 
=
éé 
item
éé 
.
éé  
personalDetails
éé  /
!
éé/ 0
.
éé0 1
users
éé1 6
!
éé6 7
.
éé7 8
Name
éé8 <
,
éé< =
Designation
êê 
=
êê  !
item
êê" &
.
êê& '
personalDetails
êê' 6
.
êê6 7
users
êê7 <
.
êê< =
designation
êê= H
!
êêH I
.
êêI J
DesignationName
êêJ Y
,
êêY Z
ReportingPerson
ëë #
=
ëë$ %
item
ëë& *
.
ëë* +
personalDetails
ëë+ :
.
ëë: ;
users
ëë; @
.
ëë@ A%
ReportingPersonUsername
ëëA X
,
ëëX Y
}
ïï 
)
ïï 
;
ïï 
return
ïï 

getprofile
ïï %
;
ïï% &
}
ññ 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
óó 
_logger
ôô 
.
ôô 
LogError
ôô  
(
ôô  !
$"
ôô! #
$str
ôô# H
{
ôôH I
	exception
ôôI R
.
ôôR S
Message
ôôS Z
}
ôôZ [
$str
ôô[ ]
{
ôô] ^
	exception
ôô^ g
.
ôôg h

StackTrace
ôôh r
}
ôôr s
"
ôôs t
)
ôôt u
;
ôôu v
throw
õõ 
	exception
õõ 
;
õõ  
}
öö 
}
÷÷ 	
public
øø 
object
øø "
GetProfileIdByUserId
øø *
(
øø* +
int
øø+ .
Userid
øø/ 5
)
øø5 6
{
ùù 	
if
úú 
(
úú 
Userid
úú 
<=
úú 
$num
úú 
)
úú 
throw
ûû 
new
ûû #
ArgumentNullException
ûû /
(
ûû/ 0
$"
ûû0 2
$str
ûû2 D
{
ûûD E
Userid
ûûE K
}
ûûK L
"
ûûL M
)
ûûM N
;
ûûN O
try
üü 
{
ýý 
var
þþ 

getprofile
þþ 
=
þþ  
profileData
þþ! ,
.
þþ, -"
GetProfileIdByUserId
þþ- A
(
þþA B
Userid
þþB H
)
þþH I
;
þþI J
if
 
(
 

getprofile
 
.
 
IsActive
 '
)
' (
{
 
return
 
new
 
{
 
profilestatus
 %
=
& '

getprofile
( 2
.
2 3
profilestatus
3 @
!
@ A
.
A B
ProfileStatusName
B S
,
S T
	profileId
 !
=
" #

getprofile
$ .
.
. /
	ProfileId
/ 8
}
 
;
 
}
 
return
 

getprofile
 !
;
! "
}
 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# J
{
J K
	exception
K T
.
T U
Message
U \
}
\ ]
$str
] _
{
_ `
	exception
` i
.
i j

StackTrace
j t
}
t u
"
u v
)
v w
;
w x
throw
 
	exception
 
;
  
}
 
}
 	
public
 
object
 
GetProfileCount
 %
(
% &
)
& '
{
 	
try
 
{
 
var
 
profile
 
=
 
GetallProfiles
 ,
(
, -
)
- .
;
. /
var
 
Approved
 
=
 
profile
 &
.
& '
Where
' ,
(
, -
p
- .
=>
/ 1
p
2 3
.
3 4
ProfileStatusId
4 C
==
D F
$num
G H
)
H I
.
I J
Count
J O
(
O P
)
P Q
;
Q R
var
 
Rejected
 
=
 
profile
 &
.
& '
Where
' ,
(
, -
p
- .
=>
/ 1
p
2 3
.
3 4
ProfileStatusId
4 C
==
D F
$num
G H
)
H I
.
I J
Count
J O
(
O P
)
P Q
;
Q R
var
 
Waiting
 
=
 
profile
 %
.
% &
Where
& +
(
+ ,
p
, -
=>
. 0
p
1 2
.
2 3
ProfileStatusId
3 B
==
C E
$num
F G
)
G H
.
H I
Count
I N
(
N O
)
O P
;
P Q
var
 
total
 
=
 
profile
 #
.
# $
Count
$ )
(
) *
)
* +
;
+ ,
var
 
result
 
=
 
new
  

Dictionary
! +
<
+ ,
string
, 2
,
2 3
int
4 7
>
7 8
(
8 9
)
9 :
;
: ;
result
 
.
 
Add
 
(
 
$str
 .
,
. /
Approved
0 8
)
8 9
;
9 :
result
 
.
 
Add
 
(
 
$str
 .
,
. /
Rejected
0 8
)
8 9
;
9 :
result
   
.
   
Add
   
(
   
$str
   -
,
  - .
Waiting
  / 6
)
  6 7
;
  7 8
result
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
$str
¡¡ +
,
¡¡+ ,
total
¡¡- 2
)
¡¡2 3
;
¡¡3 4
return
¢¢ 
result
¢¢ 
;
¢¢ 
}
££ 
catch
¤¤ 
(
¤¤ 
	Exception
¤¤ 
	exception
¤¤ &
)
¤¤& '
{
¥¥ 
_logger
¦¦ 
.
¦¦ 
LogError
¦¦  
(
¦¦  !
$"
¦¦! #
$str
¦¦# D
{
¦¦D E
	exception
¦¦E N
.
¦¦N O
Message
¦¦O V
}
¦¦V W
$str
¦¦W Y
{
¦¦Y Z
	exception
¦¦Z c
.
¦¦c d

StackTrace
¦¦d n
}
¦¦n o
"
¦¦o p
)
¦¦p q
;
¦¦q r
throw
¨¨ 
	exception
¨¨ 
;
¨¨  
}
©© 
}
«« 	
public
­­ 
object
­­ 
GetFilterdProfile
­­ '
(
­­' (
string
­­( .
userName
­­/ 7
,
­­7 8
int
­­9 <
designationId
­­= J
,
­­J K
int
­­L O
domainID
­­P X
,
­­X Y
int
­­Z ]
technologyId
­­^ j
,
­­j k
int
­­l o
	collegeId
­­p y
,
­­y z
int
­­{ ~
profileStatusId­­ 
,­­ 
int­­ 
maxExperience­­ ¡
,­­¡ ¢
int­­£ ¦
minExperience­­§ ´
,­­´ µ
int­­µ ¸"
currentdesignation­­¹ Ë
)­­Ë Ì
{
®® 	
try
°° 
{
±± 
return
³³ 
profileData
³³ "
.
³³" #
GetFilterdProfile
³³# 4
(
³³4 5
userName
³³5 =
,
³³= >
designationId
³³> K
,
³³K L
domainID
³³M U
,
³³U V
technologyId
³³W c
,
³³c d
	collegeId
³³e n
,
³³n o
profileStatusId
³³p 
,³³ 
maxExperience³³ 
,³³ 
minExperience³³ 
,³³ "
currentdesignation³³ ¯
)³³¯ °
.
µµ 
Select
µµ 
(
µµ 
user
µµ 
=>
µµ 
new
µµ  #
{
¶¶ 
	profileId
·· 
=
·· 
user
··  $
.
··$ %
profile
··% ,
!
··, -
.
··- .
	ProfileId
··. 7
,
··7 8
profileStatus
¸¸ !
=
¸¸" #
user
¸¸$ (
.
¸¸( )
profile
¸¸) 0
.
¸¸0 1
profilestatus
¸¸1 >
!
¸¸> ?
.
¸¸? @
ProfileStatusName
¸¸@ Q
,
¸¸Q R
name
¹¹ 
=
¹¹ 
user
¹¹ 
.
¹¹  
Name
¹¹  $
,
¹¹$ %
designation
ºº 
=
ºº  !
user
ºº" &
.
ºº& '
designation
ºº' 2
!
ºº2 3
.
ºº3 4
DesignationName
ºº4 C
,
ººC D
repotingPerson
»» "
=
»»# $
user
»»% )
.
»») *%
ReportingPersonUsername
»»* A
,
»»A B
image
¼¼ 
=
¼¼ 
user
¼¼  
.
¼¼  !
personalDetails
¼¼! 0
!=
¼¼1 3
null
¼¼4 8
?
¼¼9 :
user
¼¼; ?
.
¼¼? @
personalDetails
¼¼@ O
.
¼¼O P
Image
¼¼P U
:
¼¼V W
null
¼¼X \
}
½½ 
)
½½ 
;
½½ 
}
¾¾ 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
	exception
¿¿ &
)
¿¿& '
{
ÀÀ 
_logger
ÁÁ 
.
ÁÁ 
LogError
ÁÁ  
(
ÁÁ  !
$"
ÁÁ! #
$str
ÁÁ# H
{
ÁÁH I
	exception
ÁÁI R
.
ÁÁR S
Message
ÁÁS Z
}
ÁÁZ [
$str
ÁÁ[ ]
{
ÁÁ] ^
	exception
ÁÁ^ g
.
ÁÁg h

StackTrace
ÁÁh r
}
ÁÁr s
"
ÁÁs t
)
ÁÁt u
;
ÁÁu v
throw
ÂÂ 
;
ÂÂ 
}
ÃÃ 
}
ÄÄ 	
public
ÅÅ 
bool
ÅÅ #
AcceptOrRejectProfile
ÅÅ )
(
ÅÅ) *
int
ÅÅ* -
	profileId
ÅÅ. 7
,
ÅÅ7 8
int
ÅÅ9 <
response
ÅÅ= E
)
ÅÅE F
{
ÆÆ 	
if
ÇÇ 
(
ÇÇ 
	profileId
ÇÇ 
<=
ÇÇ 
$num
ÇÇ 
)
ÇÇ 
throw
ÈÈ 
new
ÈÈ !
ValidationException
ÈÈ -
(
ÈÈ- .
$"
ÈÈ. 0
$str
ÈÈ0 M
"
ÈÈM N
)
ÈÈN O
;
ÈÈO P
try
ÊÊ 
{
ËË 
return
ÌÌ 
profileData
ÌÌ "
.
ÌÌ" ##
AcceptOrRejectProfile
ÌÌ# 8
(
ÌÌ8 9
	profileId
ÌÌ9 B
,
ÌÌB C
response
ÌÌD L
)
ÌÌL M
?
ÌÌN O
true
ÌÌP T
:
ÌÌU V
false
ÌÌW \
;
ÌÌ\ ]
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ !
ValidationException
ÎÎ &
	exception
ÎÎ' 0
)
ÎÎ0 1
{
ÏÏ 
_logger
ÐÐ 
.
ÐÐ 
LogError
ÐÐ  
(
ÐÐ  !
$"
ÐÐ! #
$str
ÐÐ# J
{
ÐÐJ K
	exception
ÐÐK T
.
ÐÐT U
Message
ÐÐU \
}
ÐÐ\ ]
$str
ÐÐ] _
{
ÐÐ_ `
	exception
ÐÐ` i
.
ÐÐi j

StackTrace
ÐÐj t
}
ÐÐt u
"
ÐÐu v
)
ÐÐv w
;
ÐÐw x
throw
ÑÑ 
;
ÑÑ 
}
ÒÒ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
	exception
ÓÓ &
)
ÓÓ& '
{
ÔÔ 
_logger
ÕÕ 
.
ÕÕ 
LogError
ÕÕ  
(
ÕÕ  !
$"
ÕÕ! #
$str
ÕÕ# J
{
ÕÕJ K
	exception
ÕÕK T
.
ÕÕT U
Message
ÕÕU \
}
ÕÕ\ ]
$str
ÕÕ] _
{
ÕÕ_ `
	exception
ÕÕ` i
.
ÕÕi j

StackTrace
ÕÕj t
}
ÕÕt u
"
ÕÕu v
)
ÕÕv w
;
ÕÕw x
throw
ÖÖ 
;
ÖÖ 
}
×× 
}
ØØ 	
public
ÛÛ 
bool
ÛÛ !
updateProfileStatus
ÛÛ '
(
ÛÛ' (
Profile
ÛÛ( /
profile
ÛÛ0 7
)
ÛÛ7 8
{
ÜÜ 	
if
ÝÝ 
(
ÝÝ 
profile
ÝÝ 
==
ÝÝ 
null
ÝÝ 
)
ÝÝ  
throw
ÞÞ 
new
ÞÞ !
ValidationException
ÞÞ -
(
ÞÞ- .
$str
ÞÞ. D
)
ÞÞD E
;
ÞÞE F
try
ßß 
{
àà 
Profile
áá 
result
áá 
=
áá  
profileData
áá! ,
.
áá, -

GetProfile
áá- 7
(
áá7 8
profile
áá8 ?
.
áá? @
	ProfileId
áá@ I
)
ááI J
;
ááJ K
if
ââ 
(
ââ 
profile
ââ 
.
ââ 
UserId
ââ "
!=
ââ# %
result
ââ& ,
.
ââ, -
UserId
ââ- 3
)
ââ3 4
throw
ãã 
new
ãã !
ValidationException
ãã 1
(
ãã1 2
$str
ãã2 F
)
ããF G
;
ããG H
result
åå 
.
åå 
ProfileStatusId
åå &
=
åå' (
$num
åå) *
;
åå* +
result
ææ 
.
ææ 
	UpdatedOn
ææ  
=
ææ! "
DateTime
ææ" *
.
ææ* +
Now
ææ+ .
;
ææ. /
return
èè 
profileData
èè "
.
èè" #!
updateProfileStatus
èè# 6
(
èè6 7
result
èè7 =
)
èè= >
;
èè? @
}
éé 
catch
êê 
(
êê 
	Exception
êê 
	exception
êê &
)
êê& '
{
ëë 
_logger
ìì 
.
ìì 
LogError
ìì  
(
ìì  !
$"
ìì! #
$str
ìì# H
{
ììH I
	exception
ììI R
.
ììR S
Message
ììS Z
}
ììZ [
$str
ìì[ ]
{
ìì] ^
	exception
ìì^ g
.
ììg h

StackTrace
ììh r
}
ììr s
"
ììs t
)
ììt u
;
ììu v
throw
íí 
;
íí 
}
îî 
}
ïï 	
}
ðð 
}ññ ù
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\ProfileStatusService.cs
	namespace 	
PMS_API
 
{ 
public 

class !
ProfileStatusServices &
:' ("
IProfileStatusServices) ?
{ 
private 
readonly )
IProfileStatusDataAccessLayer 6)
_ProfileStatusDataAccessLayer7 T
=U V$
ProfileStatusDataFactoryW o
.o p2
%GetProfileStatusDataAccessLayerObject	p 
(
 
)
 
;
 
private 
readonly 
ILogger  
<  !!
ProfileStatusServices! 6
>6 7
_logger7 >
=> ?
default? F
!F G
;G H
public 
IEnumerable 
< 
ProfileStatus (
>( )
ViewProfileStatuss* <
(< =
)= >
{ 	
try 
{ 
return 
from 
profileStatus )
in* ,)
_ProfileStatusDataAccessLayer- J
.J K
GetProfileStatussK \
(\ ]
)] ^
where_ d
profileStatuse r
.r s
IsActives {
select	| 
profileStatus
 
;
 
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} Í
fC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\TechnologyServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
TechnologyServices #
:$ %
ITechnologyServices& 9
{ 
private 
readonly &
ITechnologyDataAccessLayer 4&
_TechnologyDataAccessLayer5 O
=P Q!
TechnologyDataFactoryR g
.g h/
"GetTechnologyDataAccessLayerObject	h 
(
 
)
 
;
 
private 
readonly 
ILogger  
<  !
TechnologyServices! 3
>3 4
_logger4 ;
=; <
default< C
!C D
;D E
public 
IEnumerable 
< 

Technology %
>% &
ViewTechnologies' 7
(7 8
)8 9
{ 	
try 
{ 
return 
from 

technology &
in' )&
_TechnologyDataAccessLayer* D
.D E
GetTechnologiesE T
(T U
)U V
whereW \

technology] g
.g h
IsActiveh p
selectq w

technology	x 
;
 
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} ô 
`C:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Services\UserServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
UserServices 
: 
IUserServices  -
{		 
private

 
readonly

 
UserData

 !
userData

" *
;

* +
private 
readonly 
ILogger  
<  !
UserServices! -
>- .
_logger/ 6
;6 7
public 
UserServices 
( 
ILogger #
<# $
UserServices$ 0
>0 1
logger2 8
)8 9
{9 :
_logger 
= 
logger 
; 
userData 
= 
UserDataFactory $
.$ %
GetUserObject% 2
(2 3
logger3 9
)9 :
;: ;
} 	
private 
readonly 
UserValidation '
_validation( 3
=3 4
UserDataFactory4 C
.C D
GetValidationObjectD W
(W X
)X Y
;Y Z
public 
object 
GetallUsers !
(! "
int" %
profilestatusId& 5
,5 6
int6 9
designationId: G
)G H
{ 	
try 
{ 
return 
( 
from 
user "
in# %
userData& .
.. /
GetallForCard/ <
(< =
profilestatusId= L
,L M
designationIdM Z
)Z [
where\ a
userb f
.f g
IsActiveg o
selectp v
userw {
){ |
.| }
Select	} 
(
 
user 
=> 
new 
{  
UserId 
= 
user #
.# $
UserId$ *
,* +
Name 
= 
user !
.! "
Name" &
,& '
UserDesignation '
=' (
user( ,
., -
designation- 8
!8 9
.9 :
DesignationName: I
,I J
ReportingPerson '
=' (
user( ,
., -#
ReportingPersonUsername- D
,D E
UserProfileStatus )
=) *
user* .
.. /
profile/ 6
!6 7
.7 8
profilestatus8 E
!E F
.F G
ProfileStatusNameG X
,X Y
UserProfileImage (
=( )
user) -
.- .
personalDetails. =
!== ?
null? C
?C D
userD H
.H I
personalDetailsI X
!X Y
.Y Z
ImageZ _
:_ `
null` d
,d e
UserProfileId %
=% &
user& *
.* +
profile+ 2
.2 3
	ProfileId3 <
} 
)   
;   
}!! 
catch"" 
("" 
	Exception"" 
	exception"" %
)""% &
{""& '
_logger## 
.## 
LogError##  
(##  !
$"##! #
$str### 9
{##9 :
	exception##: C
.##C D
Message##D K
}##K L
$str##L N
{##N O
	exception##O X
.##X Y

StackTrace##Y c
}##c d
"##d e
)##e f
;##f g
throw$$ 
;$$ 
}%% 
}&& 	
public'' 
Object'' "
GetSpecificUserDetails'' ,
('', -
)''- .
{(( 	
try)) 
{** 
return++ 
(++ 
from++ 
user++ !
in++" $
userData++% -
.++- .
GetallUsers++. 9
(++9 :
)++: ;
select++< B
user++C G
)++G H
.++H I
AsEnumerable++I U
(++U V
)++V W
.,, 
Select,, 
(,, 
var,, 
=>,, 
new,, "
{-- 
Name.. 
=.. 
var.. 
... 
Name.. #
,..# $
UserId// 
=// 
var// 
.// 
UserId// %
,//% &
Designation00 
=00  !
var00" %
.00% &
designation00& 1
!001 2
.002 3
DesignationName003 B
,00B C
ReportingPerson11 #
=11$ %
var11& )
.11) *#
ReportingPersonUsername11* A
}22 
)33 
;33 
}44 
catch55 
(55 
	Exception55 
	exception55 &
)55& '
{66 
_logger77 
.77 
LogInformation77 &
(77& '
$"77' )
$str77) S
{77S T
	exception77T ]
.77] ^
Message77^ e
}77e f
$str77f i
{77i j
	exception77j s
.77s t

StackTrace77t ~
}77~ 
"	77 
)
77 
;
77 
throw88 
;88 
}99 
}:: 	
public;; 
object;; 
GetUser;; 
(;; 
int;; !
id;;" $
);;$ %
{<< 	
if== 
(== 
id== 
<=== 
$num== 
)== 
throw>> 
new>> !
ArgumentNullException>> /
(>>/ 0
$">>0 2
$str>>2 D
{>>D E
id>>E G
}>>G H
">>H I
)>>I J
;>>J K
try?? 
{@@ 
varAA 
getuserAA 
=AA 
userDataAA %
.AA% &
GetUserAA& -
(AA- .
idAA. 0
)AA0 1
;AA1 2
ifBB 
(BB 
getuserBB 
.BB 
IsActiveBB #
)BB# $
{BB$ %
returnCC 
newCC 
{CC 
useridDD 
=DD 
getuserDD "
.DD" #
UserIdDD# )
,DD) *
nameEE 
=EE 
getuserEE !
.EE! "
NameEE" &
,EE& '
emailFF 
=FF 
getuserFF !
.FF! "
EmailFF" '
,FF' (
usernameGG 
=GG 
getuserGG $
.GG$ %
UserNameGG% -
,GG- .
passwordHH 
=HH 
getuserHH $
.HH$ %
PasswordHH% -
,HH- .
genderIdII 
=II 
getuserII $
.II$ %
GenderIdII% -
,II- .
genderJJ 
=JJ 
getuserJJ "
.JJ" #
genderJJ# )
!JJ) *
.JJ* +

GenderNameJJ+ 5
,JJ5 6
CountryCodeIdKK !
=KK! "
getuserKK" )
.KK) *
CountryCodeIdKK* 7
,KK7 8
countryCodeLL 
=LL  
getuserLL  '
.LL' (
countrycodeLL( 3
!LL3 4
.LL4 5
CountryCodeNameLL5 D
,LLD E
mobilenumberMM  
=MM  !
getuserMM! (
.MM( )
MobileNumberMM) 5
,MM5 6
designationIdNN !
=NN! "
getuserNN" )
.NN) *
DesignationIdNN* 7
,NN7 8
designationOO 
=OO  
getuserOO  '
.OO' (
designationOO( 3
!OO3 4
.OO4 5
DesignationNameOO5 D
,OOD E#
reportingpersonUsernamePP +
=PP+ ,
getuserPP, 3
.PP3 4#
ReportingPersonUsernamePP4 K
,PPK L
organisationIdQQ "
=QQ" #
getuserQQ# *
.QQ* +
OrganisationIdQQ+ 9
,QQ9 :
organisationRR  
=RR  !
getuserRR! (
.RR( )
organisationRR) 5
!RR5 6
.RR6 7
OrganisationNameRR7 G
}TT 
;TT 
}TT 
elseUU 
{UU 
throwVV 
newVV 
ValidationExceptionVV 1
(VV1 2
$strVV2 B
)VVB C
;VVC D
}WW 
}XX 
catchYY 
(YY 
	ExceptionYY 
	exceptionYY %
)YY% &
{YY& '
_loggerZZ 
.ZZ 
LogErrorZZ  
(ZZ  !
$"ZZ! #
$strZZ# :
{ZZ: ;
	exceptionZZ; D
.ZZD E
MessageZZE L
}ZZL M
$strZZM O
{ZZO P
	exceptionZZP Y
.ZZY Z

StackTraceZZZ d
}ZZd e
"ZZe f
)ZZf g
;ZZg h
throw[[ 
;[[ 
}\\ 
}]] 	
public^^ 
bool^^ 
AddUser^^ 
(^^ 
User^^  
item^^! %
,^^% &
int^^& )
userId^^* 0
)^^0 1
{`` 	
ifaa 
(aa 
itemaa 
==aa 
nullaa 
)aa 
throwbb 
newbb !
ArgumentNullExceptionbb /
(bb/ 0
$"bb0 2
$strbb2 c
{bbc d
itembbd h
}bbh i
"bbi j
)bbj k
;bbk l
_validationcc 
.cc 
userValidatecc %
(cc% &
itemcc& *
)cc* +
;cc+ ,
trydd 
{ee 
itemff 
.ff 
	CreatedByff 
=ff 
userIdff %
;ff% &
itemgg 
.gg 
	CreatedOngg 
=gg 
DateTimegg '
.gg' (
Nowgg( +
;gg+ ,
itemhh 
.hh 
IsActivehh 
=hh 
truehh #
;hh# $
returnii 
userDataii 
.ii  
AddUserii  '
(ii' (
itemii( ,
)ii, -
;ii- .
}kk 
catchll 
(ll 
ValidationExceptionll %
	exceptionll& /
)ll/ 0
{ll0 1
_loggermm 
.mm 
LogInformationmm &
(mm& '
$"mm' )
$strmm) <
{mm< =
	exceptionmm= F
.mmF G
MessagemmG N
}mmN O
$strmmO Q
{mmQ R
	exceptionmmR [
.mm[ \

StackTracemm\ f
}mmf g
"mmg h
)mmh i
;mmi j
thrownn 
;nn 
}oo 
catchpp 
(pp !
ArgumentNullExceptionpp '
	exceptionpp( 1
)pp1 2
{pp2 3
_loggerqq 
.qq 
LogInformationqq &
(qq& '
$"qq' )
$strqq) <
{qq< =
	exceptionqq= F
.qqF G
MessageqqG N
}qqN O
$strqqO Q
{qqQ R
	exceptionqqR [
.qq[ \

StackTraceqq\ f
}qqf g
"qqg h
)qqh i
;qqi j
throwrr 
;rr 
}ss 
catchtt 
(tt 
	Exceptiontt 
	exceptiontt %
)tt% &
{tt& '
_loggeruu 
.uu 
LogInformationuu &
(uu& '
$"uu' )
$struu) <
{uu< =
	exceptionuu= F
.uuF G
MessageuuG N
}uuN O
$struuO Q
{uuQ R
	exceptionuuR [
.uu[ \

StackTraceuu\ f
}uuf g
"uug h
)uuh i
;uui j
returnvv 
falsevv 
;vv 
}xx 
}yy 	
publiczz 
boolzz 
Disablezz 
(zz 
intzz 
idzz  "
)zz" #
{{{ 	
if|| 
(|| 
id|| 
<=|| 
$num|| 
)|| 
throw}} 
new}} !
ArgumentNullException}} /
(}}/ 0
$"}}0 2
$str}}2 D
{}}D E
id}}E G
}}}G H
"}}H I
)}}I J
;}}J K
try
 
{
 
return
 
userData
 
.
  
Disable
  '
(
' (
id
( *
)
* +
;
+ ,
}
 
catch
 
(
 
	Exception
 
	exception
 %
)
% &
{
& '
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) ?
{
? @
	exception
@ I
.
I J
Message
J Q
}
Q R
$str
R T
{
T U
	exception
U ^
.
^ _

StackTrace
_ i
}
i j
"
j k
)
k l
;
l m
return
 
false
 
;
 
}
 
}
 	
public
 
bool
 

UpdateUser
 
(
 
User
 #
item
$ (
)
( )
{
 	
if
 
(
 
item
 
==
 
null
 
)
 
throw
 
new
  ##
ArgumentNullException
$ 9
(
9 :
$"
: <
$str
< j
{
j k
item
k o
}
o p
"
p q
)
q r
;
r s
_validation
 
.
 
userValidate
 $
(
$ %
item
% )
)
) *
;
* +
try
 
{
 
item
 
.
 
	UpdatedBy
 
=
 
item
 "
.
" #
UserId
# )
;
) *
item
 
.
 
	UpdatedOn
 
=
 
DateTime
 '
.
' (
Now
( +
;
+ ,
return
 
userData
 
.
  

UpdateUser
  *
(
* +
item
+ /
)
/ 0
;
0 1
}
 
catch
 
(
 
	Exception
 
	exception
 %
)
% &
{
& '
_logger
 
.
 
LogInformation
 '
(
' (
$"
( *
$str
* @
{
@ A
	exception
A J
.
J K
Message
K R
}
R S
$str
S U
{
U V
	exception
V _
.
_ `

StackTrace
` j
}
j k
"
k l
)
l m
;
m n
return
 
false
 
;
 
}
 
}
 	
public
 
bool
 
ChangePassword
 "
(
" #
string
# )
OldPassword
* 5
,
5 6
string
6 <
NewPassword
= H
,
H I
string
I O
ConfirmPassword
P _
,
_ `
int
` c
currentUser
d o
)
o p
{
¡¡ 	 
PasswordValidation
££ 
.
££ 
IsValidPassword
££ .
(
££. /
NewPassword
££/ :
,
££: ;
ConfirmPassword
££; J
)
££J K
;
££K L
try
¨¨ 
{
©© 
if
ªª 
(
ªª 
NewPassword
ªª 
!=
ªª !
ConfirmPassword
ªª" 1
)
ªª1 2
throw
«« 
new
«« !
ValidationException
«« 1
(
««1 2
$"
««2 4
$str
««4 n
{
««n o
ConfirmPassword
««o ~
}
««~ 
"«« 
)«« 
;«« 
else
¬¬ 
{
¬¬ 
return
­­ 
userData
­­ #
.
­­# $
EditPassword
­­$ 0
(
­­0 1
OldPassword
­­1 <
,
­­< =
NewPassword
­­= H
,
­­H I
ConfirmPassword
­­I X
,
­­X Y
currentUser
­­Y d
)
­­d e
;
­­e f
}
®® 
}
°° 
catch
²² 
(
²² 
ArgumentException
²² $
	exception
²²% .
)
²². /
{
´´ 
_logger
¶¶ 
.
¶¶ 
LogInformation
¶¶ &
(
¶¶& '
$"
¶¶' )
$str¶¶) 
{¶¶ 
	exception¶¶ 
.¶¶ 
Message¶¶ 
}¶¶ 
"¶¶ 
)¶¶ 
;¶¶ 
return
¸¸ 
false
¸¸ 
;
¸¸ 
}
ºº 
catch
¼¼ 
(
¼¼ !
ValidationException
¼¼ &
passwordNotValid
¼¼' 7
)
¼¼7 8
{
¾¾ 
_logger
ÀÀ 
.
ÀÀ 
LogInformation
ÀÀ &
(
ÀÀ& '
$"
ÀÀ' )
$strÀÀ) 
{ÀÀ  
passwordNotValidÀÀ 
.ÀÀ 
MessageÀÀ 
}ÀÀ 
"ÀÀ 
)ÀÀ 
;ÀÀ  
throw
ÂÂ 
;
ÂÂ 
}
ÄÄ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
	exception
ÆÆ &
)
ÆÆ& '
{
ÈÈ 
_logger
ÊÊ 
.
ÊÊ 
LogInformation
ÊÊ &
(
ÊÊ& '
$"
ÊÊ' )
$strÊÊ) 
{ÊÊ 
	exceptionÊÊ 
.ÊÊ 
MessageÊÊ 
}ÊÊ 
"ÊÊ 
)ÊÊ 
;ÊÊ 
return
ÌÌ 
false
ÌÌ 
;
ÌÌ 
}
ÎÎ 
}
ÐÐ 	
public
ÑÑ 
bool
ÑÑ 
Save
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÒÒ 	
return
ÓÓ 
userData
ÓÓ 
.
ÓÓ 
save
ÓÓ  
(
ÓÓ  !
)
ÓÓ! "
;
ÓÓ" #
}
ÔÔ 	
public
ÖÖ 

object
ÖÖ &
GetAllUsersByDesignation
ÖÖ *
(
ÖÖ* +
int
ÖÖ+ .
designationId
ÖÖ/ <
)
ÖÖ< =
{
×× 	
try
ØØ 
{
ØØ 
return
ÙÙ 
(
ÙÙ 
from
ÙÙ 
user
ÙÙ "
in
ÙÙ# %
userData
ÙÙ& .
.
ÙÙ. /&
GetAllUsersByDesignation
ÙÙ/ G
(
ÙÙG H
designationId
ÙÙH U
)
ÙÙU V
where
ÙÙW \
user
ÙÙ] a
.
ÙÙa b
IsActive
ÙÙb j
select
ÙÙk q
user
ÙÙr v
)
ÙÙv w
.
ÙÙw x
Select
ÙÙx ~
(
ÙÙ~ 
user
ÚÚ 
=>
ÚÚ 
new
ÚÚ 
{
ÚÚ  
UserId
ÛÛ 
=
ÛÛ 
user
ÛÛ #
.
ÛÛ# $
UserId
ÛÛ$ *
,
ÛÛ* +
Name
ÜÜ 
=
ÜÜ 
user
ÜÜ !
.
ÜÜ! "
Name
ÜÜ" &
,
ÜÜ& '
UserDesignation
ÝÝ '
=
ÝÝ' (
user
ÝÝ( ,
.
ÝÝ, -
designation
ÝÝ- 8
!
ÝÝ8 9
.
ÝÝ9 :
DesignationName
ÝÝ: I
,
ÝÝI J
ReportingPerson
ÞÞ '
=
ÞÞ' (
user
ÞÞ( ,
.
ÞÞ, -%
ReportingPersonUsername
ÞÞ- D
,
ÞÞD E
UserProfileStatus
ßß )
=
ßß) *
user
ßß* .
.
ßß. /
profile
ßß/ 6
!
ßß6 7
.
ßß7 8
profilestatus
ßß8 E
!
ßßE F
.
ßßF G
ProfileStatusName
ßßG X
,
ßßX Y
UserProfileImage
àà (
=
àà( )
user
àà) -
.
àà- .
personalDetails
àà. =
!=
àà= ?
null
àà? C
?
ààC D
user
ààD H
.
ààH I
personalDetails
ààI X
!
ààX Y
.
ààY Z
Image
ààZ _
:
àà_ `
null
àà` d
,
ààd e
UserProfileId
áá %
=
áá% &
user
áá& *
.
áá* +
profile
áá+ 2
.
áá2 3
	ProfileId
áá3 <
}
ââ 
)
ãã 
;
ãã 
}
ää 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå %
)
åå% &
{
åå& '
_logger
ææ 
.
ææ 
LogError
ææ  
(
ææ  !
$"
ææ! #
$str
ææ# 9
{
ææ9 :
	exception
ææ: C
.
ææC D
Message
ææD K
}
ææK L
$str
ææL N
{
ææN O
	exception
ææO X
.
ææX Y

StackTrace
ææY c
}
ææc d
"
ææd e
)
ææe f
;
ææf g
throw
çç 
;
çç 
}
èè 
}
éé 	
}
êê 
}ëë 	
pC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Utilityfunctions\CollectionExtensions.cs
	namespace 	
PMS_API
 
; 
public 
static 
class  
CollectionExtensions (
{ 
public 

static 

IQueryable 
< 
TSource $
>$ %
WhereIf& -
<- .
TSource. 5
>5 6
(6 7
this 

IQueryable 
< 
TSource 
>  
source! '
,' (
bool 
	condition 
, 

Expression 
< 
Func 
< 
TSource 
,  
bool! %
>% &
>& '
	predicate( 1
)1 2
{		 	
if

 

(

 
	condition

 
)

 
return 
source 
. 
Where 
(  
	predicate  )
)) *
;* +
else 
return 
source 
; 
} 	
} è	
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Utilityfunctions\HashPassword.cs
	namespace 	
PMS_API
 
. 
API 
. 
UtilityFunctions &
{ 
public 

static 
class 
HashPassword $
{ 
public 
static 
string 
Sha256 #
(# $
this$ (
string) /
input0 5
)5 6
{ 	
using 
var 
sha 
= 
SHA256 "
." #
Create# )
() *
)* +
;+ ,
var 
bytes 
= 
Encoding  
.  !
UTF8! %
.% &
GetBytes& .
(. /
input/ 4
)4 5
;5 6
var 
hash 
= 
sha 
. 
ComputeHash &
(& '
bytes' ,
), -
;- .
return 
Convert 
. 
ToBase64String )
() *
hash* .
). /
;/ 0
} 	
} 
} 
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Utilityfunctions\ImageService.cs
	namespace 	
PMS_API
 
{ 
public 
static 
class 
ImageService %
{ 
public 
static 
string 
Getbase64String ,
(, -
string- 3
value4 9
)9 :
{ 	
if 
( 
value 
. 
Contains 
( 
$str %
)% &
)& '
{ 
return		 
value		 
.		 
Replace		 $
(		$ %
$str		% >
,		> ?
$str		@ B
)		B C
;		C D
}

 
else 
if 
( 
value 
. 
Contains #
(# $
$str$ )
)) *
)* +
{ 
return 
value 
. 
Replace $
($ %
$str% =
,= >
$str? A
)A B
;B C
} 
else 
{ 
return 
value 
. 
Replace $
($ %
$str% =
,= >
$str? A
)A B
;B C
} 
} 	
public 
static 
string 
Getbase64Header ,
(, -
string- 3
value4 9
)9 :
{ 	
if 
( 
value 
. 
Contains 
( 
$str %
)% &
)& '
{ 
return 
$str 0
;0 1
} 
else 
if 
( 
value 
. 
Contains #
(# $
$str$ )
)) *
)* +
{ 
return 
$str /
;/ 0
} 
else 
{ 
return   
$str   /
;  / 0
}!! 
}"" 	
}## 
}$$ Ë
iC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Validations\PasswordValidation.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
PasswordValidation *
{ 
public 
static 
bool 
IsValidPassword *
(* +
string+ 1
NewPassword2 =
,= >
string> D
ConfirmPasswordE T
)T U
{		 	
if 
( 
! 
Regex 
. 
IsMatch 
( 
NewPassword )
,) *
$str+ l
)l m
)m n
throw 
new 
ValidationException -
(- .
$". 0
$str	0 Ð
{
Ð Ñ
NewPassword
Ñ Ü
}
Ü Ý
"
Ý Þ
)
Þ ß
;
ß à
if 
( 
! 
Regex 
. 
IsMatch 
( 
ConfirmPassword -
,- .
$str/ p
)p q
)q r
throw 
new 
ValidationException -
(- .
$". 0
$str	0 Ð
{
Ð Ñ
ConfirmPassword
Ñ à
}
à á
"
á â
)
â ã
;
ã ä
return 
true 
; 
} 	
} 
} Ý
hC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Validations\ProfileValidation.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ProfileValidation "
{ 
public		 
bool		 #
PersonalDetailsvalidate		 +
(		+ ,
PersonalDetails		, ;
personalDetails		< K
)		K L
{

 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
personalDetails% 4
.4 5
	Objective5 >
)> ?
)? @
throw 
new 
ValidationException -
(- .
$". 0
$str0 e
{e f
personalDetailsf u
.u v
	Objectivev 
}	 
$str
 
"
 
)
 
;
 
if 
( 
string 
. 
IsNullOrEmpty $
($ %
personalDetails% 4
.4 5
Nationality5 @
)@ A
)A B
throw 
new 
ValidationException -
(- .
$". 0
$str0 k
{k l
personalDetailsl {
.{ |
Nationality	| 
}
 
$str
 
"
 
)
 
;
 
else 
if 
( 
! 
Regex 
. 
IsMatch #
(# $
personalDetails$ 3
.3 4
Nationality4 ?
,? @
$strA S
)S T
)T U
throw 
new 
ValidationException -
(- .
$". 0
$str0 j
{j k
personalDetailsk z
.z {
Nationality	{ 
}
 
$str
 
"
 
)
 
;
 
if 
( 
string 
. 
IsNullOrEmpty $
($ %
(% &
personalDetails& 5
.5 6
DateOfBirth6 A
)A B
.B C
ToStringC K
(K L
)L M
)M N
)N O
throw 
new 
ValidationException -
(- .
$". 0
$str0 k
{k l
personalDetailsl {
.{ |
DateOfBirth	| 
}
 
$str
 
"
 
)
 
;
 
else 
if 
( 
personalDetails $
.$ %
DateOfBirth% 0
.0 1
Equals1 7
(7 8
$str8 :
): ;
); <
throw 
new 
ValidationException -
(- .
$". 0
$str0 k
{k l
personalDetailsl {
.{ |
DateOfBirth	| 
}
 
$str
 
"
 
)
 
;
 
else 
if 
( 
personalDetails $
.$ %
DateOfBirth% 0
.0 1
Equals1 7
(7 8
DateTime8 @
.@ A
TodayA F
)F G
||H J
(K L
personalDetailsL [
.[ \
DateOfBirth\ g
>h i
DateTimej r
.r s
Todays x
)x y
)y z
throw 
new 
ValidationException -
(- .
$". 0
$str0 j
{j k
personalDetailsk z
.z {
DateOfBirth	{ 
}
 
$str
 
"
 
)
 
;
 
else 
if 
( 
! "
DateOfBirthAgeValidate ,
(, -
personalDetails- <
.< =
DateOfBirth= H
)H I
)I J
throw 
new 
ValidationException -
(- .
$". 0
$str0 g
{g h
personalDetailsh w
.w x
DateOfBirth	x 
}
 
$str
 
"
 
)
 
;
 
if   
(   
string   
.   
IsNullOrEmpty   $
(  $ %
(  % &
personalDetails  & 5
.  5 6
DateOfJoining  6 C
)  C D
.  D E
ToString  E M
(  M N
)  N O
)  O P
)  P Q
throw!! 
new!! 
ValidationException!! -
(!!- .
$"!!. 0
$str!!0 i
{!!i j
personalDetails!!j y
.!!y z
DateOfJoining	!!z 
}
!! 
$str
!! 
"
!! 
)
!! 
;
!! 
if"" 
("" 
personalDetails"" 
.""  
DateOfJoining""  -
>"". /
DateTime""0 8
.""8 9
Today""9 >
)""? @
throw## 
new## 
ValidationException## -
(##- .
$"##. 0
$str##0 o
{##o p
personalDetails##p 
.	## 
DateOfJoining
## 
}
## 
$str
## 
"
## 
)
## 
;
## 
if$$ 
($$ 
personalDetails$$ 
.$$  
DateOfJoining$$  -
<=$$. 0
personalDetails$$1 @
.$$@ A
DateOfBirth$$A L
)$$M N
throw%% 
new%% 
ValidationException%% -
(%%- .
$"%%. 0
$str%%0 h
{%%h i
personalDetails%%i x
.%%x y
DateOfJoining	%%y 
}
%% 
$str
%% 
"
%% 
)
%% 
;
%% 
if(( 
((( 
String(( 
.(( 
IsNullOrEmpty(( $
((($ %
personalDetails((% 4
.((4 5
base64header((5 A
)((A B
)((B C
throw)) 
new)) 
ValidationException)) -
())- .
$")). 0
$str))0 n
{))n o
personalDetails))o ~
.))~ 
base64header	)) 
}
)) 
$str
)) 
"
)) 
)
)) 
;
)) 
return** 
true** 
;** 
}++ 	
public,, 
bool,, %
Educationdetailvalidation,, -
(,,- .
	Education,,. 7
	education,,8 A
),,A B
{-- 	
if// 
(// 
string// 
.// 
IsNullOrEmpty// $
(//$ %
	education//% .
.//. /
Degree/// 5
)//5 6
)//6 7
throw00 
new00 
ValidationException00 -
(00- .
$"00. 0
$str000 a
{00a b
	education00b k
.00k l
Degree00l r
}00r s
$str00s u
"00u v
)00v w
;00w x
else22 
if22 
(22 
(22 
!22 
Regex22 
.22 
IsMatch22 $
(22$ %
	education22% .
.22. /
Degree22/ 5
,225 6
$str227 J
)22J K
)22K L
)22L M
throw33 
new33 
ValidationException33 -
(33- .
$"33. 0
$str330 `
{33` a
	education33a j
.33j k
Degree33k q
}33q r
$str33r t
"33t u
)33u v
;33v w
if66 
(66 
string66 
.66 
IsNullOrEmpty66 $
(66$ %
	education66% .
.66. /
Course66/ 5
)665 6
)666 7
throw77 
new77 
ValidationException77 -
(77- .
$"77. 0
$str770 a
{77a b
	education77b k
.77k l
Course77l r
}77r s
$str77s u
"77u v
)77v w
;77w x
else88 
if88 
(88 
!88 
Regex88 
.88 
IsMatch88 #
(88# $
	education88$ -
.88- .
Course88. 4
,884 5
$str886 I
)88I J
)88J K
throw99 
new99 
ValidationException99 -
(99- .
$"99. 0
$str	990 
{
99 
	education
99 
.
99 
Course
99 
}
99 
$str
99 
"
99 
)
99 
;
99 
if;; 
(;; 
(;; 
	education;; 
.;; 
	CollegeId;; $
.;;$ %
Equals;;% +
(;;+ ,
$num;;, -
);;- .
);;. /
);;/ 0
throw<< 
new<< 
ValidationException<< -
(<<- .
$"<<. 0
$str<<0 g
{<<g h
	education<<h q
.<<q r
	CollegeId<<r {
}<<{ |
$str<<| ~
"<<~ 
)	<< 
;
<< 
if?? 
(?? 
string?? 
.?? 
IsNullOrEmpty?? $
(??$ %
(??% &
	education??& /
.??/ 0
Starting??0 8
)??8 9
.??9 :
ToString??: B
(??B C
)??C D
)??D E
||??F H
(??I J
	education??J S
.??S T
Starting??T \
)??\ ]
.??] ^
Equals??^ d
(??d e
$num??e f
)??f g
)??g h
throw@@ 
new@@ 
ValidationException@@ -
(@@- .
$"@@. 0
$str@@0 n
{@@n o
	education@@o x
.@@x y
Starting	@@y 
}
@@ 
$str
@@ 
"
@@ 
)
@@ 
;
@@ 
ifAA 
(AA 
!AA 
RegexAA 
.AA 
IsMatchAA 
(AA 
	educationAA (
.AA( )
StartingAA) 1
.AA1 2
ToStringAA2 :
(AA: ;
)AA; <
!AA< =
,AA= >
$strAA? K
)AAK L
)AAL M
throwBB 
newBB 
ValidationExceptionBB -
(BB- .
$"BB. 0
$strBB0 J
{BBJ K
	educationBBK T
.BBT U
StartingBBU ]
}BB] ^
$strBB^ `
"BB` a
)BBa b
;BBb c
ifCC 
(CC 
	educationCC 
.CC 
StartingCC "
.CC" #
EqualsCC# )
(CC) *
DateTimeCC* 2
.CC2 3
TodayCC3 8
.CC8 9
YearCC9 =
)CC= >
||CC? A
(CCB C
	educationCCC L
.CCL M
StartingCCM U
>CCV W
(CCX Y
DateTimeCCY a
.CCa b
TodayCCb g
.CCg h
YearCCh l
)CCl m
)CCm n
)CCn o
throwDD 
newDD 
ValidationExceptionDD -
(DD- .
$"DD. 0
$str	DD0 
{
DD 
	education
DD 
.
DD 
Starting
DD 
}
DD 
$str
DD 
"
DD 
)
DD 
;
DD 
ifGG 
(GG 
stringGG 
.GG 
IsNullOrEmptyGG $
(GG$ %
(GG% &
	educationGG& /
.GG/ 0
EndingGG0 6
)GG6 7
.GG7 8
ToStringGG8 @
(GG@ A
)GGA B
)GGB C
||GGD F
(GGG H
	educationGGH Q
.GGQ R
EndingGGR X
)GGX Y
.GGY Z
EqualsGGZ `
(GG` a
$numGGa b
)GGb c
)GGc d
throwHH 
newHH 
ValidationExceptionHH -
(HH- .
$"HH. 0
$strHH0 j
{HHj k
	educationHHk t
.HHt u
EndingHHu {
}HH{ |
$strHH| ~
"HH~ 
)	HH 
;
HH 
elseII 
ifII 
(II 
	educationII 
.II 
EndingII %
>II& '
(II( )
DateTimeII) 1
.II1 2
TodayII2 7
.II7 8
YearII8 <
)II< =
)II= >
throwJJ 
newJJ 
ValidationExceptionJJ -
(JJ- .
$"JJ. 0
$strJJ0 w
{JJw x
	education	JJx 
.
JJ 
Starting
JJ 
}
JJ 
$str
JJ 
"
JJ 
)
JJ 
;
JJ 
elseKK 
ifKK 
(KK 
	educationKK 
.KK 
EndingKK %
<=KK& (
	educationKK) 2
.KK2 3
StartingKK3 ;
)KK; <
throwLL 
newLL 
ValidationExceptionLL -
(LL- .
$"LL. 0
$str	LL0 
{
LL 
	education
LL 
.
LL 
Starting
LL 
}
LL 
$str
LL 
"
LL 
)
LL 
;
LL 
ifOO 
(OO 
	educationOO 
.OO 

PercentageOO $
.OO$ %
EqualsOO% +
(OO+ ,
$strOO, .
)OO. /
||OO0 2
	educationOO3 <
.OO< =

PercentageOO= G
.OOG H
EqualsOOH N
(OON O
$numOOO P
)OOP Q
)OOQ R
throwPP 
newPP 
ValidationExceptionPP -
(PP- .
$"PP. 0
$strPP0 k
{PPk l
	educationPPl u
.PPu v

Percentage	PPv 
}
PP 
$str
PP 
"
PP 
)
PP 
;
PP 
elseQQ 
ifQQ 
(QQ 
$numQQ 
>=QQ 
	educationQQ #
.QQ# $

PercentageQQ$ .
||QQ/ 1
	educationQQ2 ;
.QQ; <

PercentageQQ< F
>QQG H
$numQQI L
)QQL M
throwRR 
newRR 
ValidationExceptionRR -
(RR- .
$"RR. 0
$strRR0 y
{RRy z
	education	RRz 
.
RR 

Percentage
RR 
}
RR 
$str
RR 
"
RR 
)
RR 
;
RR 
elseSS 
ifSS 
(SS 
RegexSS 
.SS 
IsMatchSS "
(SS" #
	educationSS# ,
.SS, -

PercentageSS- 7
.SS7 8
ToStringSS8 @
(SS@ A
)SSA B
,SSB C
$strSSD T
)SST U
)SSU V
throwTT 
newTT 
ValidationExceptionTT -
(TT- .
$strTT. P
)TTP Q
;TTQ R
returnUU 
trueUU 
;UU 
}WW 	
publicXX 
boolXX !
SkillDetailValidationXX )
(XX) *
SkillsXX* 0
skillXX1 6
)XX6 7
{YY 	
ifZZ 
(ZZ 
skillZZ 
.ZZ 
DomainIdZZ 
.ZZ 
EqualsZZ %
(ZZ% &
$numZZ& '
)ZZ' (
||ZZ) +
stringZZ, 2
.ZZ2 3
IsNullOrEmptyZZ3 @
(ZZ@ A
(ZZA B
skillZZB G
.ZZG H
DomainIdZZH P
)ZZP Q
.ZZQ R
ToStringZZR Z
(ZZZ [
)ZZ[ \
)ZZ\ ]
)ZZ] ^
throw[[ 
new[[ 
ValidationException[[ -
([[- .
$"[[. 0
$str[[0 a
{[[a b
skill[[b g
.[[g h
DomainId[[h p
}[[p q
$str[[q s
"[[s t
)[[t u
;[[u v
if\\ 
(\\ 
skill\\ 
.\\ 
TechnologyId\\ "
.\\" #
Equals\\# )
(\\) *
$num\\* +
)\\+ ,
||\\- /
string\\0 6
.\\6 7
IsNullOrEmpty\\7 D
(\\D E
(\\E F
skill\\F K
.\\K L
TechnologyId\\L X
)\\X Y
.\\Y Z
ToString\\Z b
(\\b c
)\\c d
)\\d e
)\\e f
throw]] 
new]] 
ValidationException]] -
(]]- .
$"]]. 0
$str]]0 i
{]]i j
skill]]j o
.]]o p
TechnologyId]]p |
}]]| }
$str]]} 
"	]] 
)
]] 
;
]] 
return^^ 
true^^ 
;^^ 
}__ 	
public`` 
bool`` #
ProjectDetailvalidation`` +
(``+ ,
Projects``, 4
project``5 <
)``< =
{aa 	
ifcc 
(cc 
stringcc 
.cc 
IsNullOrEmptycc $
(cc$ %
projectcc% ,
.cc, -
ProjectNamecc- 8
)cc8 9
)cc9 :
throwdd 
newdd 
ValidationExceptiondd -
(dd- .
$"dd. 0
$strdd0 k
{ddk l
projectddl s
.dds t
ProjectNameddt 
}	dd 
$str
dd 
"
dd 
)
dd 
;
dd 
elseee 
ifee 
(ee 
!ee 
Regexee 
.ee 
IsMatchee #
(ee# $
projectee$ +
.ee+ ,
ProjectNameee, 7
,ee7 8
$stree9 J
)eeJ K
)eeK L
throwff 
newff 
ValidationExceptionff -
(ff- .
$"ff. 0
$str	ff0 
{
ff 
project
ff 
.
ff 
ProjectName
ff 
}
ff 
$str
ff 
"
ff 
)
ff 
;
ff  
ifii 
(ii 
stringii 
.ii 
IsNullOrEmptyii $
(ii$ %
projectii% ,
.ii, -
ProjectDescriptionii- ?
)ii? @
)ii@ A
throwjj 
newjj 
ValidationExceptionjj -
(jj- .
$"jj. 0
$strjj0 {
{jj{ |
project	jj| 
.
jj  
ProjectDescription
jj 
}
jj 
$str
jj 
"
jj 
)
jj 
;
jj 
ifmm 
(mm 
!mm 
Regexmm 
.mm 
IsMatchmm 
(mm 
projectmm &
.mm& '
Designationmm' 2
!mm2 3
,mm3 4
$strmm5 C
)mmC D
)mmD E
thrownn 
newnn 
ValidationExceptionnn -
(nn- .
$"nn. 0
$str	nn0 
{
nn 
project
nn 
.
nn 
Designation
nn ¡
}
nn¡ ¢
$str
nn¢ ¤
"
nn¤ ¥
)
nn¥ ¦
;
nn¦ §
ifrr 
(rr 
stringrr 
.rr 
IsNullOrEmptyrr $
(rr$ %
projectrr% ,
.rr, -
	ToolsUsedrr- 6
)rr6 7
)rr7 8
throwss 
newss 
ValidationExceptionss -
(ss- .
$"ss. 0
$strss0 g
{ssg h
projectssh o
.sso p
	ToolsUsedssp y
}ssy z
$strssz |
"ss| }
)ss} ~
;ss~ 
iftt 
(tt 
!tt 
Regextt 
.tt 
IsMatchtt 
(tt 
projecttt &
.tt& '
	ToolsUsedtt' 0
,tt0 1
$strtt2 ?
)tt? @
)tt@ A
throwuu 
newuu 
ValidationExceptionuu -
(uu- .
$"uu. 0
$struu0 
{	uu 
project
uu 
.
uu 
Designation
uu 
}
uu 
$str
uu 
"
uu 
)
uu 
;
uu 
ifxx 
(xx 
stringxx 
.xx 
IsNullOrEmptyxx $
(xx$ %
(xx% &
projectxx& -
.xx- .
StartingMonthxx. ;
!xx; <
)xx< =
.xx= >
ToStringxx> F
(xxF G
)xxG H
)xxH I
)xxI J
throwyy 
newyy 
ValidationExceptionyy -
(yy- .
$"yy. 0
$stryy0 p
{yyp q
projectyyq x
.yyx y
StartingMonth	yyy 
}
yy 
$str
yy 
"
yy 
)
yy 
;
yy 
if}} 
(}} 
string}} 
.}} 
IsNullOrEmpty}} $
(}}$ %
(}}% &
project}}& -
.}}- .
EndingMonth}}. 9
!}}9 :
)}}: ;
.}}; <
ToString}}< D
(}}D E
)}}E F
)}}F G
)}}G H
throw~~ 
new~~ 
ValidationException~~ -
(~~- .
$"~~. 0
$str~~0 l
{~~l m
project~~m t
.~~t u
EndingMonth	~~u 
}
~~ 
$str
~~ 
"
~~ 
)
~~ 
;
~~ 
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
(
% &
project
& -
.
- .
StartingYear
. :
)
: ;
.
; <
ToString
< D
(
D E
)
E F
)
F G
||
G I
(
I J
project
J Q
.
Q R
StartingYear
R ^
.
^ _
Equals
_ e
(
e f
$num
f g
)
g h
)
h i
)
i j
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 n
{
n o
project
o v
.
v w
StartingYearw 
} 
$str 
" 
) 
; 
if
 
(
 
project
 
.
 
StartingYear
 $
.
$ %
Equals
% +
(
+ ,
DateTime
, 4
.
4 5
Today
5 :
.
: ;
Year
; ?
)
? @
||
A C
project
D K
.
K L
StartingYear
L X
>
Y Z
DateTime
[ c
.
c d
Today
d i
.
i j
Year
j n
)
n o
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str0 
{ 
project 
. 
StartingYear 
} 
$str 
" 
) 
;  
if
 
(
 
(
 
project
 
.
 

EndingYear
 #
>
$ %
DateTime
& .
.
. /
Today
/ 4
.
4 5
Year
5 9
)
9 :
||
; =
(
> ?
project
? F
.
F G

EndingYear
G Q
<
R S
project
T [
.
[ \
StartingYear
\ h
)
h i
)
i j
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 j
{
j k
project
k r
.
r s

EndingYear
s }
}
} ~
$str~ 
" 
) 
; 
return
 
true
 
;
 
}
 	
public
 
bool
 )
SocialMediaDetailValidation
 /
(
/ 0
SocialMedia
0 ;
socialmedia
< G
)
G H
{
 	
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
socialmedia
% 0
.
0 1
SocialMedia_Name
1 A
)
A B
)
B C
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 u
{
u v
socialmediav 
.  
SocialMedia_Name 
} 
$str 
" 
) 
; 
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
socialmedia
% 0
.
0 1
SocialMedia_Link
1 A
)
A B
)
B C
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 u
{
u v
socialmediav 
.  
SocialMedia_Link 
} 
$str 
" 
) 
; 
else
 
if
 
(
 
Regex
 
.
 
IsMatch
 "
(
" #
socialmedia
# .
.
. /
SocialMedia_Link
/ ?
,
? @
$str
A L
)
L M
||
N P
Regex
Q V
.
V W
IsMatch
W ^
(
^ _
socialmedia
_ j
.
j k
SocialMedia_Link
k {
,
{ |
$str} 
) 
) 
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 t
{
t u
socialmediau 
.  
SocialMedia_Link 
} 
$str 
" 
) 
; 
return
 
true
 
;
 
}
 	
public
 
bool
 %
BreakDurationValidation
 +
(
+ ,
BreakDuration
, 9
breakDuration
: G
)
G H
{
 	
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
breakDuration
% 2
.
2 3
StartingDuration
3 C
.
C D
ToString
D L
(
L M
)
M N
)
N O
)
O P
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 q
{
q r
breakDuration
r 
.  
StartingDuration 
} 
$str 
" 
) 
; 
else
 
if
 
(
 
breakDuration
 "
.
" #
StartingDuration
# 3
.
3 4
Equals
4 :
(
: ;
DateTime
; C
.
C D
Today
D I
)
I J
&&
K M
breakDuration
N [
.
[ \
StartingDuration
\ l
>
m n
DateTime
o w
.
w x
Today
x }
)
} ~
throw
 
new
 !
ValidationException
 -
(
- .
$"
. 0
$str
0 
{ 
breakDuration 
.  
StartingDuration 
} 
$str ¡
"¡ ¢
)¢ £
;£ ¤
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
breakDuration
% 2
.
2 3
EndingDuration
3 A
.
A B
ToString
B J
(
J K
)
K L
)
L M
)
M N
throw
   
new
   !
ValidationException
   -
(
  - .
$"
  . 0
$str
  0 n
{
  n o
breakDuration
  o |
.
  | }
EndingDuration  } 
}   
$str   
"   
)   
;   
else
¢¢ 
if
¢¢ 
(
¢¢ 
breakDuration
¢¢ "
.
¢¢" #
StartingDuration
¢¢# 3
>
¢¢4 5
DateTime
¢¢6 >
.
¢¢> ?
Today
¢¢? D
||
¢¢E G
breakDuration
¢¢H U
.
¢¢U V
StartingDuration
¢¢V f
.
¢¢f g
Equals
¢¢g m
(
¢¢m n
DateTime
¢¢n v
.
¢¢v w
Today
¢¢w |
)
¢¢| }
)
¢¢} ~
throw
££ 
new
££ !
ValidationException
££ -
(
££- .
$"
££. 0
$str
££0 u
{
££u v
breakDuration££v 
.££ 
EndingDuration££ 
}££ 
$str££ 
"££ 
)££ 
;££ 
return
¤¤ 
true
¤¤ 
;
¤¤ 
}
¥¥ 	
public
¦¦ 
bool
¦¦  
languageValidation
¦¦ &
(
¦¦& '
Language
¦¦' /
language
¦¦0 8
)
¦¦8 9
{
§§ 	
if
¨¨ 
(
¨¨ 
string
¨¨ 
.
¨¨ 
IsNullOrEmpty
¨¨ $
(
¨¨$ %
language
¨¨% -
.
¨¨- .
LanguageName
¨¨. :
)
¨¨: ;
)
¨¨; <
throw
©© 
new
©© !
ValidationException
©© -
(
©©- .
$"
©©. 0
$str
©©0 p
{
©©p q
language
©©q y
.
©©y z
LanguageName©©z 
}©© 
$str©© 
"©© 
)©© 
;©© 
else
ªª 
if
ªª 
(
ªª 
!
ªª 
Regex
ªª 
.
ªª 
IsMatch
ªª #
(
ªª# $
language
ªª$ ,
.
ªª, -
LanguageName
ªª- 9
,
ªª9 :
$str
ªª; L
)
ªªL M
)
ªªM N
throw
«« 
new
«« !
ValidationException
«« -
(
««- .
$"
««. 0
$str
««0 g
{
««g h
language
««h p
.
««p q
LanguageName
««q }
}
««} ~
$str««~ 
"«« 
)«« 
;«« 
if
­­ 
(
­­ 
string
­­ 
.
­­ 
IsNullOrEmpty
­­ $
(
­­$ %
language
­­% -
.
­­- .
Read
­­. 2
.
­­2 3
ToString
­­3 ;
(
­­; <
)
­­< =
)
­­= >
)
­­> ?
throw
®® 
new
®® !
ValidationException
®® -
(
®®- .
$"
®®. 0
$str
®®0 d
{
®®d e
language
®®e m
.
®®m n
Read
®®n r
}
®®r s
$str
®®s u
"
®®u v
)
®®v w
;
®®w x
if
¯¯ 
(
¯¯ 
string
¯¯ 
.
¯¯ 
IsNullOrEmpty
¯¯ $
(
¯¯$ %
language
¯¯% -
.
¯¯- .
Write
¯¯. 3
.
¯¯3 4
ToString
¯¯4 <
(
¯¯< =
)
¯¯= >
)
¯¯> ?
)
¯¯? @
throw
°° 
new
°° !
ValidationException
°° -
(
°°- .
$"
°°. 0
$str
°°0 f
{
°°f g
language
°°g o
.
°°o p
Write
°°p u
}
°°u v
$str
°°v x
"
°°x y
)
°°y z
;
°°z {
if
±± 
(
±± 
string
±± 
.
±± 
IsNullOrEmpty
±± $
(
±±$ %
language
±±% -
.
±±- .
Speak
±±. 3
.
±±3 4
ToString
±±4 <
(
±±< =
)
±±= >
)
±±> ?
)
±±? @
throw
²² 
new
²² !
ValidationException
²² -
(
²²- .
$"
²². 0
$str
²²0 f
{
²²f g
language
²²g o
.
²²o p
Speak
²²p u
}
²²u v
$str
²²v x
"
²²x y
)
²²y z
;
²²z {
return
³³ 
true
³³ 
;
³³ 
}
´´ 	
public
µµ 
bool
µµ #
AchievementValidation
µµ )
(
µµ) *
Achievements
µµ* 6
achievement
µµ7 B
)
µµB C
{
¶¶ 	
if
·· 
(
·· 
string
·· 
.
·· 
IsNullOrEmpty
·· $
(
··$ %
achievement
··% 0
.
··0 1
AchievementTypeId
··1 B
.
··B C
ToString
··C K
(
··K L
)
··L M
)
··M N
||
··O Q
achievement
··R ]
.
··] ^
AchievementTypeId
··^ o
.
··o p
Equals
··p v
(
··v w
$num
··w x
)
··x y
||
··z |
achievement··} 
.·· !
AchievementTypeId·· 
.·· 
Equals·· ¡
(··¡ ¢
$str··¢ ¤
)··¤ ¥
)··¥ ¦
throw
¸¸ 
new
¸¸ !
ValidationException
¸¸ -
(
¸¸- .
$"
¸¸. 0
$str
¸¸0 |
{
¸¸| }
achievement¸¸} 
.¸¸ 
AchievementId¸¸ 
}¸¸ 
$str¸¸ 
"¸¸ 
)¸¸ 
;¸¸ 
return
¹¹ 
true
¹¹ 
;
¹¹ 
}
ºº 	
private
»» 
bool
»» $
DateOfBirthAgeValidate
»» +
(
»»+ ,
DateTime
»», 4
DateOfBirth
»»5 @
)
»»@ A
{
¼¼ 	
var
½½ 
age
½½ 
=
½½ 
DateTime
½½ 
.
½½ 
Now
½½ "
.
½½" #
AddYears
½½# +
(
½½+ ,
-
½½, -
DateOfBirth
½½- 8
.
½½8 9
Year
½½9 =
)
½½= >
.
½½> ?
Year
½½? C
;
½½C D
if
¾¾ 
(
¾¾ 
age
¾¾ 
>=
¾¾ 
$num
¾¾ 
&&
¾¾ 
age
¾¾  
<=
¾¾! #
$num
¾¾# %
)
¾¾% &
return
¿¿ 
true
¿¿ 
;
¿¿ 
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÁÁ 	
}
ÃÃ 
}ÄÄ  2
eC:\Users\yoga.govind\Documents\GitHub\Profile_Management\Source\PMS.API\Validations\UserValidation.cs
	namespace 	
PMS_API
 
{ 
public 

class 
UserValidation 
{ 
public 
bool 
userValidate  
(  !
User! %
user& *
)* +
{+ ,
if		 
(		 
string		 
.		 
IsNullOrEmpty		 #
(		# $
user		$ (
.		( )
Name		) -
)		- .
)		. /
throw

 
new

 
ValidationException

 -
(

- .
$"

. 0
$str

0 _
{

_ `
user

` d
.

d e
Name

e i
}

i j
"

j k
)

k l
;

l m
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
Name# '
,' (
$str) ]
)] ^
)^ _
throw 
new 
ValidationException -
(- .
$". 0
$str	0 °
{
° ±
user
± µ
.
µ ¶
Name
¶ º
}
º »
"
» ¼
)
¼ ½
;
½ ¾
if 
( 
user 
. 
Name 
. 
Length 
<  
$num  !
)! "
throw 
new 
ValidationException -
(- .
$". 0
$str0 d
{d e
usere i
.i j
Namej n
}n o
"o p
)p q
;q r
if 
( 
user 
. 
Name 
. 
Length 
>  
$num  "
)" #
throw 
new 
ValidationException -
(- .
$". 0
$str0 h
{h i
useri m
.m n
Namen r
}r s
"s t
)t u
;u v
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
Email) .
). /
)/ 0
throw 
new 
ValidationException -
(- .
$". 0
$str0 ]
{] ^
user^ b
.b c
Emailc h
}h i
"i j
)j k
;k l
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
Email# (
,( )
$str) i
)i j
)j k
throw 
new 
ValidationException -
(- .
$". 0
$str0 e
{e f
userf j
.j k
Emailk p
}p q
"q r
)r s
;s t
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
UserName) 1
)1 2
)2 3
throw 
new 
ValidationException -
(- .
$". 0
$str0 c
{c d
userd h
.h i
UserNamei q
}q r
"r s
)s t
;t u
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
UserName# +
,+ ,
$str- C
)C D
)D E
throw 
new 
ValidationException -
(- .
$". 0
$str0 c
{c d
userd h
.h i
UserNamei q
}q r
"r s
)s t
;t u
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
Password) 1
)1 2
)2 3
throw 
new 
ValidationException -
(- .
$". 0
$str0 c
{c d
userd h
.h i
Passwordi q
}q r
"r s
)s t
;t u
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
Password# +
,+ ,
$str- n
)n o
)o p
throw 
new 
ValidationException -
(- .
$". 0
$str	0 Ð
{
Ð Ñ
user
Ñ Õ
.
Õ Ö
Password
Ö Þ
}
Þ ß
"
ß à
)
à á
;
á â
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
MobileNumber) 5
)5 6
)6 7
throw 
new 
ValidationException -
(- .
$". 0
$str0 m
{m n
usern r
.r s
MobileNumbers 
}	 
"
 
)
 
;
 
if   
(   
!   
Regex   
.   
IsMatch   
(   
user   "
.  " #
MobileNumber  # /
,  / 0
$str  0 L
)  L M
)  M N
throw!! 
new!! 
ValidationException!! -
(!!- .
$"!!. 0
$str!!0 p
{!!p q
user!!q u
.!!u v
MobileNumber	!!v 
}
!! 
"
!! 
)
!! 
;
!! 
if## 
(## 
string## 
.## 
IsNullOrEmpty## #
(### $
user##$ (
.##( )#
ReportingPersonUsername##) @
)##@ A
)##A B
throw$$ 
new$$ 
ValidationException$$ -
($$- .
$"$$. 0
$str$$0 s
{$$s t
user$$t x
.$$x y$
ReportingPersonUsername	$$y 
}
$$ 
"
$$ 
)
$$ 
;
$$ 
return%% 
true%% 
;%% 
}'' 	
}(( 
})) 